{
  tag: #psblock,
  value: [
    {
      tag: #func,
      name: #clock,
      type: {tag: #type, name: #int},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/fib.bs",
      ln: 1
    }, 
    {
      tag: #func,
      name: #rand,
      type: {tag: #type, name: #int},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/fib.bs",
      ln: 3
    }, 
    {
      tag: #func,
      name: #bsvm2_natfib,
      type: {tag: #type, name: #int},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/fib.bs",
      ln: 4,
      args: [{tag: #var, name: #x, type: {tag: #type, name: #int}}]
    }, 
    {
      tag: #func,
      name: #bsvm2_natsorttst,
      type: {tag: #type, name: #void},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/fib.bs",
      ln: 5,
      args: [{tag: #var, name: #n, type: {tag: #type, name: #int}}]
    }, 
    {
      tag: #func,
      name: #bsvm2_vm_printf,
      type: {tag: #type, name: #variant},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/fib.bs",
      ln: 6,
      args: [
        {tag: #var, name: #str, type: {tag: #type, name: #string}}, 
        {tag: #vararg, name: #va}]
    }, 
    {
      tag: #func,
      name: #printf,
      type: {tag: #type, name: #void},
      tokcnt: 9,
      fn: "bstest/fib.bs",
      ln: 9,
      args: [
        {tag: #var, name: #str, type: {tag: #type, name: #string}}, 
        {tag: #vararg, name: #va}],
      body: {
        tag: #call,
        fn: "bstest/fib.bs",
        ln: 11,
        args: [#str, #va],
        func: #bsvm2_vm_printf
      }
    }, 
    {
      tag: #func,
      name: #fn_noArgReturnsInt,
      type: {tag: #type, name: #int},
      modi: 16777216,
      tokcnt: 1,
      fn: "bstest/fib.bs",
      ln: 11
    }, 
    {
      tag: #class,
      name: #Exception,
      modi: 1,
      fn: "bstest/fib.bs",
      ln: 13,
      body: {
        tag: #psblock,
        value: [
          {
            tag: #var,
            name: #dummy,
            type: {tag: #type, name: #int},
            fn: "bstest/fib.bs",
            ln: 15
          }, 
          {
            tag: #func,
            name: #$CTOR$,
            modi: 1,
            tokcnt: 2,
            fn: "bstest/fib.bs",
            ln: 16,
            body: {tag: #empty_block}
          }]
      }
    }, 
    {
      tag: #package,
      name: #bstest,
      fn: "bstest/fib.bs",
      ln: 21,
      body: {
        tag: #psblock,
        value: [
          {
            tag: #struct,
            name: #Foo,
            modi: 1,
            fn: "bstest/fib.bs",
            ln: 23,
            body: {
              tag: #psblock,
              value: [
                {
                  tag: #vars,
                  fn: "bstest/fib.bs",
                  ln: 24,
                  value: [
                    {tag: #var, name: #x, type: {tag: #type, name: #int}}, 
                    {tag: #var, name: #y, type: {tag: #type, name: #int}}]
                }, 
                {
                  tag: #var,
                  name: #z,
                  type: {tag: #type, name: #double},
                  fn: "bstest/fib.bs",
                  ln: 25
                }]
            }
          }, 
          {
            tag: #class,
            name: #Foo2,
            modi: 1,
            fn: "bstest/fib.bs",
            ln: 27,
            body: {
              tag: #psblock,
              value: [
                {
                  tag: #vars,
                  fn: "bstest/fib.bs",
                  ln: 29,
                  value: [
                    {
                      tag: #var,
                      name: #x,
                      type: {tag: #type, name: #int},
                      modi: 1
                    }, 
                    {
                      tag: #var,
                      name: #y,
                      type: {tag: #type, name: #int},
                      modi: 1
                    }]
                }, 
                {
                  tag: #var,
                  name: #z,
                  type: {tag: #type, name: #double},
                  modi: 1,
                  fn: "bstest/fib.bs",
                  ln: 30
                }, 
                {
                  tag: #func,
                  name: #$CTOR$,
                  modi: 1,
                  tokcnt: 9,
                  fn: "bstest/fib.bs",
                  ln: 31,
                  args: [{tag: #var, name: #a, type: {tag: #type, name: #int}}],
                  body: {
                    tag: #call,
                    fn: "bstest/fib.bs",
                    ln: 34,
                    args: ["Foo2 Ctor %d\n", 4],
                    func: #printf
                  }
                }, 
                {
                  tag: #func,
                  name: #method0,
                  type: {tag: #type, name: #double},
                  modi: 1,
                  tokcnt: 11,
                  fn: "bstest/fib.bs",
                  ln: 36,
                  body: {
                    tag: #return,
                    fn: "bstest/fib.bs",
                    ln: 39,
                    value: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #binary, op: #"+", lhs: #x, rhs: #y},
                      rhs: #z
                    }
                  }
                }]
            }
          }, 
          {
            tag: #vars,
            fn: "bstest/fib.bs",
            ln: 42,
            value: [
              {
                tag: #var,
                name: #i,
                type: {tag: #type, name: #int},
                modi: 2
              }, 
              {
                tag: #var,
                name: #j,
                type: {tag: #type, name: #int},
                modi: 2
              }]
          }, 
          {
            tag: #var,
            name: #arr,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
            modi: 2,
            fn: "bstest/fib.bs",
            ln: 44
          }, 
          {
            tag: #var,
            name: #arr2,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef, value: 256}},
            modi: 2,
            fn: "bstest/fib.bs",
            ln: 45
          }, 
          {
            tag: #func,
            name: #fib,
            type: {tag: #type, name: #int},
            modi: 1,
            tokcnt: 30,
            fn: "bstest/fib.bs",
            ln: 46,
            args: [{tag: #var, name: #x, type: {tag: #type, name: #int}}],
            body: {
              tag: #block,
              value: [
                {
                  tag: #if,
                  fn: "bstest/fib.bs",
                  ln: 49,
                  cond: {tag: #bincmp, op: #"<", lhs: #x, rhs: 2},
                  then: {tag: #return, value: 1}
                }, 
                {
                  tag: #return,
                  fn: "bstest/fib.bs",
                  ln: 50,
                  value: {
                    tag: #binary,
                    op: #"+",
                    lhs: {
                      tag: #call,
                      args: {tag: #binary, op: #"-", lhs: #x, rhs: 1},
                      func: #fib
                    },
                    rhs: {
                      tag: #call,
                      args: {tag: #binary, op: #"-", lhs: #x, rhs: 2},
                      func: #fib
                    }
                  }
                }]
            }
          }, 
          {
            tag: #func,
            name: #selsort,
            type: {tag: #type, name: #int},
            modi: 1,
            tokcnt: 89,
            fn: "bstest/fib.bs",
            ln: 52,
            args: [
              {
                tag: #var,
                name: #arr,
                type: {tag: #type, name: #int, arrays: {tag: #arrdef0}}
              }, 
              {tag: #var, name: #n, type: {tag: #type, name: #int}}],
            body: {
              tag: #block,
              value: [
                {
                  tag: #var,
                  name: #arr1,
                  type: {tag: #type, name: #int, ptrlvl: 1},
                  fn: "bstest/fib.bs",
                  ln: 55
                }, 
                {
                  tag: #vars,
                  fn: "bstest/fib.bs",
                  ln: 56,
                  value: [
                    {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
                    {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
                    {tag: #var, name: #k, type: {tag: #type, name: #int}}]
                }, 
                {
                  tag: #assign,
                  lhs: #arr1,
                  rhs: {
                    tag: #prefix_cast,
                    lhs: #arr,
                    rhs: {tag: #type, name: #int, ptrlvl: 1}
                  },
                  fn: "bstest/fib.bs",
                  ln: 57
                }, 
                {
                  tag: #for,
                  fn: "bstest/fib.bs",
                  ln: 59,
                  cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: #n},
                  then: {
                    tag: #for,
                    cond: {tag: #bincmp, op: #"<", lhs: #j, rhs: #n},
                    then: {
                      tag: #if,
                      fn: "bstest/fib.bs",
                      ln: 62,
                      cond: {
                        tag: #bincmp,
                        op: #"<",
                        lhs: {tag: #loadindex, lhs: #arr1, rhs: #j},
                        rhs: {tag: #loadindex, lhs: #arr1, rhs: #i}
                      },
                      then: {
                        tag: #block,
                        value: [
                          {
                            tag: #assign,
                            lhs: #k,
                            rhs: {tag: #loadindex, lhs: #arr1, rhs: #i},
                            fn: "bstest/fib.bs",
                            ln: 64
                          }, 
                          {
                            tag: #assign,
                            lhs: {tag: #loadindex, lhs: #arr1, rhs: #i},
                            rhs: {tag: #loadindex, lhs: #arr1, rhs: #j},
                            fn: "bstest/fib.bs",
                            ln: 65
                          }, 
                          {
                            tag: #assign,
                            lhs: {tag: #loadindex, lhs: #arr1, rhs: #j},
                            rhs: #k,
                            fn: "bstest/fib.bs",
                            ln: 66
                          }]
                      }
                    },
                    init: {
                      tag: #assign,
                      lhs: #j,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    step: {tag: #postinc, value: #j}
                  },
                  init: {tag: #assign, lhs: #i, rhs: 0},
                  step: {tag: #postinc, value: #i}
                }]
            }
          }, 
          {
            tag: #func,
            name: #sorttst,
            type: {tag: #type, name: #void},
            modi: 1,
            tokcnt: 47,
            fn: "bstest/fib.bs",
            ln: 70,
            args: [{tag: #var, name: #n, type: {tag: #type, name: #int}}],
            body: {
              tag: #block,
              value: [
                {
                  tag: #var,
                  name: #arr,
                  type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
                  fn: "bstest/fib.bs",
                  ln: 73
                }, 
                {
                  tag: #var,
                  name: #i,
                  type: {tag: #type, name: #int},
                  fn: "bstest/fib.bs",
                  ln: 74
                }, 
                {
                  tag: #assign,
                  lhs: #arr,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #int,
                      arrays: {tag: #arrdef, value: #n}
                    }
                  },
                  fn: "bstest/fib.bs",
                  ln: 75
                }, 
                {
                  tag: #for,
                  fn: "bstest/fib.bs",
                  ln: 77,
                  cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: #n},
                  then: {
                    tag: #assign,
                    lhs: {tag: #loadindex, lhs: #arr, rhs: #i},
                    rhs: {tag: #call, args: undefined, func: #rand}
                  },
                  init: {tag: #assign, lhs: #i, rhs: 0},
                  step: {tag: #postinc, value: #i}
                }, 
                {
                  tag: #call,
                  fn: "bstest/fib.bs",
                  ln: 80,
                  args: [#arr, #n],
                  func: #selsort
                }]
            }
          }, 
          {
            tag: #class,
            name: #Fib,
            modi: 1,
            fn: "bstest/fib.bs",
            ln: 82,
            body: {
              tag: #psblock,
              value: [
                {
                  tag: #var,
                  name: #foo,
                  type: {tag: #type, name: #Foo},
                  fn: "bstest/fib.bs",
                  ln: 122
                }, 
                {
                  tag: #func,
                  name: #$CTOR$,
                  modi: 1,
                  tokcnt: 26,
                  fn: "bstest/fib.bs",
                  ln: 123,
                  args: [
                    {tag: #var, name: #x, type: {tag: #type, name: #int}}, 
                    {tag: #var, name: #y, type: {tag: #type, name: #int}}],
                  body: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #foo, rhs: #x},
                        rhs: #x,
                        fn: "bstest/fib.bs",
                        ln: 126
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #foo, rhs: #y},
                        rhs: #y,
                        fn: "bstest/fib.bs",
                        ln: 127
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #foo, rhs: #z},
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: {tag: #loadslot, lhs: #foo, rhs: #x},
                          rhs: {tag: #loadslot, lhs: #foo, rhs: #y}
                        },
                        fn: "bstest/fib.bs",
                        ln: 128
                      }]
                  }
                }, 
                {
                  tag: #func,
                  name: #tst_switch,
                  type: {tag: #type, name: #int},
                  modi: 9,
                  tokcnt: 133,
                  fn: "bstest/fib.bs",
                  ln: 130,
                  args: [{tag: #var, name: #i, type: {tag: #type, name: #int}}],
                  body: {
                    tag: #block,
                    value: [
                      {
                        tag: #var,
                        name: #j,
                        type: {tag: #type, name: #int},
                        fn: "bstest/fib.bs",
                        ln: 133
                      }, 
                      {
                        tag: #switch,
                        fn: "bstest/fib.bs",
                        ln: 134,
                        cond: #i,
                        then: {
                          tag: #block,
                          value: [
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 136,
                              value: 0
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 1,
                              fn: "bstest/fib.bs",
                              ln: 137
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 137,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 137,
                              value: 1
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 4,
                              fn: "bstest/fib.bs",
                              ln: 138
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 138,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 138,
                              value: 2
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 9,
                              fn: "bstest/fib.bs",
                              ln: 139
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 139,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 139,
                              value: 3
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 16,
                              fn: "bstest/fib.bs",
                              ln: 140
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 140,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 140,
                              value: 4
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 25,
                              fn: "bstest/fib.bs",
                              ln: 141
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 141,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 141,
                              value: 5
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 36,
                              fn: "bstest/fib.bs",
                              ln: 142
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 142,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 142,
                              value: 6
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 49,
                              fn: "bstest/fib.bs",
                              ln: 143
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 143,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 143,
                              value: 7
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 64,
                              fn: "bstest/fib.bs",
                              ln: 144
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 144,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 144,
                              value: 8
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 81,
                              fn: "bstest/fib.bs",
                              ln: 145
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 145,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 145,
                              value: 9
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 100,
                              fn: "bstest/fib.bs",
                              ln: 146
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 146,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 146,
                              value: 10
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 121,
                              fn: "bstest/fib.bs",
                              ln: 147
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 147,
                              value: 1
                            }, 
                            {
                              tag: #case,
                              fn: "bstest/fib.bs",
                              ln: 147,
                              value: 11
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: 144,
                              fn: "bstest/fib.bs",
                              ln: 148
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 148,
                              value: 1
                            }, 
                            {
                              tag: #case_default,
                              fn: "bstest/fib.bs",
                              ln: 148
                            }, 
                            {
                              tag: #assign,
                              lhs: #j,
                              rhs: -1,
                              fn: "bstest/fib.bs",
                              ln: 150
                            }, 
                            {
                              tag: #break,
                              fn: "bstest/fib.bs",
                              ln: 150,
                              value: 1
                            }]
                        }
                      }, 
                      {
                        tag: #return,
                        fn: "bstest/fib.bs",
                        ln: 151,
                        value: #j
                      }]
                  }
                }, 
                {
                  tag: #func,
                  name: #tst_ref,
                  type: {tag: #type, name: #int},
                  modi: 9,
                  tokcnt: 13,
                  fn: "bstest/fib.bs",
                  ln: 153,
                  args: [
                    {
                      tag: #var,
                      name: #i,
                      type: {tag: #type, name: #int, reflvl: 1}
                    }, 
                    {
                      tag: #var,
                      name: #j,
                      type: {tag: #type, name: #int, reflvl: 1}
                    }],
                  body: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: #i,
                        rhs: {tag: #binary, op: #"+", lhs: #i, rhs: #j},
                        fn: "bstest/fib.bs",
                        ln: 156
                      }, 
                      {
                        tag: #return,
                        fn: "bstest/fib.bs",
                        ln: 157,
                        value: #j
                      }]
                  }
                }, 
                {
                  tag: #func,
                  name: #tst_func,
                  type: {tag: #type, name: #void},
                  modi: 9,
                  tokcnt: 49,
                  fn: "bstest/fib.bs",
                  ln: 159,
                  body: {
                    tag: #block,
                    value: [
                      {
                        tag: #var,
                        name: #fn,
                        type: {tag: #type, name: #fn_noArgReturnsInt},
                        fn: "bstest/fib.bs",
                        ln: 162
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 164,
                        value: [
                          {
                            tag: #var,
                            name: #x,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #y,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #z,
                            type: {tag: #type, name: #int}
                          }]
                      }, 
                      {
                        tag: #assign,
                        lhs: #x,
                        rhs: 2,
                        fn: "bstest/fib.bs",
                        ln: 165
                      }, 
                      {
                        tag: #assign,
                        lhs: #y,
                        rhs: 3,
                        fn: "bstest/fib.bs",
                        ln: 167
                      }, 
                      {
                        tag: #assign,
                        lhs: #fn,
                        rhs: {
                          tag: #func_dfl,
                          name: #$GS$4D1062E1_0001,
                          type: {tag: #type, name: #int},
                          tokcnt: 5,
                          body: {
                            tag: #tail,
                            fn: "bstest/fib.bs",
                            ln: 169,
                            value: {tag: #binary, op: #"+", lhs: #x, rhs: #y}
                          }
                        },
                        fn: "bstest/fib.bs",
                        ln: 167
                      }, 
                      {
                        tag: #assign,
                        lhs: #z,
                        rhs: {tag: #call, args: undefined, func: #fn},
                        fn: "bstest/fib.bs",
                        ln: 169
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 170,
                        args: ["tst_func: %d %d %d\n", #x, #y, #z],
                        func: #printf
                      }]
                  }
                }, 
                {
                  tag: #func,
                  name: #tst_func2,
                  type: {tag: #type, name: #void},
                  modi: 9,
                  tokcnt: 50,
                  fn: "bstest/fib.bs",
                  ln: 172,
                  body: {
                    tag: #block,
                    value: [
                      {
                        tag: #var,
                        name: #fn,
                        type: {tag: #type, name: #fn_noArgReturnsInt},
                        fn: "bstest/fib.bs",
                        ln: 175
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 177,
                        value: [
                          {
                            tag: #var,
                            name: #x,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #y,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #z,
                            type: {tag: #type, name: #int}
                          }]
                      }, 
                      {
                        tag: #assign,
                        lhs: #x,
                        rhs: 3,
                        fn: "bstest/fib.bs",
                        ln: 178
                      }, 
                      {
                        tag: #assign,
                        lhs: #y,
                        rhs: 4,
                        fn: "bstest/fib.bs",
                        ln: 180
                      }, 
                      {
                        tag: #assign,
                        lhs: #fn,
                        rhs: {
                          tag: #func_aut,
                          name: #$GS$4D1062E1_0002,
                          type: {tag: #type, name: #int},
                          tokcnt: 5,
                          body: {
                            tag: #tail,
                            fn: "bstest/fib.bs",
                            ln: 182,
                            value: {tag: #binary, op: #"+", lhs: #x, rhs: #y}
                          }
                        },
                        fn: "bstest/fib.bs",
                        ln: 180
                      }, 
                      {
                        tag: #assign,
                        lhs: #z,
                        rhs: {tag: #call, args: undefined, func: #fn},
                        fn: "bstest/fib.bs",
                        ln: 182
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 183,
                        args: ["tst_func2: %d %d %d\n", #x, #y, #z],
                        func: #printf
                      }]
                  }
                }, 
                {
                  tag: #func,
                  name: #tst_tryex2,
                  type: {tag: #type, name: #void},
                  modi: 9,
                  tokcnt: 8,
                  fn: "bstest/fib.bs",
                  ln: 185,
                  body: {
                    tag: #throw,
                    fn: "bstest/fib.bs",
                    ln: 188,
                    value: {
                      tag: #new,
                      type: {tag: #type, name: #Exception},
                      args: __unknown_4
                    }
                  }
                }, 
                {
                  tag: #func,
                  name: #tst_tryex,
                  type: {tag: #type, name: #void},
                  modi: 9,
                  tokcnt: 39,
                  fn: "bstest/fib.bs",
                  ln: 190,
                  body: {
                    tag: #finally,
                    lhs: {
                      tag: #catch,
                      lhs: {
                        tag: #try,
                        body: {
                          tag: #block,
                          value: [
                            {
                              tag: #call,
                              fn: "bstest/fib.bs",
                              ln: 194,
                              args: "try 1\n",
                              func: #printf
                            }, 
                            {
                              tag: #call,
                              fn: "bstest/fib.bs",
                              ln: 195,
                              args: undefined,
                              func: #tst_tryex2
                            }, 
                            {
                              tag: #call,
                              fn: "bstest/fib.bs",
                              ln: 196,
                              args: "try 2\n",
                              func: #printf
                            }]
                        }
                      },
                      rhs: {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 199,
                        args: "catch\n",
                        func: #printf
                      },
                      cond: {
                        tag: #var,
                        name: #ex,
                        type: {tag: #type, name: #Exception}
                      }
                    },
                    rhs: {
                      tag: #call,
                      fn: "bstest/fib.bs",
                      ln: 202,
                      args: "finally\n",
                      func: #printf
                    },
                    fn: "bstest/fib.bs",
                    ln: 193
                  }
                }, 
                {
                  tag: #func,
                  name: #tst_letlec,
                  type: {tag: #type, name: #void},
                  modi: 9,
                  tokcnt: 32,
                  fn: "bstest/fib.bs",
                  ln: 205,
                  body: {
                    tag: #block,
                    value: [
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 208,
                        args: "letlec A\n",
                        func: #printf
                      }, 
                      {
                        tag: #let_escape,
                        fn: "bstest/fib.bs",
                        ln: 209,
                        cond: {
                          tag: #var,
                          name: #ex,
                          type: {tag: #type, name: #variant}
                        },
                        then: {
                          tag: #block,
                          value: [
                            {
                              tag: #call,
                              fn: "bstest/fib.bs",
                              ln: 211,
                              args: "letlec B\n",
                              func: #printf
                            }, 
                            {
                              tag: #throw,
                              fn: "bstest/fib.bs",
                              ln: 212,
                              value: #ex
                            }, 
                            {
                              tag: #call,
                              fn: "bstest/fib.bs",
                              ln: 213,
                              args: "letlec C\n",
                              func: #printf
                            }]
                        }
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 215,
                        args: "letlec D\n",
                        func: #printf
                      }]
                  }
                }, 
                {
                  tag: #func,
                  name: #tst_decjpg,
                  type: {tag: #type, name: #void},
                  modi: 9,
                  tokcnt: 176,
                  fn: "bstest/fib.bs",
                  ln: 217,
                  body: {
                    tag: #block,
                    value: [
                      {
                        tag: #var,
                        name: #ctx,
                        type: {tag: #type, name: #PDJPG_Context},
                        fn: "bstest/fib.bs",
                        ln: 220
                      }, 
                      {
                        tag: #var,
                        name: #rgba,
                        type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
                        fn: "bstest/fib.bs",
                        ln: 221
                      }, 
                      {
                        tag: #var,
                        name: #buf,
                        type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
                        fn: "bstest/fib.bs",
                        ln: 222
                      }, 
                      {
                        tag: #var,
                        name: #cs,
                        type: {tag: #type, name: #byte, ptrlvl: 1},
                        fn: "bstest/fib.bs",
                        ln: 223
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 224,
                        value: [
                          {
                            tag: #var,
                            name: #t0,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #t1,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #t2,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #t3,
                            type: {tag: #type, name: #int}
                          }]
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 225,
                        value: [
                          {
                            tag: #var,
                            name: #sz,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #xs,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #ys,
                            type: {tag: #type, name: #int}
                          }]
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 226,
                        value: [
                          {
                            tag: #var,
                            name: #i,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #j,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #k,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #n,
                            type: {tag: #type, name: #int}
                          }]
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 227,
                        args: [
                          "ATst %d\n", 
                          {tag: #loadindex, lhs: #pdjpg_zigzag2, rhs: 23}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #buf,
                        rhs: {
                          tag: #call,
                          args: ["NanoITX_4_1.jpg", #sz],
                          func: #readfile
                        },
                        fn: "bstest/fib.bs",
                        ln: 229
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 231,
                        args: [
                          "JP: %02X %02X sz=%d\n", 
                          {tag: #loadindex, lhs: #buf, rhs: 0}, 
                          {tag: #loadindex, lhs: #buf, rhs: 1}, #sz],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #ctx,
                        rhs: {
                          tag: #call,
                          args: undefined,
                          func: #PDJPG_AllocContext
                        },
                        fn: "bstest/fib.bs",
                        ln: 232
                      }, 
                      {
                        tag: #assign,
                        lhs: #cs,
                        rhs: #buf,
                        fn: "bstest/fib.bs",
                        ln: 234
                      }, 
                      {
                        tag: #postinc,
                        fn: "bstest/fib.bs",
                        ln: 236,
                        value: #cs
                      }, 
                      {
                        tag: #assign,
                        lhs: #t0,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 237
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 239,
                        args: [
                          #ctx, #buf, #sz, 
                          {tag: #unary, op: #"&", value: #xs}, 
                          {tag: #unary, op: #"&", value: #ys}],
                        func: #PDJPG_DecodeBasic
                      }, 
                      {
                        tag: #assign,
                        lhs: #t1,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 240
                      }, 
                      {
                        tag: #assign,
                        lhs: #t2,
                        rhs: {tag: #binary, op: #"-", lhs: #t1, rhs: #t0},
                        fn: "bstest/fib.bs",
                        ln: 241
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 243,
                        args: ["DecJPG %d\n", #t2],
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 244,
                        args: ["Image Dec %d x %d\n", #xs, #ys],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #rgba,
                        rhs: {
                          tag: #new,
                          type: {
                            tag: #type,
                            name: #byte,
                            arrays: {
                              tag: #arrdef,
                              value: {
                                tag: #binary,
                                op: #"*",
                                lhs: {
                                  tag: #binary,
                                  op: #"*",
                                  lhs: #xs,
                                  rhs: #ys
                                },
                                rhs: 4
                              }
                            }
                          }
                        },
                        fn: "bstest/fib.bs",
                        ln: 246
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 248,
                        args: [#ctx, #rgba, #xs, #ys],
                        func: #PDJPG_GetImageRGBA
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 249,
                        args: ["fibtst0.tga", #rgba, #xs, #ys],
                        func: #PDJPG_StoreTGA
                      }]
                  }
                }, 
                {
                  tag: #func,
                  name: #main,
                  type: {tag: #type, name: #void},
                  modi: 9,
                  tokcnt: 570,
                  fn: "bstest/fib.bs",
                  ln: 264,
                  args: [
                    {
                      tag: #var,
                      name: #argv,
                      type: {tag: #type, name: #string, arrays: {tag: #arrdef0}}
                    }],
                  body: {
                    tag: #block,
                    value: [
                      {
                        tag: #var,
                        name: #fstr,
                        type: {tag: #type, name: #Foo},
                        fn: "bstest/fib.bs",
                        ln: 267
                      }, 
                      {
                        tag: #var,
                        name: #tfib,
                        type: {tag: #type, name: #Fib},
                        fn: "bstest/fib.bs",
                        ln: 268
                      }, 
                      {
                        tag: #var,
                        name: #fobj,
                        type: {tag: #type, name: #Foo2},
                        fn: "bstest/fib.bs",
                        ln: 269
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 270,
                        value: [
                          {
                            tag: #var,
                            name: #v0,
                            type: {tag: #type, name: #vec2f}
                          }, 
                          {
                            tag: #var,
                            name: #v1,
                            type: {tag: #type, name: #vec2f}
                          }, 
                          {
                            tag: #var,
                            name: #v2,
                            type: {tag: #type, name: #vec2f}
                          }]
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 271,
                        value: [
                          {
                            tag: #var,
                            name: #w0,
                            type: {tag: #type, name: #vec3f}
                          }, 
                          {
                            tag: #var,
                            name: #w1,
                            type: {tag: #type, name: #vec3f}
                          }, 
                          {
                            tag: #var,
                            name: #w2,
                            type: {tag: #type, name: #vec3f}
                          }]
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 272,
                        value: [
                          {
                            tag: #var,
                            name: #u0,
                            type: {tag: #type, name: #uint}
                          }, 
                          {
                            tag: #var,
                            name: #u1,
                            type: {tag: #type, name: #uint}
                          }, 
                          {
                            tag: #var,
                            name: #u2,
                            type: {tag: #type, name: #uint}
                          }]
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 273,
                        value: [
                          {
                            tag: #var,
                            name: #a1,
                            type: {
                              tag: #type,
                              name: #int,
                              arrays: {tag: #arrdef0}
                            }
                          }, 
                          {
                            tag: #var,
                            name: #a2,
                            type: {
                              tag: #type,
                              name: #int,
                              arrays: {tag: #arrdef0}
                            }
                          }]
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 274,
                        value: [
                          {
                            tag: #var,
                            name: #p1,
                            type: {tag: #type, name: #int, ptrlvl: 1}
                          }, 
                          {
                            tag: #var,
                            name: #p2,
                            type: {tag: #type, name: #int, ptrlvl: 1}
                          }]
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 275,
                        value: [
                          {
                            tag: #var,
                            name: #i,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #j,
                            type: {tag: #type, name: #int}
                          }]
                      }, 
                      {
                        tag: #vars,
                        fn: "bstest/fib.bs",
                        ln: 276,
                        value: [
                          {
                            tag: #var,
                            name: #t0,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #t1,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #t2,
                            type: {tag: #type, name: #int}
                          }, 
                          {
                            tag: #var,
                            name: #sz,
                            type: {tag: #type, name: #int}
                          }]
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 277,
                        args: ["%f\n", 3.14159000000000077079675975255668],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #i,
                        rhs: 8,
                        fn: "bstest/fib.bs",
                        ln: 279
                      }, 
                      {
                        tag: #assign,
                        lhs: #u0,
                        rhs: 3737841664,
                        fn: "bstest/fib.bs",
                        ln: 281
                      }, 
                      {
                        tag: #assign,
                        lhs: #u1,
                        rhs: {tag: #binary, op: #">>", lhs: #u0, rhs: 8},
                        fn: "bstest/fib.bs",
                        ln: 283
                      }, 
                      {
                        tag: #assign,
                        lhs: #u2,
                        rhs: {
                          tag: #binary,
                          op: #"|",
                          lhs: {tag: #binary, op: #"<<", lhs: #u0, rhs: #i},
                          rhs: #u1
                        },
                        fn: "bstest/fib.bs",
                        ln: 284
                      }, 
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: {
                          tag: #binary,
                          op: #"&",
                          lhs: {tag: #binary, op: #">>", lhs: #u2, rhs: 8},
                          rhs: 15
                        },
                        fn: "bstest/fib.bs",
                        ln: 287
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 288,
                        args: ["%08X %08X %08X %d\n", #u0, #u1, #u2, #j],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: -1,
                        fn: "bstest/fib.bs",
                        ln: 289
                      }, 
                      {
                        tag: #ifelse,
                        fn: "bstest/fib.bs",
                        ln: 291,
                        cond: {tag: #bincmp, op: #"<=", lhs: #j, rhs: 0},
                        then: {
                          tag: #call,
                          fn: "bstest/fib.bs",
                          ln: 293,
                          args: "T\n",
                          func: #printf
                        },
                        else: {
                          tag: #call,
                          fn: "bstest/fib.bs",
                          ln: 295,
                          args: "F\n",
                          func: #printf
                        }
                      }, 
                      {
                        tag: #assign,
                        lhs: #t0,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 295
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 297,
                        args: ["BS Fib %d\n", {tag: #call, args: 38, func: #fib}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #t1,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 299
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 300,
                        args: [
                          "BS Dt %d\n", 
                          {tag: #binary, op: #"-", lhs: #t1, rhs: #t0}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #t0,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 301
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 303,
                        args: [
                          "Na Fib %d\n", 
                          {tag: #call, args: 38, func: #bsvm2_natfib}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #t1,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 305
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 306,
                        args: [
                          "Na Dt %d\n", 
                          {tag: #binary, op: #"-", lhs: #t1, rhs: #t0}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #t0,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 307
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 310,
                        args: {tag: #binary, op: #"<<", lhs: 1, rhs: 13},
                        func: #sorttst
                      }, 
                      {
                        tag: #assign,
                        lhs: #t1,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 312
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 314,
                        args: [
                          "Bs SortTst Dt %d\n", 
                          {tag: #binary, op: #"-", lhs: #t1, rhs: #t0}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #t0,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 315
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 317,
                        args: {tag: #binary, op: #"<<", lhs: 1, rhs: 13},
                        func: #bsvm2_natsorttst
                      }, 
                      {
                        tag: #assign,
                        lhs: #t1,
                        rhs: {tag: #call, args: undefined, func: #clock},
                        fn: "bstest/fib.bs",
                        ln: 319
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 321,
                        args: [
                          "Na SortTst Dt %d\n", 
                          {tag: #binary, op: #"-", lhs: #t1, rhs: #t0}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #fobj,
                        rhs: {
                          tag: #new,
                          type: {tag: #type, name: #Foo2},
                          args: 1
                        },
                        fn: "bstest/fib.bs",
                        ln: 322
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #fobj, rhs: #x},
                        rhs: 3,
                        fn: "bstest/fib.bs",
                        ln: 326
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #fobj, rhs: #y},
                        rhs: 4,
                        fn: "bstest/fib.bs",
                        ln: 327
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #fobj, rhs: #z},
                        rhs: 5,
                        fn: "bstest/fib.bs",
                        ln: 328
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 329,
                        args: "FObj ",
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 331,
                        args: ["%d(=3) ", {tag: #loadslot, lhs: #fobj, rhs: #x}],
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 332,
                        args: ["%d(=4) ", {tag: #loadslot, lhs: #fobj, rhs: #y}],
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 333,
                        args: [
                          "%f(=5.0)\n", 
                          {tag: #loadslot, lhs: #fobj, rhs: #z}],
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 334,
                        args: [
                          "FObj Method %f(=12.0)\n", 
                          {
                            tag: #call,
                            args: undefined,
                            func: {tag: #loadslot, lhs: #fobj, rhs: #method0}
                          }],
                        func: #printf
                      }, 
                      {
                        tag: #delete,
                        fn: "bstest/fib.bs",
                        ln: 336,
                        value: #fobj
                      }, 
                      {
                        tag: #assign,
                        lhs: #v0,
                        rhs: {tag: #vector, value: [2, 3]},
                        fn: "bstest/fib.bs",
                        ln: 338
                      }, 
                      {
                        tag: #assign,
                        lhs: #v1,
                        rhs: {tag: #vector, value: [4, 5]},
                        fn: "bstest/fib.bs",
                        ln: 340
                      }, 
                      {
                        tag: #assign,
                        lhs: #v2,
                        rhs: {tag: #binary, op: #"+", lhs: #v0, rhs: #v1},
                        fn: "bstest/fib.bs",
                        ln: 341
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 342,
                        args: [
                          "v2=(%f %f) (=6 8)\n", 
                          {tag: #loadslot, lhs: #v2, rhs: #x}, 
                          {tag: #loadslot, lhs: #v2, rhs: #y}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #w0,
                        rhs: {tag: #vector, value: [1, 0, 0]},
                        fn: "bstest/fib.bs",
                        ln: 344
                      }, 
                      {
                        tag: #assign,
                        lhs: #w1,
                        rhs: {tag: #vector, value: [0, 1, 0]},
                        fn: "bstest/fib.bs",
                        ln: 346
                      }, 
                      {
                        tag: #assign,
                        lhs: #w2,
                        rhs: {tag: #binary, op: #"%", lhs: #w0, rhs: #w1},
                        fn: "bstest/fib.bs",
                        ln: 347
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 348,
                        args: [
                          "w2=(%f %f %f) (=0 0 1)\n", 
                          {tag: #loadslot, lhs: #w2, rhs: #x}, 
                          {tag: #loadslot, lhs: #w2, rhs: #y}, 
                          {tag: #loadslot, lhs: #w2, rhs: #z}],
                        func: #printf
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/fib.bs",
                        ln: 350,
                        cond: {tag: #binary, op: #"&&", lhs: #i, rhs: #j},
                        then: {
                          tag: #call,
                          fn: "bstest/fib.bs",
                          ln: 353,
                          args: "T\n",
                          func: #printf
                        }
                      }, 
                      {
                        tag: #assign,
                        lhs: #a1,
                        rhs: {
                          tag: #new,
                          type: {
                            tag: #type,
                            name: #int,
                            arrays: {tag: #arrdef, value: 64}
                          }
                        },
                        fn: "bstest/fib.bs",
                        ln: 355
                      }, 
                      {
                        tag: #assign,
                        lhs: #a2,
                        rhs: {tag: #binary, op: #"+", lhs: #a1, rhs: 32},
                        fn: "bstest/fib.bs",
                        ln: 359
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #a2, rhs: 0},
                        rhs: 69,
                        fn: "bstest/fib.bs",
                        ln: 360
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 362,
                        args: ["Oat %d\n", {tag: #loadindex, lhs: #a1, rhs: 32}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #p1,
                        rhs: #a1,
                        fn: "bstest/fib.bs",
                        ln: 363
                      }, 
                      {
                        tag: #assign,
                        lhs: #p2,
                        rhs: {tag: #binary, op: #"+", lhs: #p1, rhs: 32},
                        fn: "bstest/fib.bs",
                        ln: 364
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 365,
                        args: ["Opt %d\n", {tag: #unary, op: #"*", value: #p2}],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #i,
                        rhs: {tag: #binary, op: #"-", lhs: #p2, rhs: #p1},
                        fn: "bstest/fib.bs",
                        ln: 366
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 368,
                        args: ["Dptr %d\n", #i],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #i,
                        rhs: 3,
                        fn: "bstest/fib.bs",
                        ln: 369
                      }, 
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: 4,
                        fn: "bstest/fib.bs",
                        ln: 377
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 377,
                        args: ["RtA i=%d, j=%d\n", #i, #j],
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 379,
                        args: [#i, #j],
                        func: #tst_ref
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 380,
                        args: ["RtB i=%d, j=%d\n", #i, #j],
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: {tag: #call, args: #i, func: #tst_switch},
                        fn: "bstest/fib.bs",
                        ln: 381
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 383,
                        args: ["St i=%d, j=%d\n", #i, #j],
                        func: #printf
                      }, 
                      {
                        tag: #assignop,
                        op: #"+",
                        lhs: #i,
                        rhs: 2,
                        fn: "bstest/fib.bs",
                        ln: 384
                      }, 
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: {tag: #binary, op: #"*", lhs: #i, rhs: #j},
                        fn: "bstest/fib.bs",
                        ln: 386
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 387,
                        args: ["St2 i=%d, j=%d\n", #i, #j],
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 388,
                        args: undefined,
                        func: #tst_func
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 390,
                        args: undefined,
                        func: #tst_func2
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 391,
                        args: undefined,
                        func: #tst_letlec
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 393,
                        args: undefined,
                        func: #tst_tryex
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/fib.bs",
                        ln: 395,
                        args: undefined,
                        func: #tst_decjpg
                      }]
                  }
                }]
            }
          }]
      }
    }]
}{
  tag: #psblock,
  value: [
    {
      tag: #func,
      name: #fopen,
      type: {tag: #type, name: #void, ptrlvl: 1},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/bs_decjpg.bs",
      ln: 1,
      args: [
        {tag: #var, name: #path, type: {tag: #type, name: #cstring}}, 
        {tag: #var, name: #mode, type: {tag: #type, name: #cstring}}]
    }, 
    {
      tag: #func,
      name: #fclose,
      type: {tag: #type, name: #int},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/bs_decjpg.bs",
      ln: 2,
      args: [{tag: #var, name: #fd, type: {tag: #type, name: #void, ptrlvl: 1}}]
    }, 
    {
      tag: #func,
      name: #fread,
      type: {tag: #type, name: #int},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/bs_decjpg.bs",
      ln: 3,
      args: [
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #n1, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #n2, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #fd, type: {tag: #type, name: #void, ptrlvl: 1}}]
    }, 
    {
      tag: #func,
      name: #fwrite,
      type: {tag: #type, name: #int},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/bs_decjpg.bs",
      ln: 4,
      args: [
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #n1, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #n2, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #fd, type: {tag: #type, name: #void, ptrlvl: 1}}]
    }, 
    {
      tag: #func,
      name: #fseek,
      type: {tag: #type, name: #int},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/bs_decjpg.bs",
      ln: 5,
      args: [
        {tag: #var, name: #fd, type: {tag: #type, name: #void, ptrlvl: 1}}, 
        {tag: #var, name: #pos, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #rel, type: {tag: #type, name: #int}}]
    }, 
    {
      tag: #func,
      name: #ftell,
      type: {tag: #type, name: #int},
      modi: 32,
      tokcnt: 1,
      fn: "bstest/bs_decjpg.bs",
      ln: 6,
      args: [{tag: #var, name: #fd, type: {tag: #type, name: #void, ptrlvl: 1}}]
    }, 
    {
      tag: #func,
      name: #readfile,
      type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
      modi: 1,
      tokcnt: 91,
      fn: "bstest/bs_decjpg.bs",
      ln: 7,
      args: [
        {tag: #var, name: #path, type: {tag: #type, name: #string}}, 
        {tag: #var, name: #rsz, type: {tag: #type, name: #int, reflvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #buf,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
            fn: "bstest/bs_decjpg.bs",
            ln: 10
          }, 
          {
            tag: #var,
            name: #fd,
            type: {tag: #type, name: #void, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 11
          }, 
          {
            tag: #var,
            name: #sz,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 12
          }, 
          {
            tag: #assign,
            lhs: #fd,
            rhs: {tag: #call, args: [#path, "rb"], func: #fopen},
            fn: "bstest/bs_decjpg.bs",
            ln: 13
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 15,
            cond: {tag: #unary, op: #"!", value: #fd},
            then: {tag: #return, value: #null}
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 17,
            args: [#fd, 0, 2],
            func: #fseek
          }, 
          {
            tag: #assign,
            lhs: #sz,
            rhs: {tag: #call, args: #fd, func: #ftell},
            fn: "bstest/bs_decjpg.bs",
            ln: 19
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 20,
            args: [#fd, 0, 0],
            func: #fseek
          }, 
          {
            tag: #assign,
            lhs: #buf,
            rhs: {
              tag: #new,
              type: {tag: #type, name: #byte, arrays: {tag: #arrdef, value: #sz}}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 21
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 22,
            args: [#buf, 1, #sz, #fd],
            func: #fread
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 23,
            args: #fd,
            func: #fclose
          }, 
          {
            tag: #assign,
            lhs: #rsz,
            rhs: #sz,
            fn: "bstest/bs_decjpg.bs",
            ln: 24
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 26, value: #buf}]
      }
    }, 
    {
      tag: #var,
      name: #DCTSZ,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 28,
      init: 8
    }, 
    {
      tag: #var,
      name: #DCTSZ2,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 30,
      init: 64
    }, 
    {
      tag: #var,
      name: #JPG_SOF0,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 31,
      init: 192
    }, 
    {
      tag: #var,
      name: #JPG_SOF1,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 33,
      init: 193
    }, 
    {
      tag: #var,
      name: #JPG_SOF2,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 34,
      init: 194
    }, 
    {
      tag: #var,
      name: #JPG_SOF3,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 35,
      init: 195
    }, 
    {
      tag: #var,
      name: #JPG_DHT,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 36,
      init: 196
    }, 
    {
      tag: #var,
      name: #JPG_SOF5,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 37,
      init: 197
    }, 
    {
      tag: #var,
      name: #JPG_SOF6,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 38,
      init: 198
    }, 
    {
      tag: #var,
      name: #JPG_SOF7,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 39,
      init: 199
    }, 
    {
      tag: #var,
      name: #JPG_JPG,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 40,
      init: 200
    }, 
    {
      tag: #var,
      name: #JPG_SOF9,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 41,
      init: 201
    }, 
    {
      tag: #var,
      name: #JPG_SOF10,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 42,
      init: 202
    }, 
    {
      tag: #var,
      name: #JPG_SOF11,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 43,
      init: 203
    }, 
    {
      tag: #var,
      name: #JPG_DAC,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 44,
      init: 204
    }, 
    {
      tag: #var,
      name: #JPG_SOF13,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 45,
      init: 205
    }, 
    {
      tag: #var,
      name: #JPG_SOF14,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 46,
      init: 206
    }, 
    {
      tag: #var,
      name: #JPG_SOF15,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 47,
      init: 207
    }, 
    {
      tag: #var,
      name: #JPG_RST0,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 48,
      init: 208
    }, 
    {
      tag: #var,
      name: #JPG_RST1,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 50,
      init: 209
    }, 
    {
      tag: #var,
      name: #JPG_RST2,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 51,
      init: 210
    }, 
    {
      tag: #var,
      name: #JPG_RST3,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 52,
      init: 211
    }, 
    {
      tag: #var,
      name: #JPG_RST4,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 53,
      init: 212
    }, 
    {
      tag: #var,
      name: #JPG_RST5,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 54,
      init: 213
    }, 
    {
      tag: #var,
      name: #JPG_RST6,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 55,
      init: 214
    }, 
    {
      tag: #var,
      name: #JPG_RST7,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 56,
      init: 215
    }, 
    {
      tag: #var,
      name: #JPG_SOI,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 57,
      init: 216
    }, 
    {
      tag: #var,
      name: #JPG_EOI,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 59,
      init: 217
    }, 
    {
      tag: #var,
      name: #JPG_SOS,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 60,
      init: 218
    }, 
    {
      tag: #var,
      name: #JPG_DQT,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 61,
      init: 219
    }, 
    {
      tag: #var,
      name: #JPG_DNL,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 62,
      init: 220
    }, 
    {
      tag: #var,
      name: #JPG_DRI,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 63,
      init: 221
    }, 
    {
      tag: #var,
      name: #JPG_DHP,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 64,
      init: 222
    }, 
    {
      tag: #var,
      name: #JPG_EXP,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 65,
      init: 223
    }, 
    {
      tag: #var,
      name: #JPG_APP0,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 66,
      init: 224
    }, 
    {
      tag: #var,
      name: #JPG_APP1,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 68,
      init: 225
    }, 
    {
      tag: #var,
      name: #JPG_APP2,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 69,
      init: 226
    }, 
    {
      tag: #var,
      name: #JPG_APP3,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 70,
      init: 227
    }, 
    {
      tag: #var,
      name: #JPG_APP4,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 71,
      init: 228
    }, 
    {
      tag: #var,
      name: #JPG_APP5,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 72,
      init: 229
    }, 
    {
      tag: #var,
      name: #JPG_APP6,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 73,
      init: 230
    }, 
    {
      tag: #var,
      name: #JPG_APP7,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 74,
      init: 231
    }, 
    {
      tag: #var,
      name: #JPG_APP8,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 75,
      init: 232
    }, 
    {
      tag: #var,
      name: #JPG_APP9,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 76,
      init: 233
    }, 
    {
      tag: #var,
      name: #JPG_APP10,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 77,
      init: 234
    }, 
    {
      tag: #var,
      name: #JPG_APP11,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 78,
      init: 235
    }, 
    {
      tag: #var,
      name: #JPG_APP12,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 79,
      init: 236
    }, 
    {
      tag: #var,
      name: #JPG_APP13,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 80,
      init: 237
    }, 
    {
      tag: #var,
      name: #JPG_APP14,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 81,
      init: 238
    }, 
    {
      tag: #var,
      name: #JPG_APP15,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 82,
      init: 239
    }, 
    {
      tag: #var,
      name: #JPG_JPG0,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 83,
      init: 240
    }, 
    {
      tag: #var,
      name: #JPG_JPG1,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 85,
      init: 241
    }, 
    {
      tag: #var,
      name: #JPG_JPG2,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 86,
      init: 242
    }, 
    {
      tag: #var,
      name: #JPG_JPG3,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 87,
      init: 243
    }, 
    {
      tag: #var,
      name: #JPG_JPG4,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 88,
      init: 244
    }, 
    {
      tag: #var,
      name: #JPG_JPG5,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 89,
      init: 245
    }, 
    {
      tag: #var,
      name: #JPG_JPG6,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 90,
      init: 246
    }, 
    {
      tag: #var,
      name: #JPG_JPG7,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 91,
      init: 247
    }, 
    {
      tag: #var,
      name: #JPG_JPG8,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 92,
      init: 248
    }, 
    {
      tag: #var,
      name: #JPG_JPG9,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 93,
      init: 249
    }, 
    {
      tag: #var,
      name: #JPG_JPG10,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 94,
      init: 250
    }, 
    {
      tag: #var,
      name: #JPG_JPG11,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 95,
      init: 251
    }, 
    {
      tag: #var,
      name: #JPG_JPG12,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 96,
      init: 252
    }, 
    {
      tag: #var,
      name: #JPG_JPG13,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 97,
      init: 253
    }, 
    {
      tag: #var,
      name: #JPG_COM,
      type: {tag: #type, name: #int},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 98,
      init: 254
    }, 
    {
      tag: #var,
      name: #pdjpg_marker,
      type: {tag: #type, name: #string, arrays: {tag: #arrdef0}},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 99,
      init: {
        tag: #array,
        value: [
          "SOF0", "SOF1", "SOF2", "SOF3", "DHT", "SOF5", "SOF6", "SOF7", 
          "JPG", "SOF9", "SOF10", "SOF11", "DAC", "SOF13", "SOF14", "SOF15", 
          "RST0", "RST1", "RST2", "RST3", "RST4", "RST5", "RST6", "RST7", 
          "SOI", "EOI", "SOS", "DQT", "DNL", "DRI", "DHP", "EXP", "APP0", 
          "APP1", "APP2", "APP3", "APP4", "APP5", "APP6", "APP7", "APP8", 
          "APP9", "APP10", "APP11", "APP12", "APP13", "APP14", "APP15", 
          "JPG0", "JPG1", "JPG2", "JPG3", "JPG4", "JPG5", "JPG6", "JPG7", 
          "JPG8", "JPG9", "JPG10", "JPG11", "JPG12", "JPG13", "COM", ""]
      }
    }, 
    {
      tag: #var,
      name: #pdjpg_zigzag,
      type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 110,
      init: {
        tag: #array,
        value: [
          0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 
          17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44, 53, 10, 19, 23, 32, 
          39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 
          50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63]
      }
    }, 
    {
      tag: #var,
      name: #pdjpg_zigzag2,
      type: {tag: #type, name: #int, arrays: {tag: #arrdef, value: 64}},
      modi: 16,
      fn: "bstest/bs_decjpg.bs",
      ln: 121,
      init: {
        tag: #array,
        value: [
          0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 
          26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 
          56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 
          45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]
      }
    }, 
    {
      tag: #var,
      name: #u16,
      type: {tag: #type, name: #ushort},
      modi: 16777216,
      fn: "bstest/bs_decjpg.bs",
      ln: 132
    }, 
    {
      tag: #var,
      name: #s16,
      type: {tag: #type, name: #short},
      modi: 16777216,
      fn: "bstest/bs_decjpg.bs",
      ln: 134
    }, 
    {
      tag: #var,
      name: #u32,
      type: {tag: #type, name: #uint},
      modi: 16777216,
      fn: "bstest/bs_decjpg.bs",
      ln: 135
    }, 
    {
      tag: #var,
      name: #s32,
      type: {tag: #type, name: #int},
      modi: 16777216,
      fn: "bstest/bs_decjpg.bs",
      ln: 136
    }, 
    {
      tag: #var,
      name: #u64,
      type: {tag: #type, name: #ulong},
      modi: 16777216,
      fn: "bstest/bs_decjpg.bs",
      ln: 137
    }, 
    {
      tag: #var,
      name: #u64,
      type: {tag: #type, name: #long},
      modi: 16777216,
      fn: "bstest/bs_decjpg.bs",
      ln: 138
    }, 
    {
      tag: #class,
      name: #PDJPG_Context,
      modi: 1,
      fn: "bstest/bs_decjpg.bs",
      ln: 139,
      body: {
        tag: #psblock,
        value: [
          {
            tag: #func,
            name: #$CTOR$,
            modi: 1,
            tokcnt: 175,
            fn: "bstest/bs_decjpg.bs",
            ln: 142,
            body: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #huff_code,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #u16,
                      arrays: {
                        tag: #arrdef,
                        value: {tag: #binary, op: #"*", lhs: 8, rhs: 256}
                      }
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 144
                }, 
                {
                  tag: #assign,
                  lhs: #huff_mask,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #u16,
                      arrays: {
                        tag: #arrdef,
                        value: {tag: #binary, op: #"*", lhs: 8, rhs: 256}
                      }
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 145
                }, 
                {
                  tag: #assign,
                  lhs: #huff_next,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #s16,
                      arrays: {
                        tag: #arrdef,
                        value: {tag: #binary, op: #"*", lhs: 8, rhs: 256}
                      }
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 146
                }, 
                {
                  tag: #assign,
                  lhs: #huff_len,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #byte,
                      arrays: {
                        tag: #arrdef,
                        value: {tag: #binary, op: #"*", lhs: 8, rhs: 256}
                      }
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 147
                }, 
                {
                  tag: #assign,
                  lhs: #huff_idx,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #s16,
                      arrays: {
                        tag: #arrdef,
                        value: {tag: #binary, op: #"*", lhs: 8, rhs: 256}
                      }
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 148
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_qt,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #byte,
                      arrays: {
                        tag: #arrdef,
                        value: {tag: #binary, op: #"*", lhs: 4, rhs: 64}
                      }
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 149
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_cid,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #byte,
                      arrays: {tag: #arrdef, value: 16}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 151
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_ch,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #byte,
                      arrays: {tag: #arrdef, value: 16}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 153
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_cv,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #byte,
                      arrays: {tag: #arrdef, value: 16}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 154
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_qid,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #byte,
                      arrays: {tag: #arrdef, value: 16}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 155
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_cxi,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #int,
                      arrays: {tag: #arrdef, value: 16}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 156
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_cyi,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #int,
                      arrays: {tag: #arrdef, value: 16}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 157
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_scid,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #int,
                      arrays: {tag: #arrdef, value: 4}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 158
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_scn,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #int,
                      arrays: {tag: #arrdef, value: 4}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 160
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_sibuf,
                  rhs: {
                    tag: #prefix_cast,
                    lhs: {
                      tag: #new,
                      type: {
                        tag: #type,
                        name: #variant,
                        arrays: {tag: #arrdef, value: 4}
                      }
                    },
                    rhs: {
                      tag: #type,
                      name: #byte,
                      arrays: [{tag: #arrdef0}, {tag: #arrdef0}]
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 161
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_schs,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #int,
                      arrays: {tag: #arrdef, value: 4}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 163
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_scvs,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #int,
                      arrays: {tag: #arrdef, value: 4}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 165
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_schsci,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #int,
                      arrays: {tag: #arrdef, value: 4}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 166
                }, 
                {
                  tag: #assign,
                  lhs: #jpg_scvsci,
                  rhs: {
                    tag: #new,
                    type: {
                      tag: #type,
                      name: #int,
                      arrays: {tag: #arrdef, value: 4}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 167
                }]
            }
          }, 
          {
            tag: #var,
            name: #huff_css,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 169
          }, 
          {
            tag: #var,
            name: #huff_cs,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 171
          }, 
          {
            tag: #var,
            name: #huff_ct,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 172
          }, 
          {
            tag: #var,
            name: #huff_win,
            type: {tag: #type, name: #uint},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 173
          }, 
          {
            tag: #var,
            name: #huff_pos,
            type: {tag: #type, name: #int},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 174
          }, 
          {
            tag: #var,
            name: #huff_isend,
            type: {tag: #type, name: #int},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 175
          }, 
          {
            tag: #var,
            name: #huff_code,
            type: {tag: #type, name: #u16, ptrlvl: 1},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 176
          }, 
          {
            tag: #var,
            name: #huff_mask,
            type: {tag: #type, name: #u16, ptrlvl: 1},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 190
          }, 
          {
            tag: #var,
            name: #huff_next,
            type: {tag: #type, name: #s16, ptrlvl: 1},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 191
          }, 
          {
            tag: #var,
            name: #huff_len,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 192
          }, 
          {
            tag: #var,
            name: #huff_idx,
            type: {tag: #type, name: #s16, ptrlvl: 1},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 193
          }, 
          {
            tag: #var,
            name: #jpg_qt,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 194
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 197,
            value: [
              {
                tag: #var,
                name: #xs,
                type: {tag: #type, name: #int},
                modi: 1
              }, 
              {
                tag: #var,
                name: #ys,
                type: {tag: #type, name: #int},
                modi: 1
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 199,
            value: [
              {
                tag: #var,
                name: #lxs,
                type: {tag: #type, name: #int},
                modi: 1
              }, 
              {
                tag: #var,
                name: #lys,
                type: {tag: #type, name: #int},
                modi: 1
              }]
          }, 
          {
            tag: #var,
            name: #jpg_cid,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 200
          }, 
          {
            tag: #var,
            name: #jpg_ch,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 208
          }, 
          {
            tag: #var,
            name: #jpg_cv,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 209
          }, 
          {
            tag: #var,
            name: #jpg_qid,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 210
          }, 
          {
            tag: #var,
            name: #jpg_cxi,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 211
          }, 
          {
            tag: #var,
            name: #jpg_cyi,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 212
          }, 
          {
            tag: #var,
            name: #jpg_nc,
            type: {tag: #type, name: #int},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 213
          }, 
          {
            tag: #var,
            name: #jpg_chm,
            type: {tag: #type, name: #int},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 215
          }, 
          {
            tag: #var,
            name: #jpg_chn,
            type: {tag: #type, name: #int},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 216
          }, 
          {
            tag: #var,
            name: #jpg_scid,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 217
          }, 
          {
            tag: #var,
            name: #jpg_scn,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 221
          }, 
          {
            tag: #var,
            name: #jpg_sibuf,
            type: {
              tag: #type,
              name: #byte,
              arrays: [{tag: #arrdef0}, {tag: #arrdef0}]
            },
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 222
          }, 
          {
            tag: #var,
            name: #jpg_sabuf,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 223
          }, 
          {
            tag: #var,
            name: #jpg_schs,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 224
          }, 
          {
            tag: #var,
            name: #jpg_scvs,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 231
          }, 
          {
            tag: #var,
            name: #jpg_schsci,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 232
          }, 
          {
            tag: #var,
            name: #jpg_scvsci,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef0}},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 233
          }, 
          {
            tag: #var,
            name: #jpg_is420,
            type: {tag: #type, name: #byte},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 234
          }, 
          {
            tag: #var,
            name: #jpg_is444,
            type: {tag: #type, name: #byte},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 236
          }, 
          {
            tag: #var,
            name: #jpg_rdct,
            type: {tag: #type, name: #byte},
            modi: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 237
          }]
      }
    }, 
    {
      tag: #func,
      name: #clamp255,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 29,
      fn: "bstest/bs_decjpg.bs",
      ln: 239,
      args: [{tag: #var, name: #x, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 242,
            cond: {tag: #bincmp, op: #"<", lhs: #x, rhs: 0},
            then: {tag: #return, value: 0}
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 244,
            cond: {tag: #bincmp, op: #">", lhs: #x, rhs: 255},
            then: {tag: #return, value: 255}
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 246, value: #x}]
      }
    }, 
    {
      tag: #func,
      name: #memcpy,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 130,
      fn: "bstest/bs_decjpg.bs",
      ln: 248,
      args: [
        {tag: #var, name: #dst, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #src, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #sz, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 251,
            value: [
              {
                tag: #var,
                name: #cs,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #ct,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cse,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #assign,
            lhs: #cs,
            rhs: #src,
            fn: "bstest/bs_decjpg.bs",
            ln: 252
          }, 
          {
            tag: #assign,
            lhs: #cse,
            rhs: {tag: #binary, op: #"+", lhs: #cs, rhs: #sz},
            fn: "bstest/bs_decjpg.bs",
            ln: 254
          }, 
          {
            tag: #assign,
            lhs: #ct,
            rhs: #dst,
            fn: "bstest/bs_decjpg.bs",
            ln: 254
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 254,
            cond: {
              tag: #bincmp,
              op: #"<=",
              lhs: {tag: #binary, op: #"+", lhs: #cs, rhs: 16},
              rhs: #cse
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {
                    tag: #unary,
                    op: #"*",
                    value: {
                      tag: #prefix_cast,
                      lhs: #ct,
                      rhs: {tag: #type, name: #long, ptrlvl: 1}
                    }
                  },
                  rhs: {
                    tag: #unary,
                    op: #"*",
                    value: {
                      tag: #prefix_cast,
                      lhs: #cs,
                      rhs: {tag: #type, name: #long, ptrlvl: 1}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 257
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #unary,
                    op: #"*",
                    value: {
                      tag: #prefix_cast,
                      lhs: {tag: #binary, op: #"+", lhs: #ct, rhs: 8},
                      rhs: {tag: #type, name: #long, ptrlvl: 1}
                    }
                  },
                  rhs: {
                    tag: #unary,
                    op: #"*",
                    value: {
                      tag: #prefix_cast,
                      lhs: {tag: #binary, op: #"+", lhs: #cs, rhs: 8},
                      rhs: {tag: #type, name: #long, ptrlvl: 1}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 258
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #ct,
                  rhs: 16,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 259
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #cs,
                  rhs: 16,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 260
                }]
            }
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 261,
            cond: {
              tag: #bincmp,
              op: #"<=",
              lhs: {tag: #binary, op: #"+", lhs: #cs, rhs: 4},
              rhs: #cse
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {
                    tag: #unary,
                    op: #"*",
                    value: {
                      tag: #prefix_cast,
                      lhs: #ct,
                      rhs: {tag: #type, name: #int, ptrlvl: 1}
                    }
                  },
                  rhs: {
                    tag: #unary,
                    op: #"*",
                    value: {
                      tag: #prefix_cast,
                      lhs: #cs,
                      rhs: {tag: #type, name: #int, ptrlvl: 1}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 263
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #ct,
                  rhs: 4,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 264
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #cs,
                  rhs: 4,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 265
                }]
            }
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 266,
            cond: {tag: #bincmp, op: #"<", lhs: #cs, rhs: #cse},
            then: {
              tag: #assign,
              lhs: {tag: #unary, op: #"*", value: {tag: #postinc, value: #ct}},
              rhs: {tag: #unary, op: #"*", value: {tag: #postinc, value: #cs}},
              fn: "bstest/bs_decjpg.bs",
              ln: 270
            }
          }]
      }
    }, 
    {
      tag: #func,
      name: #memset,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 32,
      fn: "bstest/bs_decjpg.bs",
      ln: 271,
      args: [
        {tag: #var, name: #dst, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #val, type: {tag: #type, name: #byte}}, 
        {tag: #var, name: #sz, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 274,
            value: [
              {
                tag: #var,
                name: #ct,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cte,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #assign,
            lhs: #ct,
            rhs: #dst,
            fn: "bstest/bs_decjpg.bs",
            ln: 275
          }, 
          {
            tag: #assign,
            lhs: #cte,
            rhs: {tag: #binary, op: #"+", lhs: #ct, rhs: #sz},
            fn: "bstest/bs_decjpg.bs",
            ln: 277
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 277,
            cond: {tag: #bincmp, op: #"<", lhs: #ct, rhs: #cte},
            then: {
              tag: #assign,
              lhs: {tag: #unary, op: #"*", value: {tag: #postinc, value: #ct}},
              rhs: #val,
              fn: "bstest/bs_decjpg.bs",
              ln: 279
            }
          }]
      }
    }, 
    {
      tag: #func,
      name: #strcmp,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 98,
      fn: "bstest/bs_decjpg.bs",
      ln: 280,
      args: [
        {tag: #var, name: #s1, type: {tag: #type, name: #char8, ptrlvl: 1}}, 
        {tag: #var, name: #s2, type: {tag: #type, name: #char8, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 283,
            cond: {
              tag: #binary,
              op: #"&&",
              lhs: {
                tag: #binary,
                op: #"&&",
                lhs: {tag: #unary, op: #"*", value: #s1},
                rhs: {tag: #unary, op: #"*", value: #s2}
              },
              rhs: {
                tag: #bincmp,
                op: #"==",
                lhs: {tag: #unary, op: #"*", value: #s1},
                rhs: {tag: #unary, op: #"*", value: #s2}
              }
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #postinc,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 285,
                  value: #s1
                }, 
                {
                  tag: #postinc,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 285,
                  value: #s2
                }]
            }
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 285,
            cond: {
              tag: #unary,
              op: #"!",
              value: {tag: #unary, op: #"*", value: #s1}
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 287,
                  cond: {
                    tag: #unary,
                    op: #"!",
                    value: {tag: #unary, op: #"*", value: #s2}
                  },
                  then: {tag: #return, value: 0}
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 289,
                  value: 1
                }]
            }
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 291,
            cond: {
              tag: #unary,
              op: #"!",
              value: {tag: #unary, op: #"*", value: #s2}
            },
            then: {tag: #return, value: -1}
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 292,
            cond: {
              tag: #bincmp,
              op: #">",
              lhs: {tag: #unary, op: #"*", value: #s1},
              rhs: {tag: #unary, op: #"*", value: #s2}
            },
            then: {tag: #return, value: -1}
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 293,
            cond: {
              tag: #bincmp,
              op: #"<",
              lhs: {tag: #unary, op: #"*", value: #s1},
              rhs: {tag: #unary, op: #"*", value: #s2}
            },
            then: {tag: #return, value: 1}
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 294, value: 0}]
      }
    }, 
    {
      tag: #func,
      name: #strlen,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 27,
      fn: "bstest/bs_decjpg.bs",
      ln: 296,
      args: [{tag: #var, name: #s1, type: {tag: #type, name: #char8, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #n,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 299
          }, 
          {
            tag: #assign,
            lhs: #n,
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 300
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 301,
            cond: {tag: #unary, op: #"*", value: #s1},
            then: {
              tag: #block,
              value: [
                {
                  tag: #postinc,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 302,
                  value: #s1
                }, 
                {
                  tag: #postinc,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 302,
                  value: #n
                }]
            }
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 302, value: #n}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_AllocContext,
      type: {tag: #type, name: #PDJPG_Context},
      modi: 1,
      tokcnt: 17,
      fn: "bstest/bs_decjpg.bs",
      ln: 304,
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #ctx,
            type: {tag: #type, name: #PDJPG_Context},
            fn: "bstest/bs_decjpg.bs",
            ln: 307
          }, 
          {
            tag: #assign,
            lhs: #ctx,
            rhs: {
              tag: #new,
              type: {tag: #type, name: #PDJPG_Context},
              args: __unknown_4
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 308
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 309, value: #ctx}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_FreeContext,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 38,
      fn: "bstest/bs_decjpg.bs",
      ln: 311,
      args: [{tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #i,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 314
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 315,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: 4},
            then: {
              tag: #if,
              cond: {
                tag: #loadindex,
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                rhs: #i
              },
              then: {
                tag: #delete,
                value: {
                  tag: #loadindex,
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                  rhs: #i
                }
              }
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {tag: #delete, fn: "bstest/bs_decjpg.bs", ln: 319, value: #ctx}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_Init,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 28,
      fn: "bstest/bs_decjpg.bs",
      ln: 322,
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #init,
            type: {tag: #type, name: #int},
            modi: 8,
            fn: "bstest/bs_decjpg.bs",
            ln: 325
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 326,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 327,
            value: [
              {tag: #var, name: #f, type: {tag: #type, name: #float}}, 
              {tag: #var, name: #g, type: {tag: #type, name: #float}}]
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 328,
            cond: #init,
            then: {tag: #return, value: null}
          }, 
          {
            tag: #assign,
            lhs: #init,
            rhs: 1,
            fn: "bstest/bs_decjpg.bs",
            ln: 330
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_TransIDCT_Horiz,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 319,
      fn: "bstest/bs_decjpg.bs",
      ln: 332,
      args: [
        {tag: #var, name: #iblk, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #oblk, type: {tag: #type, name: #int, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 335,
            value: [
              {tag: #var, name: #a, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #b, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #c, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #d, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #e, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #f, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 336,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 337,
            value: [
              {tag: #var, name: #m, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #n, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #o, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #p, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #a,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 0},
              rhs: 91
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 338
          }, 
          {
            tag: #assign,
            lhs: #b,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 4},
              rhs: 91
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 340
          }, 
          {
            tag: #assign,
            lhs: #c,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 2},
              rhs: 118
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 340
          }, 
          {
            tag: #assign,
            lhs: #d,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 2},
              rhs: 49
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 341
          }, 
          {
            tag: #assign,
            lhs: #e,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 6},
              rhs: 118
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 341
          }, 
          {
            tag: #assign,
            lhs: #f,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 6},
              rhs: 49
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 342
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {tag: #binary, op: #"+", lhs: #a, rhs: #c},
                rhs: #b
              },
              rhs: #f
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 342
          }, 
          {
            tag: #assign,
            lhs: #j,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {tag: #binary, op: #"+", lhs: #a, rhs: #d},
                rhs: #b
              },
              rhs: #e
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 343
          }, 
          {
            tag: #assign,
            lhs: #k,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {tag: #binary, op: #"-", lhs: #a, rhs: #d},
                rhs: #b
              },
              rhs: #e
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 343
          }, 
          {
            tag: #assign,
            lhs: #l,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {tag: #binary, op: #"-", lhs: #a, rhs: #c},
                rhs: #b
              },
              rhs: #f
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 343
          }, 
          {
            tag: #assign,
            lhs: #m,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"+",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 1},
                    rhs: 126
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 3},
                    rhs: 106
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 5},
                  rhs: 71
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 7},
                rhs: 25
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 343
          }, 
          {
            tag: #assign,
            lhs: #n,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 1},
                    rhs: 106
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 3},
                    rhs: 25
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 5},
                  rhs: 126
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 7},
                rhs: 71
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 344
          }, 
          {
            tag: #assign,
            lhs: #o,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 1},
                    rhs: 71
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 3},
                    rhs: 126
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 5},
                  rhs: 25
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 7},
                rhs: 106
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 345
          }, 
          {
            tag: #assign,
            lhs: #p,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 1},
                    rhs: 25
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 3},
                    rhs: 71
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 5},
                  rhs: 106
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 7},
                rhs: 126
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 346
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 0},
            rhs: {tag: #binary, op: #"+", lhs: #i, rhs: #m},
            fn: "bstest/bs_decjpg.bs",
            ln: 347
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 1},
            rhs: {tag: #binary, op: #"+", lhs: #j, rhs: #n},
            fn: "bstest/bs_decjpg.bs",
            ln: 348
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 2},
            rhs: {tag: #binary, op: #"+", lhs: #k, rhs: #o},
            fn: "bstest/bs_decjpg.bs",
            ln: 348
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 3},
            rhs: {tag: #binary, op: #"+", lhs: #l, rhs: #p},
            fn: "bstest/bs_decjpg.bs",
            ln: 348
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 4},
            rhs: {tag: #binary, op: #"-", lhs: #l, rhs: #p},
            fn: "bstest/bs_decjpg.bs",
            ln: 348
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 5},
            rhs: {tag: #binary, op: #"-", lhs: #k, rhs: #o},
            fn: "bstest/bs_decjpg.bs",
            ln: 349
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 6},
            rhs: {tag: #binary, op: #"-", lhs: #j, rhs: #n},
            fn: "bstest/bs_decjpg.bs",
            ln: 349
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 7},
            rhs: {tag: #binary, op: #"-", lhs: #i, rhs: #m},
            fn: "bstest/bs_decjpg.bs",
            ln: 349
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_TransIDCT_Vert,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 319,
      fn: "bstest/bs_decjpg.bs",
      ln: 350,
      args: [
        {tag: #var, name: #iblk, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #oblk, type: {tag: #type, name: #int, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 353,
            value: [
              {tag: #var, name: #a, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #b, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #c, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #d, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #e, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #f, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 354,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 355,
            value: [
              {tag: #var, name: #m, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #n, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #o, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #p, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #a,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 0},
              rhs: 91
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 356
          }, 
          {
            tag: #assign,
            lhs: #b,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 32},
              rhs: 91
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 358
          }, 
          {
            tag: #assign,
            lhs: #c,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 16},
              rhs: 118
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 358
          }, 
          {
            tag: #assign,
            lhs: #d,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 16},
              rhs: 49
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 359
          }, 
          {
            tag: #assign,
            lhs: #e,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 48},
              rhs: 118
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 359
          }, 
          {
            tag: #assign,
            lhs: #f,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 48},
              rhs: 49
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 360
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {tag: #binary, op: #"+", lhs: #a, rhs: #c},
                rhs: #b
              },
              rhs: #f
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 360
          }, 
          {
            tag: #assign,
            lhs: #j,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {tag: #binary, op: #"+", lhs: #a, rhs: #d},
                rhs: #b
              },
              rhs: #e
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 361
          }, 
          {
            tag: #assign,
            lhs: #k,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {tag: #binary, op: #"-", lhs: #a, rhs: #d},
                rhs: #b
              },
              rhs: #e
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 361
          }, 
          {
            tag: #assign,
            lhs: #l,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {tag: #binary, op: #"-", lhs: #a, rhs: #c},
                rhs: #b
              },
              rhs: #f
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 361
          }, 
          {
            tag: #assign,
            lhs: #m,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"+",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 8},
                    rhs: 126
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 24},
                    rhs: 106
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 40},
                  rhs: 71
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 56},
                rhs: 25
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 361
          }, 
          {
            tag: #assign,
            lhs: #n,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 8},
                    rhs: 106
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 24},
                    rhs: 25
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 40},
                  rhs: 126
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 56},
                rhs: 71
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 362
          }, 
          {
            tag: #assign,
            lhs: #o,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 8},
                    rhs: 71
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 24},
                    rhs: 126
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 40},
                  rhs: 25
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 56},
                rhs: 106
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 363
          }, 
          {
            tag: #assign,
            lhs: #p,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 8},
                    rhs: 25
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 24},
                    rhs: 71
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 40},
                  rhs: 106
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 56},
                rhs: 126
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 364
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 0},
            rhs: {tag: #binary, op: #"+", lhs: #i, rhs: #m},
            fn: "bstest/bs_decjpg.bs",
            ln: 365
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 8},
            rhs: {tag: #binary, op: #"+", lhs: #j, rhs: #n},
            fn: "bstest/bs_decjpg.bs",
            ln: 366
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 16},
            rhs: {tag: #binary, op: #"+", lhs: #k, rhs: #o},
            fn: "bstest/bs_decjpg.bs",
            ln: 366
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 24},
            rhs: {tag: #binary, op: #"+", lhs: #l, rhs: #p},
            fn: "bstest/bs_decjpg.bs",
            ln: 366
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 32},
            rhs: {tag: #binary, op: #"-", lhs: #l, rhs: #p},
            fn: "bstest/bs_decjpg.bs",
            ln: 366
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 40},
            rhs: {tag: #binary, op: #"-", lhs: #k, rhs: #o},
            fn: "bstest/bs_decjpg.bs",
            ln: 367
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 48},
            rhs: {tag: #binary, op: #"-", lhs: #j, rhs: #n},
            fn: "bstest/bs_decjpg.bs",
            ln: 367
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 56},
            rhs: {tag: #binary, op: #"-", lhs: #i, rhs: #m},
            fn: "bstest/bs_decjpg.bs",
            ln: 367
          }]
      }
    }, 
    {
      tag: #func,
      name: #BGBBTJ_JPG_TransIDCT_Vert2,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 383,
      fn: "bstest/bs_decjpg.bs",
      ln: 368,
      args: [
        {tag: #var, name: #iblk, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #oblk, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #dcbias, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 371,
            value: [
              {tag: #var, name: #a, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #b, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #c, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #d, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #e, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #f, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 372,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 373,
            value: [
              {tag: #var, name: #m, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #n, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #o, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #p, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #a,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 0},
              rhs: 91
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 374
          }, 
          {
            tag: #assign,
            lhs: #b,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 32},
              rhs: 91
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 376
          }, 
          {
            tag: #assign,
            lhs: #c,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 16},
              rhs: 118
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 376
          }, 
          {
            tag: #assign,
            lhs: #d,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 16},
              rhs: 49
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 377
          }, 
          {
            tag: #assign,
            lhs: #e,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 48},
              rhs: 118
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 377
          }, 
          {
            tag: #assign,
            lhs: #f,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #loadindex, lhs: #iblk, rhs: 48},
              rhs: 49
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 378
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {tag: #binary, op: #"+", lhs: #a, rhs: #c},
                rhs: #b
              },
              rhs: #f
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 378
          }, 
          {
            tag: #assign,
            lhs: #j,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {tag: #binary, op: #"+", lhs: #a, rhs: #d},
                rhs: #b
              },
              rhs: #e
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 379
          }, 
          {
            tag: #assign,
            lhs: #k,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {tag: #binary, op: #"-", lhs: #a, rhs: #d},
                rhs: #b
              },
              rhs: #e
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 379
          }, 
          {
            tag: #assign,
            lhs: #l,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {tag: #binary, op: #"-", lhs: #a, rhs: #c},
                rhs: #b
              },
              rhs: #f
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 379
          }, 
          {
            tag: #assign,
            lhs: #m,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"+",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 8},
                    rhs: 126
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 24},
                    rhs: 106
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 40},
                  rhs: 71
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 56},
                rhs: 25
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 379
          }, 
          {
            tag: #assign,
            lhs: #n,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 8},
                    rhs: 106
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 24},
                    rhs: 25
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 40},
                  rhs: 126
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 56},
                rhs: 71
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 380
          }, 
          {
            tag: #assign,
            lhs: #o,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 8},
                    rhs: 71
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 24},
                    rhs: 126
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 40},
                  rhs: 25
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 56},
                rhs: 106
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 381
          }, 
          {
            tag: #assign,
            lhs: #p,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 8},
                    rhs: 25
                  },
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadindex, lhs: #iblk, rhs: 24},
                    rhs: 71
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"*",
                  lhs: {tag: #loadindex, lhs: #iblk, rhs: 40},
                  rhs: 106
                }
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadindex, lhs: #iblk, rhs: 56},
                rhs: 126
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 382
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 0},
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #binary, op: #"+", lhs: #i, rhs: #m},
                rhs: 16
              },
              rhs: #dcbias
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 383
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 8},
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #binary, op: #"+", lhs: #j, rhs: #n},
                rhs: 16
              },
              rhs: #dcbias
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 384
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 16},
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #binary, op: #"+", lhs: #k, rhs: #o},
                rhs: 16
              },
              rhs: #dcbias
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 384
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 24},
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #binary, op: #"+", lhs: #l, rhs: #p},
                rhs: 16
              },
              rhs: #dcbias
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 385
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 32},
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #binary, op: #"-", lhs: #l, rhs: #p},
                rhs: 16
              },
              rhs: #dcbias
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 385
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 40},
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #binary, op: #"-", lhs: #k, rhs: #o},
                rhs: 16
              },
              rhs: #dcbias
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 386
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 48},
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #binary, op: #"-", lhs: #j, rhs: #n},
                rhs: 16
              },
              rhs: #dcbias
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 386
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #oblk, rhs: 56},
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #binary, op: #"-", lhs: #i, rhs: #m},
                rhs: 16
              },
              rhs: #dcbias
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 387
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_TransIDCT,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 382,
      fn: "bstest/bs_decjpg.bs",
      ln: 388,
      args: [
        {tag: #var, name: #iblk, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #oblk, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #dcbias, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #rtm, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #s,
            type: {
              tag: #type,
              name: #int,
              arrays: {tag: #arrdef, value: #DCTSZ2}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 391
          }, 
          {
            tag: #var,
            name: #t,
            type: {
              tag: #type,
              name: #int,
              arrays: {tag: #arrdef, value: #DCTSZ2}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 392
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 393,
            value: [
              {
                tag: #var,
                name: #ob,
                type: {tag: #type, name: #int, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #obe,
                type: {tag: #type, name: #int, ptrlvl: 1}
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 394,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 395,
            cond: {tag: #bincmp, op: #"==", lhs: #rtm, rhs: 2},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #k,
                  rhs: {
                    tag: #binary,
                    op: #"+",
                    lhs: {
                      tag: #binary,
                      op: #">>",
                      lhs: {
                        tag: #binary,
                        op: #"+",
                        lhs: {
                          tag: #binary,
                          op: #"*",
                          lhs: {tag: #loadindex, lhs: #iblk, rhs: 0},
                          rhs: 8281
                        },
                        rhs: 32768
                      },
                      rhs: 16
                    },
                    rhs: #dcbias
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 398
                }, 
                {
                  tag: #assign,
                  lhs: #ob,
                  rhs: #oblk,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 400
                }, 
                {
                  tag: #assign,
                  lhs: #obe,
                  rhs: {tag: #binary, op: #"+", lhs: #ob, rhs: 64},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 401
                }, 
                {
                  tag: #while,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 401,
                  cond: {tag: #bincmp, op: #"<", lhs: #ob, rhs: #obe},
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 0},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 403
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 1},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 404
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 2},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 404
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 3},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 404
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 4},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 404
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 5},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 405
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 6},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 405
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 7},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 405
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 8},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 405
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 9},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 406
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 10},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 406
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 11},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 406
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 12},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 406
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 13},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 407
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 14},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 407
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ob, rhs: 15},
                        rhs: #k,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 407
                      }, 
                      {
                        tag: #assignop,
                        op: #"+",
                        lhs: #ob,
                        rhs: 16,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 407
                      }]
                  }
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 409,
                  value: null
                }]
            }
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 411,
            args: [
              {tag: #binary, op: #"+", lhs: #iblk, rhs: 0}, 
              {tag: #binary, op: #"+", lhs: #s, rhs: 0}],
            func: #PDJPG_TransIDCT_Horiz
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 413,
            args: [
              {tag: #binary, op: #"+", lhs: #iblk, rhs: 8}, 
              {tag: #binary, op: #"+", lhs: #s, rhs: 8}],
            func: #PDJPG_TransIDCT_Horiz
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 414,
            args: [
              {tag: #binary, op: #"+", lhs: #iblk, rhs: 16}, 
              {tag: #binary, op: #"+", lhs: #s, rhs: 16}],
            func: #PDJPG_TransIDCT_Horiz
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 415,
            args: [
              {tag: #binary, op: #"+", lhs: #iblk, rhs: 24}, 
              {tag: #binary, op: #"+", lhs: #s, rhs: 24}],
            func: #PDJPG_TransIDCT_Horiz
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 416,
            args: [
              {tag: #binary, op: #"+", lhs: #iblk, rhs: 32}, 
              {tag: #binary, op: #"+", lhs: #s, rhs: 32}],
            func: #PDJPG_TransIDCT_Horiz
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 417,
            args: [
              {tag: #binary, op: #"+", lhs: #iblk, rhs: 40}, 
              {tag: #binary, op: #"+", lhs: #s, rhs: 40}],
            func: #PDJPG_TransIDCT_Horiz
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 418,
            args: [
              {tag: #binary, op: #"+", lhs: #iblk, rhs: 48}, 
              {tag: #binary, op: #"+", lhs: #s, rhs: 48}],
            func: #PDJPG_TransIDCT_Horiz
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 419,
            args: [
              {tag: #binary, op: #"+", lhs: #iblk, rhs: 56}, 
              {tag: #binary, op: #"+", lhs: #s, rhs: 56}],
            func: #PDJPG_TransIDCT_Horiz
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 420,
            args: [
              {tag: #binary, op: #"+", lhs: #s, rhs: 0}, 
              {tag: #binary, op: #"+", lhs: #oblk, rhs: 0}, #dcbias],
            func: #BGBBTJ_JPG_TransIDCT_Vert2
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 422,
            args: [
              {tag: #binary, op: #"+", lhs: #s, rhs: 1}, 
              {tag: #binary, op: #"+", lhs: #oblk, rhs: 1}, #dcbias],
            func: #BGBBTJ_JPG_TransIDCT_Vert2
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 423,
            args: [
              {tag: #binary, op: #"+", lhs: #s, rhs: 2}, 
              {tag: #binary, op: #"+", lhs: #oblk, rhs: 2}, #dcbias],
            func: #BGBBTJ_JPG_TransIDCT_Vert2
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 424,
            args: [
              {tag: #binary, op: #"+", lhs: #s, rhs: 3}, 
              {tag: #binary, op: #"+", lhs: #oblk, rhs: 3}, #dcbias],
            func: #BGBBTJ_JPG_TransIDCT_Vert2
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 425,
            args: [
              {tag: #binary, op: #"+", lhs: #s, rhs: 4}, 
              {tag: #binary, op: #"+", lhs: #oblk, rhs: 4}, #dcbias],
            func: #BGBBTJ_JPG_TransIDCT_Vert2
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 426,
            args: [
              {tag: #binary, op: #"+", lhs: #s, rhs: 5}, 
              {tag: #binary, op: #"+", lhs: #oblk, rhs: 5}, #dcbias],
            func: #BGBBTJ_JPG_TransIDCT_Vert2
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 427,
            args: [
              {tag: #binary, op: #"+", lhs: #s, rhs: 6}, 
              {tag: #binary, op: #"+", lhs: #oblk, rhs: 6}, #dcbias],
            func: #BGBBTJ_JPG_TransIDCT_Vert2
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 428,
            args: [
              {tag: #binary, op: #"+", lhs: #s, rhs: 7}, 
              {tag: #binary, op: #"+", lhs: #oblk, rhs: 7}, #dcbias],
            func: #BGBBTJ_JPG_TransIDCT_Vert2
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJHUFF_NextByte,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 58,
      fn: "bstest/bs_decjpg.bs",
      ln: 430,
      args: [{tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 436,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #unary,
              op: #"*",
              value: {
                tag: #postinc,
                value: {tag: #loadslot, lhs: #ctx, rhs: #huff_cs}
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 437
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 439,
            cond: {tag: #bincmp, op: #"==", lhs: #i, rhs: 255},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #j,
                  rhs: {
                    tag: #unary,
                    op: #"*",
                    value: {
                      tag: #postinc,
                      value: {tag: #loadslot, lhs: #ctx, rhs: #huff_cs}
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 441
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 443,
                  cond: #j,
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #call,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 445,
                        args: "IsEnd\n",
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_isend},
                        rhs: 1,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 446
                      }, 
                      {
                        tag: #return,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 447,
                        value: 0
                      }]
                  }
                }]
            }
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 450, value: #i}]
      }
    }, 
    {
      tag: #func,
      name: #PDJHUFF_InitStream,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 91,
      fn: "bstest/bs_decjpg.bs",
      ln: 455,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 458
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_isend},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 459
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_css},
            rhs: #buf,
            fn: "bstest/bs_decjpg.bs",
            ln: 460
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_cs},
            rhs: #buf,
            fn: "bstest/bs_decjpg.bs",
            ln: 462
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
            rhs: {tag: #call, args: #ctx, func: #PDJHUFF_NextByte},
            fn: "bstest/bs_decjpg.bs",
            ln: 463
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"<<",
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                rhs: 8
              },
              rhs: {tag: #call, args: #ctx, func: #PDJHUFF_NextByte}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 464
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"<<",
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                rhs: 8
              },
              rhs: {tag: #call, args: #ctx, func: #PDJHUFF_NextByte}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 465
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"<<",
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                rhs: 8
              },
              rhs: {tag: #call, args: #ctx, func: #PDJHUFF_NextByte}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 466
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 467, value: 0}]
      }
    }, 
    {
      tag: #func,
      name: #PDJHUFF_ReadNBits,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 121,
      fn: "bstest/bs_decjpg.bs",
      ln: 469,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #n, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #i,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 488
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 489,
            cond: {tag: #bincmp, op: #"<=", lhs: #n, rhs: 0},
            then: {tag: #return, value: 0}
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #binary,
              op: #"&",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                rhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: {tag: #binary, op: #"-", lhs: 32, rhs: #n},
                  rhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos}
                }
              },
              rhs: {
                tag: #binary,
                op: #"-",
                lhs: {tag: #binary, op: #"<<", lhs: 1, rhs: #n},
                rhs: 1
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 491
          }, 
          {
            tag: #assignop,
            op: #"+",
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
            rhs: #n,
            fn: "bstest/bs_decjpg.bs",
            ln: 499
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 500,
            cond: {
              tag: #bincmp,
              op: #">=",
              lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
              rhs: 8
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                  rhs: {
                    tag: #binary,
                    op: #"|",
                    lhs: {
                      tag: #binary,
                      op: #"<<",
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                      rhs: 8
                    },
                    rhs: {tag: #call, args: #ctx, func: #PDJHUFF_NextByte}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 516
                }, 
                {
                  tag: #assignop,
                  op: #"-",
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                  rhs: 8,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 517
                }, 
                {
                  tag: #while,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 518,
                  cond: {
                    tag: #bincmp,
                    op: #">=",
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                    rhs: 8
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                        rhs: {
                          tag: #binary,
                          op: #"|",
                          lhs: {
                            tag: #binary,
                            op: #"<<",
                            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                            rhs: 8
                          },
                          rhs: {tag: #call, args: #ctx, func: #PDJHUFF_NextByte}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 520
                      }, 
                      {
                        tag: #assignop,
                        op: #"-",
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                        rhs: 8,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 521
                      }]
                  }
                }]
            }
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 524, value: #i}]
      }
    }, 
    {
      tag: #func,
      name: #PDJHUFF_SkipNBits,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 41,
      fn: "bstest/bs_decjpg.bs",
      ln: 528,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #n, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #assignop,
            op: #"+",
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
            rhs: #n,
            fn: "bstest/bs_decjpg.bs",
            ln: 531
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 532,
            cond: {
              tag: #bincmp,
              op: #">=",
              lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
              rhs: 8
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                  rhs: {
                    tag: #binary,
                    op: #"|",
                    lhs: {
                      tag: #binary,
                      op: #"<<",
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                      rhs: 8
                    },
                    rhs: {tag: #call, args: #ctx, func: #PDJHUFF_NextByte}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 534
                }, 
                {
                  tag: #assignop,
                  op: #"-",
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                  rhs: 8,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 535
                }]
            }
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJHUFF_PeekWord,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 28,
      fn: "bstest/bs_decjpg.bs",
      ln: 538,
      args: [{tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #i,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 541
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #binary,
              op: #"&",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                rhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: 16,
                  rhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos}
                }
              },
              rhs: 65535
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 542
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 543, value: #i}]
      }
    }, 
    {
      tag: #func,
      name: #PDJHUFF_DecodeSymbol,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 249,
      fn: "bstest/bs_decjpg.bs",
      ln: 545,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #tab, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 595,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #prefix_cast,
              lhs: {
                tag: #binary,
                op: #">>>",
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                rhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: 24,
                  rhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos}
                }
              },
              rhs: {tag: #type, name: #byte}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 596
          }, 
          {
            tag: #assignop,
            op: #"<<",
            lhs: #tab,
            rhs: 8,
            fn: "bstest/bs_decjpg.bs",
            ln: 598
          }, 
          {
            tag: #assign,
            lhs: #j,
            rhs: {
              tag: #loadindex,
              lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_idx},
              rhs: {tag: #binary, op: #"|", lhs: #tab, rhs: #i}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 600
          }, 
          {
            tag: #assign,
            lhs: #k,
            rhs: {
              tag: #loadindex,
              lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_len},
              rhs: {tag: #binary, op: #"|", lhs: #tab, rhs: #j}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 601
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 603,
            cond: {tag: #bincmp, op: #"<=", lhs: #k, rhs: 8},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                  rhs: #k,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 605
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 606,
                  cond: {
                    tag: #bincmp,
                    op: #">=",
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                    rhs: 8
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                        rhs: {
                          tag: #binary,
                          op: #"|",
                          lhs: {
                            tag: #binary,
                            op: #"<<",
                            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                            rhs: 8
                          },
                          rhs: {tag: #call, args: #ctx, func: #PDJHUFF_NextByte}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 608
                      }, 
                      {
                        tag: #assignop,
                        op: #"-",
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                        rhs: 8,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 609
                      }]
                  }
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 611,
                  value: #j
                }]
            }
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #prefix_cast,
              lhs: {
                tag: #binary,
                op: #">>>",
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                rhs: {
                  tag: #binary,
                  op: #"-",
                  lhs: 16,
                  rhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos}
                }
              },
              rhs: {tag: #type, name: #u16}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 613
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 615,
            cond: 1,
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #l,
                  rhs: {tag: #binary, op: #"|", lhs: #tab, rhs: #j},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 619
                }, 
                {
                  tag: #assign,
                  lhs: #k,
                  rhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_len},
                    rhs: #l
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 620
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 621,
                  cond: {tag: #unary, op: #"!", value: #k},
                  then: {
                    tag: #break,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 623,
                    value: 1
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 623,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #binary,
                      op: #">>",
                      lhs: #i,
                      rhs: {tag: #binary, op: #"-", lhs: 16, rhs: #k}
                    },
                    rhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_code},
                      rhs: #l
                    }
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: {
                          tag: #loadindex,
                          lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_next},
                          rhs: #l
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 626
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 627,
                        cond: {tag: #bincmp, op: #"<", lhs: #j, rhs: 0},
                        then: {
                          tag: #break,
                          fn: "bstest/bs_decjpg.bs",
                          ln: 629,
                          value: 1
                        }
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 629,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                  rhs: #k,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 631
                }, 
                {
                  tag: #while,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 633,
                  cond: {
                    tag: #bincmp,
                    op: #">=",
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                    rhs: 8
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                        rhs: {
                          tag: #binary,
                          op: #"|",
                          lhs: {
                            tag: #binary,
                            op: #"<<",
                            lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_win},
                            rhs: 8
                          },
                          rhs: {tag: #call, args: #ctx, func: #PDJHUFF_NextByte}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 635
                      }, 
                      {
                        tag: #assignop,
                        op: #"-",
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_pos},
                        rhs: 8,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 636
                      }]
                  }
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 638,
                  value: #j
                }]
            }
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 640, value: -1}]
      }
    }, 
    {
      tag: #func,
      name: #PDJHUFF_DecodeDiffDC,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 60,
      fn: "bstest/bs_decjpg.bs",
      ln: 642,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #tab, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 645,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {tag: #call, args: [#ctx, #tab], func: #PDJHUFF_DecodeSymbol},
            fn: "bstest/bs_decjpg.bs",
            ln: 646
          }, 
          {
            tag: #assign,
            lhs: #j,
            rhs: {tag: #call, args: [#ctx, #i], func: #PDJHUFF_ReadNBits},
            fn: "bstest/bs_decjpg.bs",
            ln: 648
          }, 
          {
            tag: #assignop,
            op: #"+",
            lhs: #j,
            rhs: {
              tag: #binary,
              op: #"&",
              lhs: {
                tag: #unary,
                op: #"~",
                value: {
                  tag: #binary,
                  op: #">>",
                  lhs: {
                    tag: #binary,
                    op: #"<<",
                    lhs: #j,
                    rhs: {tag: #binary, op: #"-", lhs: 32, rhs: #i}
                  },
                  rhs: 31
                }
              },
              rhs: {
                tag: #binary,
                op: #"+",
                lhs: {tag: #binary, op: #"<<", lhs: -1, rhs: #i},
                rhs: 1
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 653
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 654, value: #j}]
      }
    }, 
    {
      tag: #func,
      name: #PDJHUFF_DecodeBlock,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 327,
      fn: "bstest/bs_decjpg.bs",
      ln: 657,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #dctab, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #actab, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #qid, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #ni, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #nn, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #qtab,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 662
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 663,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #buf, rhs: 1},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 664
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #buf, rhs: 2},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 671
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #buf, rhs: 3},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 671
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 671,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: 64},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: #buf,
                    rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 0}
                  },
                  rhs: 0,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 673
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: #buf,
                    rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                  },
                  rhs: 0,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 673
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: #buf,
                    rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 2}
                  },
                  rhs: 0,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 673
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: #buf,
                    rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 3}
                  },
                  rhs: 0,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 674
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 4},
            step: {tag: #assignop, op: #"+", lhs: #i, rhs: 4}
          }, 
          {
            tag: #assign,
            lhs: #qtab,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_qt},
              rhs: {tag: #binary, op: #"*", lhs: #qid, rhs: 64}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 674
          }, 
          {
            tag: #assignop,
            op: #"+",
            lhs: {tag: #loadindex, lhs: #buf, rhs: 0},
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {
                tag: #call,
                args: [#ctx, #dctab],
                func: #PDJHUFF_DecodeDiffDC
              },
              rhs: {tag: #loadindex, lhs: #qtab, rhs: 0}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 676
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 678,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: 64},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #j,
                  rhs: {
                    tag: #call,
                    args: [#ctx, #actab],
                    func: #PDJHUFF_DecodeSymbol
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 680
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 681,
                  cond: {tag: #bincmp, op: #"<=", lhs: #j, rhs: 0},
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 683,
                        cond: {tag: #bincmp, op: #"<", lhs: #j, rhs: 0},
                        then: {
                          tag: #block,
                          value: [
                            {
                              tag: #call,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 685,
                              args: [
                                "bad dct block1 %02X(%d) %d/%d\n", #j, #j, 
                                #ni, #nn],
                              func: #printf
                            }, 
                            {
                              tag: #return,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 686,
                              value: -1
                            }]
                        }
                      }, 
                      {
                        tag: #break,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 688,
                        value: 1
                      }]
                  }
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #i,
                  rhs: {
                    tag: #binary,
                    op: #"&",
                    lhs: {tag: #binary, op: #">>", lhs: #j, rhs: 4},
                    rhs: 15
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 690
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 692,
                  cond: {
                    tag: #unary,
                    op: #"!",
                    value: {tag: #binary, op: #"&", lhs: #j, rhs: 15}
                  },
                  then: {tag: #continue, value: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 694,
                  cond: {tag: #bincmp, op: #">=", lhs: #i, rhs: 64},
                  then: {
                    tag: #break,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 696,
                    value: 1
                  }
                }, 
                {
                  tag: #assign,
                  lhs: #j,
                  rhs: {tag: #binary, op: #"&", lhs: #j, rhs: 15},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 696
                }, 
                {
                  tag: #assign,
                  lhs: #k,
                  rhs: {tag: #call, args: [#ctx, #j], func: #PDJHUFF_ReadNBits},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 699
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #k,
                  rhs: {
                    tag: #binary,
                    op: #"&",
                    lhs: {
                      tag: #unary,
                      op: #"~",
                      value: {
                        tag: #binary,
                        op: #">>",
                        lhs: {
                          tag: #binary,
                          op: #"<<",
                          lhs: #k,
                          rhs: {tag: #binary, op: #"-", lhs: 32, rhs: #j}
                        },
                        rhs: 31
                      }
                    },
                    rhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #binary, op: #"<<", lhs: -1, rhs: #j},
                      rhs: 1
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 700
                }, 
                {
                  tag: #assign,
                  lhs: #j,
                  rhs: {tag: #loadindex, lhs: #pdjpg_zigzag2, rhs: #i},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 701
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadindex, lhs: #buf, rhs: #j},
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: #k,
                    rhs: {tag: #loadindex, lhs: #qtab, rhs: #j}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 703
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 1},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 705,
            cond: {tag: #bincmp, op: #">", lhs: #i, rhs: 64},
            then: {
              tag: #block,
              value: [
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 708,
                  args: [
                    "bad dct block2 %02X(%d) len=%d %d/%d\n", #j, #j, #i, 
                    #ni, #nn],
                  func: #printf
                }, 
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 709,
                  args: [
                    "Error @ %06X\n", 
                    {
                      tag: #binary,
                      op: #"-",
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_cs},
                      rhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_css}
                    }],
                  func: #printf
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 710,
                  value: -1
                }]
            }
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 712,
            cond: {tag: #bincmp, op: #"==", lhs: #i, rhs: 1},
            then: {tag: #return, value: 2}
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 715, value: 0}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_CopyOutBlock8B,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 628,
      fn: "bstest/bs_decjpg.bs",
      ln: 717,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #ibuf, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {
          tag: #var,
          name: #obuf,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {tag: #var, name: #xs, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #ys, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #x, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #y, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #cs,
            type: {tag: #type, name: #int, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 723
          }, 
          {
            tag: #var,
            name: #ct,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 724
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 725,
            value: [
              {tag: #var, name: #i0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #i1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #i2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #i3, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #i4, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #i5, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #i6, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #i7, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 726,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 727,
            cond: {
              tag: #binary,
              op: #"||",
              lhs: {
                tag: #bincmp,
                op: #">",
                lhs: {tag: #binary, op: #"+", lhs: #x, rhs: 8},
                rhs: #xs
              },
              rhs: {
                tag: #bincmp,
                op: #">",
                lhs: {tag: #binary, op: #"+", lhs: #y, rhs: 8},
                rhs: #ys
              }
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #for,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 730,
                  cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: 8},
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 732,
                        cond: {
                          tag: #bincmp,
                          op: #">=",
                          lhs: {tag: #binary, op: #"+", lhs: #y, rhs: #i},
                          rhs: #ys
                        },
                        then: {tag: #continue, value: 0}
                      }, 
                      {
                        tag: #assign,
                        lhs: #cs,
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: #ibuf,
                          rhs: {tag: #binary, op: #"*", lhs: #i, rhs: 8}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 734
                      }, 
                      {
                        tag: #assign,
                        lhs: #ct,
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: {
                            tag: #binary,
                            op: #"+",
                            lhs: #obuf,
                            rhs: {
                              tag: #binary,
                              op: #"*",
                              lhs: {tag: #binary, op: #"+", lhs: #y, rhs: #i},
                              rhs: #xs
                            }
                          },
                          rhs: #x
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 736
                      }, 
                      {
                        tag: #for,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 737,
                        cond: {tag: #bincmp, op: #"<", lhs: #j, rhs: 8},
                        then: {
                          tag: #block,
                          value: [
                            {
                              tag: #if,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 739,
                              cond: {
                                tag: #bincmp,
                                op: #">=",
                                lhs: {tag: #binary, op: #"+", lhs: #x, rhs: #j},
                                rhs: #xs
                              },
                              then: {tag: #continue, value: 0}
                            }, 
                            {
                              tag: #assign,
                              lhs: #k,
                              rhs: {
                                tag: #unary,
                                op: #"*",
                                value: {tag: #postinc, value: #cs}
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 741
                            }, 
                            {
                              tag: #if,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 742,
                              cond: {tag: #bincmp, op: #"<", lhs: #k, rhs: 0},
                              then: {tag: #assign, lhs: #k, rhs: 0}
                            }, 
                            {
                              tag: #if,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 743,
                              cond: {tag: #bincmp, op: #">", lhs: #k, rhs: 255},
                              then: {tag: #assign, lhs: #k, rhs: 255}
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #unary, op: #"*", value: #ct},
                              rhs: #k,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 744
                            }, 
                            {
                              tag: #postinc,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 745,
                              value: #ct
                            }]
                        },
                        init: {tag: #assign, lhs: #j, rhs: 0},
                        step: {tag: #postinc, value: #j}
                      }]
                  },
                  init: {tag: #assign, lhs: #i, rhs: 0},
                  step: {tag: #postinc, value: #i}
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 748,
                  value: null
                }]
            }
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 750,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: 8},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #cs,
                  rhs: {
                    tag: #binary,
                    op: #"+",
                    lhs: #ibuf,
                    rhs: {tag: #binary, op: #"*", lhs: #i, rhs: 8}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 753
                }, 
                {
                  tag: #assign,
                  lhs: #ct,
                  rhs: {
                    tag: #binary,
                    op: #"+",
                    lhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: #obuf,
                      rhs: {
                        tag: #binary,
                        op: #"*",
                        lhs: {tag: #binary, op: #"+", lhs: #y, rhs: #i},
                        rhs: #xs
                      }
                    },
                    rhs: #x
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 754
                }, 
                {
                  tag: #assign,
                  lhs: #j,
                  rhs: {
                    tag: #binary,
                    op: #"|",
                    lhs: {
                      tag: #binary,
                      op: #"|",
                      lhs: {
                        tag: #binary,
                        op: #"|",
                        lhs: {
                          tag: #binary,
                          op: #"|",
                          lhs: {
                            tag: #binary,
                            op: #"|",
                            lhs: {
                              tag: #binary,
                              op: #"|",
                              lhs: {
                                tag: #binary,
                                op: #"|",
                                lhs: {tag: #loadindex, lhs: #cs, rhs: 0},
                                rhs: {tag: #loadindex, lhs: #cs, rhs: 1}
                              },
                              rhs: {tag: #loadindex, lhs: #cs, rhs: 2}
                            },
                            rhs: {tag: #loadindex, lhs: #cs, rhs: 3}
                          },
                          rhs: {tag: #loadindex, lhs: #cs, rhs: 4}
                        },
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 5}
                      },
                      rhs: {tag: #loadindex, lhs: #cs, rhs: 6}
                    },
                    rhs: {tag: #loadindex, lhs: #cs, rhs: 7}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 755
                }, 
                {
                  tag: #ifelse,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 757,
                  cond: {tag: #binary, op: #">>", lhs: #j, rhs: 8},
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: #i0,
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 0},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 761
                      }, 
                      {
                        tag: #assign,
                        lhs: #i1,
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 1},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 763
                      }, 
                      {
                        tag: #assign,
                        lhs: #i2,
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 2},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 763
                      }, 
                      {
                        tag: #assign,
                        lhs: #i3,
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 3},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 763
                      }, 
                      {
                        tag: #assign,
                        lhs: #i4,
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 4},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 763
                      }, 
                      {
                        tag: #assign,
                        lhs: #i5,
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 5},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 764
                      }, 
                      {
                        tag: #assign,
                        lhs: #i6,
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 6},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 764
                      }, 
                      {
                        tag: #assign,
                        lhs: #i7,
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 7},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 764
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 764,
                        cond: {tag: #bincmp, op: #"<", lhs: #i0, rhs: 0},
                        then: {tag: #assign, lhs: #i0, rhs: 0}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 765,
                        cond: {tag: #bincmp, op: #"<", lhs: #i1, rhs: 0},
                        then: {tag: #assign, lhs: #i1, rhs: 0}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 765,
                        cond: {tag: #bincmp, op: #"<", lhs: #i2, rhs: 0},
                        then: {tag: #assign, lhs: #i2, rhs: 0}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 766,
                        cond: {tag: #bincmp, op: #"<", lhs: #i3, rhs: 0},
                        then: {tag: #assign, lhs: #i3, rhs: 0}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 766,
                        cond: {tag: #bincmp, op: #"<", lhs: #i4, rhs: 0},
                        then: {tag: #assign, lhs: #i4, rhs: 0}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 767,
                        cond: {tag: #bincmp, op: #"<", lhs: #i5, rhs: 0},
                        then: {tag: #assign, lhs: #i5, rhs: 0}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 767,
                        cond: {tag: #bincmp, op: #"<", lhs: #i6, rhs: 0},
                        then: {tag: #assign, lhs: #i6, rhs: 0}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 768,
                        cond: {tag: #bincmp, op: #"<", lhs: #i7, rhs: 0},
                        then: {tag: #assign, lhs: #i7, rhs: 0}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 768,
                        cond: {tag: #bincmp, op: #">", lhs: #i0, rhs: 255},
                        then: {tag: #assign, lhs: #i0, rhs: 255}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 769,
                        cond: {tag: #bincmp, op: #">", lhs: #i1, rhs: 255},
                        then: {tag: #assign, lhs: #i1, rhs: 255}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 769,
                        cond: {tag: #bincmp, op: #">", lhs: #i2, rhs: 255},
                        then: {tag: #assign, lhs: #i2, rhs: 255}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 770,
                        cond: {tag: #bincmp, op: #">", lhs: #i3, rhs: 255},
                        then: {tag: #assign, lhs: #i3, rhs: 255}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 770,
                        cond: {tag: #bincmp, op: #">", lhs: #i4, rhs: 255},
                        then: {tag: #assign, lhs: #i4, rhs: 255}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 771,
                        cond: {tag: #bincmp, op: #">", lhs: #i5, rhs: 255},
                        then: {tag: #assign, lhs: #i5, rhs: 255}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 771,
                        cond: {tag: #bincmp, op: #">", lhs: #i6, rhs: 255},
                        then: {tag: #assign, lhs: #i6, rhs: 255}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 772,
                        cond: {tag: #bincmp, op: #">", lhs: #i7, rhs: 255},
                        then: {tag: #assign, lhs: #i7, rhs: 255}
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 0},
                        rhs: #i0,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 772
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 1},
                        rhs: #i1,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 773
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 2},
                        rhs: #i2,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 773
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 3},
                        rhs: #i3,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 773
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 4},
                        rhs: #i4,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 773
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 5},
                        rhs: #i5,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 774
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 6},
                        rhs: #i6,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 774
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 7},
                        rhs: #i7,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 774
                      }]
                  },
                  else: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 0},
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 0},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 791
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 1},
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 1},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 792
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 2},
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 2},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 792
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 3},
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 3},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 793
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 4},
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 4},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 793
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 5},
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 5},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 794
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 6},
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 6},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 794
                      }, 
                      {
                        tag: #assign,
                        lhs: {tag: #loadindex, lhs: #ct, rhs: 7},
                        rhs: {tag: #loadindex, lhs: #cs, rhs: 7},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 795
                      }]
                  }
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerSOS,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 2164,
      fn: "bstest/bs_decjpg.bs",
      ln: 798,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #dbuf,
            type: {
              tag: #type,
              name: #int,
              arrays: {
                tag: #arrdef,
                value: {tag: #binary, op: #"*", lhs: 4, rhs: 64}
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 801
          }, 
          {
            tag: #var,
            name: #dcblk,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef, value: 64}},
            fn: "bstest/bs_decjpg.bs",
            ln: 802
          }, 
          {
            tag: #var,
            name: #diblk,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef, value: 64}},
            fn: "bstest/bs_decjpg.bs",
            ln: 803
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 804,
            value: [
              {
                tag: #var,
                name: #ch,
                type: {tag: #type, name: #byte, arrays: {tag: #arrdef, value: 4}}
              }, 
              {
                tag: #var,
                name: #cv,
                type: {tag: #type, name: #byte, arrays: {tag: #arrdef, value: 4}}
              }, 
              {
                tag: #var,
                name: #qid,
                type: {tag: #type, name: #byte, arrays: {tag: #arrdef, value: 4}}
              }]
          }, 
          {
            tag: #var,
            name: #step,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef, value: 4}},
            fn: "bstest/bs_decjpg.bs",
            ln: 805
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 806,
            value: [
              {
                tag: #var,
                name: #xi,
                type: {tag: #type, name: #int, arrays: {tag: #arrdef, value: 4}}
              }, 
              {
                tag: #var,
                name: #yi,
                type: {tag: #type, name: #int, arrays: {tag: #arrdef, value: 4}}
              }, 
              {
                tag: #var,
                name: #wi,
                type: {tag: #type, name: #int, arrays: {tag: #arrdef, value: 4}}
              }, 
              {
                tag: #var,
                name: #hi,
                type: {tag: #type, name: #int, arrays: {tag: #arrdef, value: 4}}
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 807,
            value: [
              {
                tag: #var,
                name: #cdt,
                type: {tag: #type, name: #byte, arrays: {tag: #arrdef, value: 4}}
              }, 
              {
                tag: #var,
                name: #cat,
                type: {tag: #type, name: #byte, arrays: {tag: #arrdef, value: 4}}
              }]
          }, 
          {
            tag: #var,
            name: #ccnt,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef, value: 4}},
            fn: "bstest/bs_decjpg.bs",
            ln: 808
          }, 
          {
            tag: #var,
            name: #sibuf,
            type: {
              tag: #type,
              name: #byte,
              arrays: {tag: #arrdef, value: 4},
              ptrlvl: 1
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 809
          }, 
          {
            tag: #var,
            name: #siystr,
            type: {tag: #type, name: #int, arrays: {tag: #arrdef, value: 4}},
            fn: "bstest/bs_decjpg.bs",
            ln: 811
          }, 
          {
            tag: #var,
            name: #s,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 812
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 814,
            value: [
              {tag: #var, name: #t0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #t1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #t2, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 815,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #i1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l1, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 816,
            value: [
              {tag: #var, name: #w, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #h, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #n, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #ns, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #rt, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 817,
            args: "PDJPG_MarkerSOS: A\n",
            func: #printf
          }, 
          {
            tag: #assign,
            lhs: #t0,
            rhs: {tag: #call, args: undefined, func: #clock},
            fn: "bstest/bs_decjpg.bs",
            ln: 819
          }, 
          {
            tag: #assign,
            lhs: #l,
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"<<",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 0},
                rhs: 8
              },
              rhs: {tag: #loadindex, lhs: #buf, rhs: 1}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 821
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 823,
            args: ["ns %d\n", {tag: #loadindex, lhs: #buf, rhs: 2}],
            func: #printf
          }, 
          {
            tag: #assign,
            lhs: #ns,
            rhs: {tag: #loadindex, lhs: #buf, rhs: 2},
            fn: "bstest/bs_decjpg.bs",
            ln: 824
          }, 
          {
            tag: #assign,
            lhs: #rt,
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 826
          }, 
          {
            tag: #assign,
            lhs: #s,
            rhs: {tag: #binary, op: #"+", lhs: #buf, rhs: 3},
            fn: "bstest/bs_decjpg.bs",
            ln: 826
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 827,
            cond: {
              tag: #bincmp,
              op: #"<",
              lhs: #i,
              rhs: {tag: #loadindex, lhs: #buf, rhs: 2}
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 829,
                  args: [
                    "%d %d %d\n", {tag: #loadindex, lhs: #s, rhs: 0}, 
                    {
                      tag: #binary,
                      op: #">>",
                      lhs: {tag: #loadindex, lhs: #s, rhs: 1},
                      rhs: 4
                    }, 
                    {
                      tag: #binary,
                      op: #"&",
                      lhs: {tag: #loadindex, lhs: #s, rhs: 1},
                      rhs: 15
                    }],
                  func: #printf
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadindex, lhs: #cdt, rhs: #i},
                  rhs: {
                    tag: #binary,
                    op: #">>",
                    lhs: {tag: #loadindex, lhs: #s, rhs: 1},
                    rhs: 4
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 830
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadindex, lhs: #cat, rhs: #i},
                  rhs: {
                    tag: #binary,
                    op: #"&",
                    lhs: {tag: #loadindex, lhs: #s, rhs: 1},
                    rhs: 15
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 832
                }, 
                {
                  tag: #for,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 833,
                  cond: {
                    tag: #bincmp,
                    op: #"<",
                    lhs: #j,
                    rhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_nc}
                  },
                  then: {
                    tag: #if,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 836,
                    cond: {
                      tag: #bincmp,
                      op: #"==",
                      lhs: {
                        tag: #loadindex,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cid},
                        rhs: #j
                      },
                      rhs: {tag: #loadindex, lhs: #s, rhs: 0}
                    },
                    then: {
                      tag: #block,
                      value: [
                        {
                          tag: #assign,
                          lhs: {tag: #loadindex, lhs: #ch, rhs: #i},
                          rhs: {
                            tag: #loadindex,
                            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_ch},
                            rhs: #j
                          },
                          fn: "bstest/bs_decjpg.bs",
                          ln: 838
                        }, 
                        {
                          tag: #assign,
                          lhs: {tag: #loadindex, lhs: #cv, rhs: #i},
                          rhs: {
                            tag: #loadindex,
                            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cv},
                            rhs: #j
                          },
                          fn: "bstest/bs_decjpg.bs",
                          ln: 839
                        }, 
                        {
                          tag: #assign,
                          lhs: {tag: #loadindex, lhs: #qid, rhs: #i},
                          rhs: {
                            tag: #loadindex,
                            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_qid},
                            rhs: #j
                          },
                          fn: "bstest/bs_decjpg.bs",
                          ln: 840
                        }, 
                        {
                          tag: #assign,
                          lhs: {tag: #loadindex, lhs: #xi, rhs: #i},
                          rhs: {
                            tag: #loadindex,
                            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cxi},
                            rhs: #j
                          },
                          fn: "bstest/bs_decjpg.bs",
                          ln: 841
                        }, 
                        {
                          tag: #assign,
                          lhs: {tag: #loadindex, lhs: #yi, rhs: #i},
                          rhs: {
                            tag: #loadindex,
                            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cyi},
                            rhs: #j
                          },
                          fn: "bstest/bs_decjpg.bs",
                          ln: 842
                        }, 
                        {
                          tag: #assign,
                          lhs: {tag: #loadindex, lhs: #step, rhs: #i},
                          rhs: {
                            tag: #binary,
                            op: #"*",
                            lhs: {tag: #loadindex, lhs: #ch, rhs: #i},
                            rhs: {tag: #loadindex, lhs: #cv, rhs: #i}
                          },
                          fn: "bstest/bs_decjpg.bs",
                          ln: 843
                        }, 
                        {
                          tag: #postinc,
                          fn: "bstest/bs_decjpg.bs",
                          ln: 844,
                          value: #k1
                        }, 
                        {
                          tag: #break,
                          fn: "bstest/bs_decjpg.bs",
                          ln: 846,
                          value: 1
                        }]
                    }
                  },
                  init: {tag: #assign, lhs: #j, rhs: 0},
                  step: {tag: #postinc, value: #j}
                }, 
                {
                  tag: #assign,
                  lhs: #w,
                  rhs: {
                    tag: #binary,
                    op: #"/",
                    lhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #loadindex, lhs: #xi, rhs: #i},
                      rhs: 7
                    },
                    rhs: 8
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 855
                }, 
                {
                  tag: #assign,
                  lhs: #h,
                  rhs: {
                    tag: #binary,
                    op: #"/",
                    lhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #loadindex, lhs: #yi, rhs: #i},
                      rhs: 7
                    },
                    rhs: 8
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 857
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadindex, lhs: #wi, rhs: #i},
                  rhs: #w,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 858
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadindex, lhs: #hi, rhs: #i},
                  rhs: #h,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 861
                }, 
                {
                  tag: #assign,
                  lhs: #n,
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #binary, op: #"+", lhs: #w, rhs: 1},
                    rhs: {tag: #binary, op: #"+", lhs: #h, rhs: 2}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 862
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scid},
                    rhs: #i
                  },
                  rhs: {tag: #loadindex, lhs: #s, rhs: 0},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 864
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scn},
                    rhs: #i
                  },
                  rhs: #j,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 865
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 866,
                  cond: {
                    tag: #unary,
                    op: #"!",
                    value: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                      rhs: #i
                    }
                  },
                  then: {
                    tag: #assign,
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                      rhs: #i
                    },
                    rhs: {
                      tag: #new,
                      type: {
                        tag: #type,
                        name: #byte,
                        arrays: {
                          tag: #arrdef,
                          value: {tag: #binary, op: #"*", lhs: #n, rhs: 64}
                        }
                      }
                    }
                  }
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadindex, lhs: #sibuf, rhs: #i},
                  rhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                    rhs: #i
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 873
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadindex, lhs: #ccnt, rhs: #i},
                  rhs: 0,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 875
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #s,
                  rhs: 2,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 878
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #assignop,
            op: #"+",
            lhs: #s,
            rhs: 3,
            fn: "bstest/bs_decjpg.bs",
            ln: 881
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 882,
            args: "PDJPG_MarkerSOS: B\n",
            func: #printf
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 884,
            cond: {
              tag: #bincmp,
              op: #"<",
              lhs: #i,
              rhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_nc}
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #j,
                  rhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scn},
                    rhs: #i
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 887
                }, 
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 888,
                  args: [
                    "PDJPG_MarkerSOS: ch=%d cv=%d chm=%d chn=%d\n", 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_ch},
                      rhs: #j
                    }, 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cv},
                      rhs: #j
                    }, 
                    {tag: #loadslot, lhs: #ctx, rhs: #jpg_chm}, 
                    {tag: #loadslot, lhs: #ctx, rhs: #jpg_chn}],
                  func: #printf
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schsci},
                    rhs: #i
                  },
                  rhs: {
                    tag: #binary,
                    op: #"/",
                    lhs: {
                      tag: #binary,
                      op: #"*",
                      lhs: 65536,
                      rhs: {
                        tag: #loadindex,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_ch},
                        rhs: #j
                      }
                    },
                    rhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_chm}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 891
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvsci},
                    rhs: #i
                  },
                  rhs: {
                    tag: #binary,
                    op: #"/",
                    lhs: {
                      tag: #binary,
                      op: #"*",
                      lhs: 65536,
                      rhs: {
                        tag: #loadindex,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cv},
                        rhs: #j
                      }
                    },
                    rhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_chn}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 893
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schs},
                    rhs: #i
                  },
                  rhs: {
                    tag: #binary,
                    op: #"/",
                    lhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {
                        tag: #loadindex,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cxi},
                        rhs: #j
                      },
                      rhs: 7
                    },
                    rhs: 8
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 894
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvs},
                    rhs: #i
                  },
                  rhs: {
                    tag: #binary,
                    op: #"/",
                    lhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {
                        tag: #loadindex,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cyi},
                        rhs: #j
                      },
                      rhs: 7
                    },
                    rhs: 8
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 896
                }, 
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 897,
                  args: [
                    "PDJPG_MarkerSOS: i=%d j=%d %d %d %d %d\n", #i, #j, 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schsci},
                      rhs: #i
                    }, 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvsci},
                      rhs: #i
                    }, 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schs},
                      rhs: #i
                    }, 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvs},
                      rhs: #i
                    }],
                  func: #printf
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #ifelse,
            fn: "bstest/bs_decjpg.bs",
            ln: 902,
            cond: {
              tag: #bincmp,
              op: #"==",
              lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_nc},
              rhs: 3
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #i,
                  rhs: 1,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 905
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 906,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schsci},
                      rhs: 0
                    },
                    rhs: 65536
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 907,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvsci},
                      rhs: 0
                    },
                    rhs: 65536
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 908,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schsci},
                      rhs: 1
                    },
                    rhs: 32768
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 909,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvsci},
                      rhs: 1
                    },
                    rhs: 32768
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 910,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schsci},
                      rhs: 2
                    },
                    rhs: 32768
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 911,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvsci},
                      rhs: 2
                    },
                    rhs: 32768
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_is420},
                  rhs: #i,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 912
                }, 
                {
                  tag: #assign,
                  lhs: #i,
                  rhs: 1,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 913
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 915,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schsci},
                      rhs: 0
                    },
                    rhs: 65536
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 916,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvsci},
                      rhs: 0
                    },
                    rhs: 65536
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 917,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schsci},
                      rhs: 1
                    },
                    rhs: 65536
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 918,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvsci},
                      rhs: 1
                    },
                    rhs: 65536
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 919,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_schsci},
                      rhs: 2
                    },
                    rhs: 65536
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 920,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_scvsci},
                      rhs: 2
                    },
                    rhs: 65536
                  },
                  then: {tag: #assign, lhs: #i, rhs: 0}
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_is444},
                  rhs: #i,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 921
                }]
            },
            else: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_is420},
                  rhs: 0,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 924
                }, 
                {
                  tag: #assign,
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_is444},
                  rhs: 0,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 925
                }]
            }
          }, 
          {
            tag: #assign,
            lhs: #w,
            rhs: {
              tag: #binary,
              op: #"/",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {
                  tag: #binary,
                  op: #"+",
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #xs},
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_chm},
                    rhs: 8
                  }
                },
                rhs: 1
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_chm},
                rhs: 8
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 927
          }, 
          {
            tag: #assign,
            lhs: #h,
            rhs: {
              tag: #binary,
              op: #"/",
              lhs: {
                tag: #binary,
                op: #"-",
                lhs: {
                  tag: #binary,
                  op: #"+",
                  lhs: {tag: #loadslot, lhs: #ctx, rhs: #ys},
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_chn},
                    rhs: 8
                  }
                },
                rhs: 1
              },
              rhs: {
                tag: #binary,
                op: #"*",
                lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_chn},
                rhs: 8
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 929
          }, 
          {
            tag: #assign,
            lhs: #n,
            rhs: {tag: #binary, op: #"*", lhs: #w, rhs: #h},
            fn: "bstest/bs_decjpg.bs",
            ln: 930
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 931,
            args: [#ctx, #s],
            func: #PDJHUFF_InitStream
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 933,
            cond: {
              tag: #bincmp,
              op: #"<",
              lhs: #i,
              rhs: {tag: #binary, op: #"*", lhs: 4, rhs: 64}
            },
            then: {
              tag: #assign,
              lhs: {tag: #loadindex, lhs: #dbuf, rhs: #i},
              rhs: 0
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 935,
            args: "PDJPG_MarkerSOS: C\n",
            func: #printf
          }, 
          {
            tag: #ifelse,
            fn: "bstest/bs_decjpg.bs",
            ln: 937,
            cond: {
              tag: #bincmp,
              op: #"==",
              lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_nc},
              rhs: 1
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 941,
                  args: "PDJPG_MarkerSOS: Mono\n",
                  func: #printf
                }, 
                {
                  tag: #assign,
                  lhs: #rt,
                  rhs: 0,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 942
                }, 
                {
                  tag: #for,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 944,
                  cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: #h},
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #for,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 946,
                        cond: {tag: #bincmp, op: #"<", lhs: #j, rhs: #w},
                        then: {
                          tag: #block,
                          value: [
                            {
                              tag: #assign,
                              lhs: #rt,
                              rhs: {
                                tag: #call,
                                args: [
                                  #ctx, #dbuf, 
                                  {
                                    tag: #binary,
                                    op: #"+",
                                    lhs: {
                                      tag: #binary,
                                      op: #"*",
                                      lhs: {tag: #loadindex, lhs: #cdt, rhs: 0},
                                      rhs: 2
                                    },
                                    rhs: 0
                                  }, 
                                  {
                                    tag: #binary,
                                    op: #"+",
                                    lhs: {
                                      tag: #binary,
                                      op: #"*",
                                      lhs: {tag: #loadindex, lhs: #cat, rhs: 0},
                                      rhs: 2
                                    },
                                    rhs: 1
                                  }, 
                                  {tag: #loadindex, lhs: #qid, rhs: 0}, 
                                  {
                                    tag: #binary,
                                    op: #"+",
                                    lhs: {
                                      tag: #binary,
                                      op: #"*",
                                      lhs: #i,
                                      rhs: #w
                                    },
                                    rhs: #j
                                  }, 
                                  #n],
                                func: #PDJHUFF_DecodeBlock
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 948
                            }, 
                            {
                              tag: #if,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 950,
                              cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                              then: {tag: #break, value: 1}
                            }, 
                            {
                              tag: #call,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 951,
                              args: [#dbuf, #diblk, 128, #rt],
                              func: #PDJPG_TransIDCT
                            }, 
                            {
                              tag: #call,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 952,
                              args: [
                                #ctx, #diblk, 
                                {tag: #loadindex, lhs: #sibuf, rhs: 0}, 
                                {tag: #loadindex, lhs: #xi, rhs: 0}, 
                                {tag: #loadindex, lhs: #yi, rhs: 0}, 
                                {tag: #binary, op: #"*", lhs: #j, rhs: 8}, 
                                {tag: #binary, op: #"*", lhs: #i, rhs: 8}],
                              func: #PDJPG_CopyOutBlock8B
                            }]
                        },
                        init: {tag: #assign, lhs: #j, rhs: 0},
                        step: {tag: #postinc, value: #j}
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 955,
                        cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                        then: {tag: #break, value: 1}
                      }]
                  },
                  init: {tag: #assign, lhs: #i, rhs: 0},
                  step: {tag: #postinc, value: #i}
                }]
            },
            else: {
              tag: #ifelse,
              cond: {tag: #loadslot, lhs: #ctx, rhs: #jpg_is420},
              then: {
                tag: #block,
                value: [
                  {
                    tag: #call,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 959,
                    args: "PDJPG_MarkerSOS: Clr420\n",
                    func: #printf
                  }, 
                  {
                    tag: #assign,
                    lhs: #rt,
                    rhs: 0,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 960
                  }, 
                  {
                    tag: #for,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 962,
                    cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: #h},
                    then: {
                      tag: #block,
                      value: [
                        {
                          tag: #for,
                          fn: "bstest/bs_decjpg.bs",
                          ln: 964,
                          cond: {tag: #bincmp, op: #"<", lhs: #j, rhs: #w},
                          then: {
                            tag: #block,
                            value: [
                              {
                                tag: #assign,
                                lhs: #i1,
                                rhs: {tag: #binary, op: #"<<", lhs: #i, rhs: 1},
                                fn: "bstest/bs_decjpg.bs",
                                ln: 966
                              }, 
                              {
                                tag: #assign,
                                lhs: #j1,
                                rhs: {tag: #binary, op: #"<<", lhs: #j, rhs: 1},
                                fn: "bstest/bs_decjpg.bs",
                                ln: 967
                              }, 
                              {
                                tag: #assign,
                                lhs: #k,
                                rhs: {
                                  tag: #binary,
                                  op: #"+",
                                  lhs: {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #i1,
                                      rhs: 0
                                    },
                                    rhs: {tag: #loadindex, lhs: #wi, rhs: 0}
                                  },
                                  rhs: {
                                    tag: #binary,
                                    op: #"+",
                                    lhs: #j1,
                                    rhs: 0
                                  }
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 967
                              }, 
                              {
                                tag: #assign,
                                lhs: #rt,
                                rhs: {
                                  tag: #call,
                                  args: [
                                    #ctx, #dbuf, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cdt,
                                          rhs: 0
                                        },
                                        rhs: 2
                                      },
                                      rhs: 0
                                    }, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cat,
                                          rhs: 0
                                        },
                                        rhs: 2
                                      },
                                      rhs: 1
                                    }, 
                                    {tag: #loadindex, lhs: #qid, rhs: 0}, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: #i,
                                        rhs: #w
                                      },
                                      rhs: #j
                                    }, 
                                    #n],
                                  func: #PDJHUFF_DecodeBlock
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 969
                              }, 
                              {
                                tag: #if,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 971,
                                cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                                then: {tag: #break, value: 1}
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 972,
                                args: [#dbuf, #diblk, 128, #rt],
                                func: #PDJPG_TransIDCT
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 973,
                                args: [
                                  #ctx, #diblk, 
                                  {tag: #loadindex, lhs: #sibuf, rhs: 0}, 
                                  {tag: #loadindex, lhs: #xi, rhs: 0}, 
                                  {tag: #loadindex, lhs: #yi, rhs: 0}, 
                                  {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: 8,
                                    rhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #j1,
                                      rhs: 0
                                    }
                                  }, 
                                  {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #i1,
                                      rhs: 0
                                    },
                                    rhs: 8
                                  }],
                                func: #PDJPG_CopyOutBlock8B
                              }, 
                              {
                                tag: #assign,
                                lhs: #k,
                                rhs: {
                                  tag: #binary,
                                  op: #"+",
                                  lhs: {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #i1,
                                      rhs: 0
                                    },
                                    rhs: {tag: #loadindex, lhs: #wi, rhs: 0}
                                  },
                                  rhs: {
                                    tag: #binary,
                                    op: #"+",
                                    lhs: #j1,
                                    rhs: 1
                                  }
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 976
                              }, 
                              {
                                tag: #assign,
                                lhs: #rt,
                                rhs: {
                                  tag: #call,
                                  args: [
                                    #ctx, #dbuf, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cdt,
                                          rhs: 0
                                        },
                                        rhs: 2
                                      },
                                      rhs: 0
                                    }, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cat,
                                          rhs: 0
                                        },
                                        rhs: 2
                                      },
                                      rhs: 1
                                    }, 
                                    {tag: #loadindex, lhs: #qid, rhs: 0}, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: #i,
                                        rhs: #w
                                      },
                                      rhs: #j
                                    }, 
                                    #n],
                                  func: #PDJHUFF_DecodeBlock
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 978
                              }, 
                              {
                                tag: #if,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 980,
                                cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                                then: {tag: #break, value: 1}
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 981,
                                args: [#dbuf, #diblk, 128, #rt],
                                func: #PDJPG_TransIDCT
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 982,
                                args: [
                                  #ctx, #diblk, 
                                  {tag: #loadindex, lhs: #sibuf, rhs: 0}, 
                                  {tag: #loadindex, lhs: #xi, rhs: 0}, 
                                  {tag: #loadindex, lhs: #yi, rhs: 0}, 
                                  {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: 8,
                                    rhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #j1,
                                      rhs: 1
                                    }
                                  }, 
                                  {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #i1,
                                      rhs: 0
                                    },
                                    rhs: 8
                                  }],
                                func: #PDJPG_CopyOutBlock8B
                              }, 
                              {
                                tag: #assign,
                                lhs: #k,
                                rhs: {
                                  tag: #binary,
                                  op: #"+",
                                  lhs: {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #i1,
                                      rhs: 1
                                    },
                                    rhs: {tag: #loadindex, lhs: #wi, rhs: 0}
                                  },
                                  rhs: {
                                    tag: #binary,
                                    op: #"+",
                                    lhs: #j1,
                                    rhs: 0
                                  }
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 985
                              }, 
                              {
                                tag: #assign,
                                lhs: #rt,
                                rhs: {
                                  tag: #call,
                                  args: [
                                    #ctx, #dbuf, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cdt,
                                          rhs: 0
                                        },
                                        rhs: 2
                                      },
                                      rhs: 0
                                    }, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cat,
                                          rhs: 0
                                        },
                                        rhs: 2
                                      },
                                      rhs: 1
                                    }, 
                                    {tag: #loadindex, lhs: #qid, rhs: 0}, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: #i,
                                        rhs: #w
                                      },
                                      rhs: #j
                                    }, 
                                    #n],
                                  func: #PDJHUFF_DecodeBlock
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 987
                              }, 
                              {
                                tag: #if,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 989,
                                cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                                then: {tag: #break, value: 1}
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 990,
                                args: [#dbuf, #diblk, 128, #rt],
                                func: #PDJPG_TransIDCT
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 991,
                                args: [
                                  #ctx, #diblk, 
                                  {tag: #loadindex, lhs: #sibuf, rhs: 0}, 
                                  {tag: #loadindex, lhs: #xi, rhs: 0}, 
                                  {tag: #loadindex, lhs: #yi, rhs: 0}, 
                                  {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: 8,
                                    rhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #j1,
                                      rhs: 0
                                    }
                                  }, 
                                  {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #i1,
                                      rhs: 1
                                    },
                                    rhs: 8
                                  }],
                                func: #PDJPG_CopyOutBlock8B
                              }, 
                              {
                                tag: #assign,
                                lhs: #k,
                                rhs: {
                                  tag: #binary,
                                  op: #"+",
                                  lhs: {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #i1,
                                      rhs: 1
                                    },
                                    rhs: {tag: #loadindex, lhs: #wi, rhs: 0}
                                  },
                                  rhs: {
                                    tag: #binary,
                                    op: #"+",
                                    lhs: #j1,
                                    rhs: 1
                                  }
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 994
                              }, 
                              {
                                tag: #assign,
                                lhs: #rt,
                                rhs: {
                                  tag: #call,
                                  args: [
                                    #ctx, #dbuf, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cdt,
                                          rhs: 0
                                        },
                                        rhs: 2
                                      },
                                      rhs: 0
                                    }, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cat,
                                          rhs: 0
                                        },
                                        rhs: 2
                                      },
                                      rhs: 1
                                    }, 
                                    {tag: #loadindex, lhs: #qid, rhs: 0}, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: #i,
                                        rhs: #w
                                      },
                                      rhs: #j
                                    }, 
                                    #n],
                                  func: #PDJHUFF_DecodeBlock
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 996
                              }, 
                              {
                                tag: #if,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 998,
                                cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                                then: {tag: #break, value: 1}
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 999,
                                args: [#dbuf, #diblk, 128, #rt],
                                func: #PDJPG_TransIDCT
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1000,
                                args: [
                                  #ctx, #diblk, 
                                  {tag: #loadindex, lhs: #sibuf, rhs: 0}, 
                                  {tag: #loadindex, lhs: #xi, rhs: 0}, 
                                  {tag: #loadindex, lhs: #yi, rhs: 0}, 
                                  {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: 8,
                                    rhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #j1,
                                      rhs: 1
                                    }
                                  }, 
                                  {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #i1,
                                      rhs: 1
                                    },
                                    rhs: 8
                                  }],
                                func: #PDJPG_CopyOutBlock8B
                              }, 
                              {
                                tag: #assign,
                                lhs: #rt,
                                rhs: {
                                  tag: #call,
                                  args: [
                                    #ctx, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #dbuf,
                                      rhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: 1,
                                        rhs: 64
                                      }
                                    }, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cdt,
                                          rhs: 1
                                        },
                                        rhs: 2
                                      },
                                      rhs: 0
                                    }, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cat,
                                          rhs: 1
                                        },
                                        rhs: 2
                                      },
                                      rhs: 1
                                    }, 
                                    {tag: #loadindex, lhs: #qid, rhs: 1}, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: #i,
                                        rhs: #w
                                      },
                                      rhs: #j
                                    }, 
                                    #n],
                                  func: #PDJHUFF_DecodeBlock
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1003
                              }, 
                              {
                                tag: #if,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1006,
                                cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                                then: {tag: #break, value: 1}
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1007,
                                args: [
                                  {
                                    tag: #binary,
                                    op: #"+",
                                    lhs: #dbuf,
                                    rhs: {
                                      tag: #binary,
                                      op: #"*",
                                      lhs: 1,
                                      rhs: 64
                                    }
                                  }, 
                                  #diblk, 128, #rt],
                                func: #PDJPG_TransIDCT
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1008,
                                args: [
                                  #ctx, #diblk, 
                                  {tag: #loadindex, lhs: #sibuf, rhs: 1}, 
                                  {tag: #loadindex, lhs: #xi, rhs: 1}, 
                                  {tag: #loadindex, lhs: #yi, rhs: 1}, 
                                  {tag: #binary, op: #"*", lhs: #j, rhs: 8}, 
                                  {tag: #binary, op: #"*", lhs: #i, rhs: 8}],
                                func: #PDJPG_CopyOutBlock8B
                              }, 
                              {
                                tag: #assign,
                                lhs: #rt,
                                rhs: {
                                  tag: #call,
                                  args: [
                                    #ctx, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: #dbuf,
                                      rhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: 2,
                                        rhs: 64
                                      }
                                    }, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cdt,
                                          rhs: 2
                                        },
                                        rhs: 2
                                      },
                                      rhs: 0
                                    }, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: {
                                          tag: #loadindex,
                                          lhs: #cat,
                                          rhs: 2
                                        },
                                        rhs: 2
                                      },
                                      rhs: 1
                                    }, 
                                    {tag: #loadindex, lhs: #qid, rhs: 2}, 
                                    {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #binary,
                                        op: #"*",
                                        lhs: #i,
                                        rhs: #w
                                      },
                                      rhs: #j
                                    }, 
                                    #n],
                                  func: #PDJHUFF_DecodeBlock
                                },
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1010
                              }, 
                              {
                                tag: #if,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1013,
                                cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                                then: {tag: #break, value: 1}
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1014,
                                args: [
                                  {
                                    tag: #binary,
                                    op: #"+",
                                    lhs: #dbuf,
                                    rhs: {
                                      tag: #binary,
                                      op: #"*",
                                      lhs: 2,
                                      rhs: 64
                                    }
                                  }, 
                                  #diblk, 128, #rt],
                                func: #PDJPG_TransIDCT
                              }, 
                              {
                                tag: #call,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1015,
                                args: [
                                  #ctx, #diblk, 
                                  {tag: #loadindex, lhs: #sibuf, rhs: 2}, 
                                  {tag: #loadindex, lhs: #xi, rhs: 2}, 
                                  {tag: #loadindex, lhs: #yi, rhs: 2}, 
                                  {tag: #binary, op: #"*", lhs: #j, rhs: 8}, 
                                  {tag: #binary, op: #"*", lhs: #i, rhs: 8}],
                                func: #PDJPG_CopyOutBlock8B
                              }]
                          },
                          init: {tag: #assign, lhs: #j, rhs: 0},
                          step: {tag: #postinc, value: #j}
                        }, 
                        {
                          tag: #if,
                          fn: "bstest/bs_decjpg.bs",
                          ln: 1018,
                          cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                          then: {tag: #break, value: 1}
                        }]
                    },
                    init: {tag: #assign, lhs: #i, rhs: 0},
                    step: {tag: #postinc, value: #i}
                  }]
              },
              else: {
                tag: #block,
                value: [
                  {
                    tag: #call,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 1022,
                    args: "PDJPG_MarkerSOS: Generic\n",
                    func: #printf
                  }, 
                  {
                    tag: #assign,
                    lhs: #rt,
                    rhs: 0,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 1023
                  }, 
                  {
                    tag: #for,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 1025,
                    cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: #n},
                    then: {
                      tag: #block,
                      value: [
                        {
                          tag: #for,
                          fn: "bstest/bs_decjpg.bs",
                          ln: 1027,
                          cond: {tag: #bincmp, op: #"<", lhs: #j, rhs: #ns},
                          then: {
                            tag: #block,
                            value: [
                              {
                                tag: #for,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1029,
                                cond: {
                                  tag: #bincmp,
                                  op: #"<",
                                  lhs: #k,
                                  rhs: {tag: #loadindex, lhs: #cv, rhs: #j}
                                },
                                then: {
                                  tag: #block,
                                  value: [
                                    {
                                      tag: #for,
                                      fn: "bstest/bs_decjpg.bs",
                                      ln: 1031,
                                      cond: {
                                        tag: #bincmp,
                                        op: #"<",
                                        lhs: #l,
                                        rhs: {
                                          tag: #loadindex,
                                          lhs: #ch,
                                          rhs: #j
                                        }
                                      },
                                      then: {
                                        tag: #block,
                                        value: [
                                          {
                                            tag: #if,
                                            fn: "bstest/bs_decjpg.bs",
                                            ln: 1033,
                                            cond: {
                                              tag: #bincmp,
                                              op: #"<",
                                              lhs: #rt,
                                              rhs: 0
                                            },
                                            then: {tag: #break, value: 1}
                                          }, 
                                          {
                                            tag: #assign,
                                            lhs: #i1,
                                            rhs: {
                                              tag: #binary,
                                              op: #"*",
                                              lhs: {
                                                tag: #binary,
                                                op: #"/",
                                                lhs: #i,
                                                rhs: {
                                                  tag: #binary,
                                                  op: #"/",
                                                  lhs: {
                                                    tag: #loadindex,
                                                    lhs: #wi,
                                                    rhs: #j
                                                  },
                                                  rhs: {
                                                    tag: #loadindex,
                                                    lhs: #ch,
                                                    rhs: #j
                                                  }
                                                }
                                              },
                                              rhs: {
                                                tag: #loadindex,
                                                lhs: #ch,
                                                rhs: #j
                                              }
                                            },
                                            fn: "bstest/bs_decjpg.bs",
                                            ln: 1034
                                          }, 
                                          {
                                            tag: #assign,
                                            lhs: #j1,
                                            rhs: {
                                              tag: #binary,
                                              op: #"*",
                                              lhs: {
                                                tag: #binary,
                                                op: #"%",
                                                lhs: #i,
                                                rhs: {
                                                  tag: #binary,
                                                  op: #"/",
                                                  lhs: {
                                                    tag: #loadindex,
                                                    lhs: #wi,
                                                    rhs: #j
                                                  },
                                                  rhs: {
                                                    tag: #loadindex,
                                                    lhs: #ch,
                                                    rhs: #j
                                                  }
                                                }
                                              },
                                              rhs: {
                                                tag: #loadindex,
                                                lhs: #ch,
                                                rhs: #j
                                              }
                                            },
                                            fn: "bstest/bs_decjpg.bs",
                                            ln: 1036
                                          }, 
                                          {
                                            tag: #assign,
                                            lhs: #rt,
                                            rhs: {
                                              tag: #call,
                                              args: [
                                                #ctx, 
                                                {
                                                  tag: #binary,
                                                  op: #"+",
                                                  lhs: #dbuf,
                                                  rhs: {
                                                    tag: #binary,
                                                    op: #"*",
                                                    lhs: #j,
                                                    rhs: 64
                                                  }
                                                }, 
                                                {
                                                  tag: #binary,
                                                  op: #"+",
                                                  lhs: {
                                                    tag: #binary,
                                                    op: #"*",
                                                    lhs: {
                                                      tag: #loadindex,
                                                      lhs: #cdt,
                                                      rhs: #j
                                                    },
                                                    rhs: 2
                                                  },
                                                  rhs: 0
                                                }, 
                                                {
                                                  tag: #binary,
                                                  op: #"+",
                                                  lhs: {
                                                    tag: #binary,
                                                    op: #"*",
                                                    lhs: {
                                                      tag: #loadindex,
                                                      lhs: #cat,
                                                      rhs: #j
                                                    },
                                                    rhs: 2
                                                  },
                                                  rhs: 1
                                                }, 
                                                {
                                                  tag: #loadindex,
                                                  lhs: #qid,
                                                  rhs: #j
                                                }, 
                                                #i, #n],
                                              func: #PDJHUFF_DecodeBlock
                                            },
                                            fn: "bstest/bs_decjpg.bs",
                                            ln: 1037
                                          }, 
                                          {
                                            tag: #if,
                                            fn: "bstest/bs_decjpg.bs",
                                            ln: 1040,
                                            cond: {
                                              tag: #bincmp,
                                              op: #"<",
                                              lhs: #rt,
                                              rhs: 0
                                            },
                                            then: {tag: #break, value: 1}
                                          }, 
                                          {
                                            tag: #call,
                                            fn: "bstest/bs_decjpg.bs",
                                            ln: 1041,
                                            args: [
                                              {
                                                tag: #binary,
                                                op: #"+",
                                                lhs: #dbuf,
                                                rhs: {
                                                  tag: #binary,
                                                  op: #"*",
                                                  lhs: #j,
                                                  rhs: 64
                                                }
                                              }, 
                                              #diblk, 128, #rt],
                                            func: #PDJPG_TransIDCT
                                          }, 
                                          {
                                            tag: #call,
                                            fn: "bstest/bs_decjpg.bs",
                                            ln: 1043,
                                            args: [
                                              #ctx, #diblk, 
                                              {
                                                tag: #loadindex,
                                                lhs: #sibuf,
                                                rhs: #j
                                              }, 
                                              {
                                                tag: #loadindex,
                                                lhs: #xi,
                                                rhs: #j
                                              }, 
                                              {
                                                tag: #loadindex,
                                                lhs: #yi,
                                                rhs: #j
                                              }, 
                                              {
                                                tag: #binary,
                                                op: #"*",
                                                lhs: 8,
                                                rhs: {
                                                  tag: #binary,
                                                  op: #"+",
                                                  lhs: #j1,
                                                  rhs: #l
                                                }
                                              }, 
                                              {
                                                tag: #binary,
                                                op: #"*",
                                                lhs: {
                                                  tag: #binary,
                                                  op: #"+",
                                                  lhs: #i1,
                                                  rhs: #k
                                                },
                                                rhs: 8
                                              }],
                                            func: #PDJPG_CopyOutBlock8B
                                          }]
                                      },
                                      init: {tag: #assign, lhs: #l, rhs: 0},
                                      step: {tag: #postinc, value: #l}
                                    }, 
                                    {
                                      tag: #if,
                                      fn: "bstest/bs_decjpg.bs",
                                      ln: 1047,
                                      cond: {
                                        tag: #bincmp,
                                        op: #"<",
                                        lhs: #rt,
                                        rhs: 0
                                      },
                                      then: {tag: #break, value: 1}
                                    }]
                                },
                                init: {tag: #assign, lhs: #k, rhs: 0},
                                step: {tag: #postinc, value: #k}
                              }, 
                              {
                                tag: #if,
                                fn: "bstest/bs_decjpg.bs",
                                ln: 1049,
                                cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                                then: {tag: #break, value: 1}
                              }]
                          },
                          init: {tag: #assign, lhs: #j, rhs: 0},
                          step: {tag: #postinc, value: #j}
                        }, 
                        {
                          tag: #if,
                          fn: "bstest/bs_decjpg.bs",
                          ln: 1051,
                          cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
                          then: {tag: #break, value: 1}
                        }]
                    },
                    init: {tag: #assign, lhs: #i, rhs: 0},
                    step: {tag: #postinc, value: #i}
                  }]
              }
            }
          }, 
          {
            tag: #assign,
            lhs: #t1,
            rhs: {tag: #call, args: undefined, func: #clock},
            fn: "bstest/bs_decjpg.bs",
            ln: 1054
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1056,
            args: [
              "PDJPG_MarkerSOS: Img Dec Dt=%d\n", 
              {tag: #binary, op: #"-", lhs: #t1, rhs: #t0}],
            func: #printf
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 1057,
            cond: {tag: #bincmp, op: #"<", lhs: #rt, rhs: 0},
            then: {
              tag: #block,
              value: [
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1060,
                  args: "PDJPG_MarkerSOS: Bad Image\n",
                  func: #printf
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1061,
                  value: -1
                }]
            }
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #binary,
              op: #"-",
              lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_cs},
              rhs: #buf
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1063
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1065, value: #i}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerSOF0,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 295,
      fn: "bstest/bs_decjpg.bs",
      ln: 1067,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1070,
            value: [
              {
                tag: #var,
                name: #cnt,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #s,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1071,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #m, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #n, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #l,
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"<<",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 0},
                rhs: 8
              },
              rhs: {tag: #loadindex, lhs: #buf, rhs: 1}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1072
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"<<",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 3},
                rhs: 8
              },
              rhs: {tag: #loadindex, lhs: #buf, rhs: 4}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1074
          }, 
          {
            tag: #assign,
            lhs: #j,
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"<<",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 5},
                rhs: 8
              },
              rhs: {tag: #loadindex, lhs: #buf, rhs: 6}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1076
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #xs},
            rhs: #j,
            fn: "bstest/bs_decjpg.bs",
            ln: 1077
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #ys},
            rhs: #i,
            fn: "bstest/bs_decjpg.bs",
            ln: 1079
          }, 
          {
            tag: #assign,
            lhs: #m,
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1080
          }, 
          {
            tag: #assign,
            lhs: #n,
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1082
          }, 
          {
            tag: #assign,
            lhs: #k,
            rhs: {tag: #loadindex, lhs: #buf, rhs: 7},
            fn: "bstest/bs_decjpg.bs",
            ln: 1082
          }, 
          {
            tag: #assign,
            lhs: #s,
            rhs: {tag: #binary, op: #"+", lhs: #buf, rhs: 8},
            fn: "bstest/bs_decjpg.bs",
            ln: 1084
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 1085,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: #k},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cid},
                    rhs: #i
                  },
                  rhs: {tag: #loadindex, lhs: #s, rhs: 0},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1087
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_ch},
                    rhs: #i
                  },
                  rhs: {
                    tag: #binary,
                    op: #">>",
                    lhs: {tag: #loadindex, lhs: #s, rhs: 1},
                    rhs: 4
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1088
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cv},
                    rhs: #i
                  },
                  rhs: {
                    tag: #binary,
                    op: #"&",
                    lhs: {tag: #loadindex, lhs: #s, rhs: 1},
                    rhs: 15
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1089
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_qid},
                    rhs: #i
                  },
                  rhs: {tag: #loadindex, lhs: #s, rhs: 2},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1090
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1091,
                  cond: {
                    tag: #bincmp,
                    op: #">",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_ch},
                      rhs: #i
                    },
                    rhs: #m
                  },
                  then: {
                    tag: #assign,
                    lhs: #m,
                    rhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_ch},
                      rhs: #i
                    }
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1093,
                  cond: {
                    tag: #bincmp,
                    op: #">",
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cv},
                      rhs: #i
                    },
                    rhs: #n
                  },
                  then: {
                    tag: #assign,
                    lhs: #n,
                    rhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cv},
                      rhs: #i
                    }
                  }
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #s,
                  rhs: 3,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1094
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_chm},
            rhs: #m,
            fn: "bstest/bs_decjpg.bs",
            ln: 1096
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_chn},
            rhs: #n,
            fn: "bstest/bs_decjpg.bs",
            ln: 1098
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 1099,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: #k},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cxi},
                    rhs: #i
                  },
                  rhs: {
                    tag: #binary,
                    op: #"/",
                    lhs: {
                      tag: #binary,
                      op: #"*",
                      lhs: {
                        tag: #loadindex,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_ch},
                        rhs: #i
                      },
                      rhs: {tag: #loadslot, lhs: #ctx, rhs: #xs}
                    },
                    rhs: #m
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1102
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cyi},
                    rhs: #i
                  },
                  rhs: {
                    tag: #binary,
                    op: #"/",
                    lhs: {
                      tag: #binary,
                      op: #"*",
                      lhs: {
                        tag: #loadindex,
                        lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_cv},
                        rhs: #i
                      },
                      rhs: {tag: #loadslot, lhs: #ctx, rhs: #ys}
                    },
                    rhs: #n
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1103
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_nc},
            rhs: #k,
            fn: "bstest/bs_decjpg.bs",
            ln: 1105
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1106, value: 0}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerDQT,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 132,
      fn: "bstest/bs_decjpg.bs",
      ln: 1109,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1112,
            value: [
              {
                tag: #var,
                name: #s,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #se,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1113,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #l,
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"<<",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 0},
                rhs: 8
              },
              rhs: {tag: #loadindex, lhs: #buf, rhs: 1}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1114
          }, 
          {
            tag: #assign,
            lhs: #s,
            rhs: {tag: #binary, op: #"+", lhs: #buf, rhs: 2},
            fn: "bstest/bs_decjpg.bs",
            ln: 1116
          }, 
          {
            tag: #assign,
            lhs: #se,
            rhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #l},
            fn: "bstest/bs_decjpg.bs",
            ln: 1118
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 1119,
            cond: {tag: #bincmp, op: #"<", lhs: #s, rhs: #se},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #i,
                  rhs: {
                    tag: #binary,
                    op: #"&",
                    lhs: {
                      tag: #binary,
                      op: #">>",
                      lhs: {tag: #loadindex, lhs: #s, rhs: 0},
                      rhs: 4
                    },
                    rhs: 15
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1122
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1123,
                  cond: #i,
                  then: {
                    tag: #return,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 1125,
                    value: -1
                  }
                }, 
                {
                  tag: #assign,
                  lhs: #i,
                  rhs: {
                    tag: #binary,
                    op: #"&",
                    lhs: {tag: #loadindex, lhs: #s, rhs: 0},
                    rhs: 15
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1125
                }, 
                {
                  tag: #for,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1126,
                  cond: {tag: #bincmp, op: #"<", lhs: #j, rhs: 64},
                  then: {
                    tag: #assign,
                    lhs: {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_qt},
                      rhs: {
                        tag: #binary,
                        op: #"+",
                        lhs: {tag: #binary, op: #"*", lhs: #i, rhs: 64},
                        rhs: {tag: #loadindex, lhs: #pdjpg_zigzag2, rhs: #j}
                      }
                    },
                    rhs: {
                      tag: #loadindex,
                      lhs: #s,
                      rhs: {tag: #binary, op: #"+", lhs: #j, rhs: 1}
                    }
                  },
                  init: {tag: #assign, lhs: #j, rhs: 0},
                  step: {tag: #postinc, value: #j}
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #s,
                  rhs: 65,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1128
                }]
            }
          }, 
          {
            tag: #return,
            fn: "bstest/bs_decjpg.bs",
            ln: 1130,
            value: {tag: #binary, op: #"-", lhs: #s, rhs: #buf}
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerDHT,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 471,
      fn: "bstest/bs_decjpg.bs",
      ln: 1133,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1136,
            value: [
              {
                tag: #var,
                name: #cnt,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #s,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1137,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #tn, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #l,
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"<<",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 0},
                rhs: 8
              },
              rhs: {tag: #loadindex, lhs: #buf, rhs: 1}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1138
          }, 
          {
            tag: #assign,
            lhs: #j,
            rhs: {
              tag: #binary,
              op: #"&",
              lhs: {
                tag: #binary,
                op: #">>",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 2},
                rhs: 4
              },
              rhs: 15
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1140
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #binary,
              op: #"&",
              lhs: {tag: #loadindex, lhs: #buf, rhs: 2},
              rhs: 15
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1142
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1143,
            args: ["dest %d, type %d\n", #i, #j],
            func: #printf
          }, 
          {
            tag: #assign,
            lhs: #tn,
            rhs: {
              tag: #binary,
              op: #"+",
              lhs: {tag: #binary, op: #"*", lhs: #i, rhs: 2},
              rhs: #j
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1144
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 1146,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: 256},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_len},
                    rhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                      rhs: #i
                    }
                  },
                  rhs: 0,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1149
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_next},
                    rhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                      rhs: #i
                    }
                  },
                  rhs: -1,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1150
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_idx},
                    rhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                      rhs: #i
                    }
                  },
                  rhs: -1,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1151
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #assign,
            lhs: #cnt,
            rhs: {tag: #binary, op: #"+", lhs: #buf, rhs: 3},
            fn: "bstest/bs_decjpg.bs",
            ln: 1153
          }, 
          {
            tag: #assign,
            lhs: #s,
            rhs: {tag: #binary, op: #"+", lhs: #cnt, rhs: 16},
            fn: "bstest/bs_decjpg.bs",
            ln: 1155
          }, 
          {
            tag: #assign,
            lhs: #k,
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1156
          }, 
          {
            tag: #assign,
            lhs: #l,
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1157
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 1157,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: 16},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assignop,
                  op: #"<<",
                  lhs: #k,
                  rhs: 1,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1159
                }, 
                {
                  tag: #for,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1160,
                  cond: {
                    tag: #bincmp,
                    op: #"<",
                    lhs: #j,
                    rhs: {tag: #loadindex, lhs: #cnt, rhs: #i}
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: {
                          tag: #loadindex,
                          lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_code},
                          rhs: {
                            tag: #binary,
                            op: #"+",
                            lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                            rhs: {tag: #unary, op: #"*", value: #s}
                          }
                        },
                        rhs: {tag: #postinc, value: #k},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1162
                      }, 
                      {
                        tag: #assign,
                        lhs: {
                          tag: #loadindex,
                          lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_len},
                          rhs: {
                            tag: #binary,
                            op: #"+",
                            lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                            rhs: {tag: #unary, op: #"*", value: #s}
                          }
                        },
                        rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1163
                      }, 
                      {
                        tag: #assign,
                        lhs: {
                          tag: #loadindex,
                          lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_mask},
                          rhs: {
                            tag: #binary,
                            op: #"+",
                            lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                            rhs: {tag: #unary, op: #"*", value: #s}
                          }
                        },
                        rhs: {
                          tag: #binary,
                          op: #"-",
                          lhs: {
                            tag: #binary,
                            op: #"<<",
                            lhs: 1,
                            rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                          },
                          rhs: 1
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1164
                      }, 
                      {
                        tag: #assign,
                        lhs: #l,
                        rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1165
                      }, 
                      {
                        tag: #postinc,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1166,
                        value: #s
                      }]
                  },
                  init: {tag: #assign, lhs: #j, rhs: 0},
                  step: {tag: #postinc, value: #j}
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1169,
            args: ["%04X %d\n", #k, #l],
            func: #printf
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 1170,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: 256},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_next},
                    rhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                      rhs: #i
                    }
                  },
                  rhs: -1,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1185
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_idx},
                    rhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                      rhs: #i
                    }
                  },
                  rhs: -1,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1186
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 1188,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: 256},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #l,
                  rhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_len},
                    rhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                      rhs: #i
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1191
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1192,
                  cond: {tag: #unary, op: #"!", value: #l},
                  then: {tag: #continue, value: 0}
                }, 
                {
                  tag: #assign,
                  lhs: #j,
                  rhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_code},
                    rhs: {
                      tag: #binary,
                      op: #"+",
                      lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                      rhs: #i
                    }
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1193
                }, 
                {
                  tag: #ifelse,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1194,
                  cond: {tag: #bincmp, op: #"<=", lhs: #l, rhs: 8},
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: {
                          tag: #binary,
                          op: #"<<",
                          lhs: #j,
                          rhs: {tag: #binary, op: #"-", lhs: 8, rhs: #l}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1197
                      }, 
                      {
                        tag: #assign,
                        lhs: #k,
                        rhs: {
                          tag: #binary,
                          op: #"<<",
                          lhs: 1,
                          rhs: {tag: #binary, op: #"-", lhs: 8, rhs: #l}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1198
                      }, 
                      {
                        tag: #while,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1199,
                        cond: {
                          tag: #binary,
                          op: #"&&",
                          lhs: {tag: #postdec, value: #k},
                          rhs: {tag: #bincmp, op: #"<", lhs: #j, rhs: 256}
                        },
                        then: {
                          tag: #block,
                          value: [
                            {
                              tag: #assign,
                              lhs: {
                                tag: #loadindex,
                                lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_idx},
                                rhs: {
                                  tag: #binary,
                                  op: #"+",
                                  lhs: {
                                    tag: #binary,
                                    op: #"*",
                                    lhs: #tn,
                                    rhs: 256
                                  },
                                  rhs: #j
                                }
                              },
                              rhs: #i,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1201
                            }, 
                            {
                              tag: #postinc,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1202,
                              value: #j
                            }]
                        }
                      }]
                  },
                  else: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: {
                          tag: #binary,
                          op: #">>",
                          lhs: #j,
                          rhs: {tag: #binary, op: #"-", lhs: #l, rhs: 8}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1206
                      }, 
                      {
                        tag: #assign,
                        lhs: {
                          tag: #loadindex,
                          lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_next},
                          rhs: {
                            tag: #binary,
                            op: #"+",
                            lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                            rhs: #i
                          }
                        },
                        rhs: {
                          tag: #loadindex,
                          lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_idx},
                          rhs: {
                            tag: #binary,
                            op: #"+",
                            lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                            rhs: #j
                          }
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1207
                      }, 
                      {
                        tag: #assign,
                        lhs: {
                          tag: #loadindex,
                          lhs: {tag: #loadslot, lhs: #ctx, rhs: #huff_idx},
                          rhs: {
                            tag: #binary,
                            op: #"+",
                            lhs: {tag: #binary, op: #"*", lhs: #tn, rhs: 256},
                            rhs: #j
                          }
                        },
                        rhs: #i,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1209
                      }]
                  }
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #return,
            fn: "bstest/bs_decjpg.bs",
            ln: 1212,
            value: {tag: #binary, op: #"-", lhs: #s, rhs: #buf}
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerAPP0,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 7,
      fn: "bstest/bs_decjpg.bs",
      ln: 1215,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1218, value: 0}
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerAPP9,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 10,
      fn: "bstest/bs_decjpg.bs",
      ln: 1220,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #i,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 1223
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1224, value: 0}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerAPP11,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 20,
      fn: "bstest/bs_decjpg.bs",
      ln: 1227,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1230,
            value: [
              {tag: #var, name: #cr, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cg, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cb, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #ca, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assignop,
            op: #"+",
            lhs: #buf,
            rhs: 2,
            fn: "bstest/bs_decjpg.bs",
            ln: 1231
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1233, value: 0}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerAPP12,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 48,
      fn: "bstest/bs_decjpg.bs",
      ln: 1235,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #i,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 1238
          }, 
          {
            tag: #assignop,
            op: #"+",
            lhs: #buf,
            rhs: 2,
            fn: "bstest/bs_decjpg.bs",
            ln: 1239
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #binary,
              op: #"|",
              lhs: {
                tag: #binary,
                op: #"|",
                lhs: {
                  tag: #binary,
                  op: #"|",
                  lhs: {
                    tag: #binary,
                    op: #"<<",
                    lhs: {tag: #loadindex, lhs: #buf, rhs: 0},
                    rhs: 24
                  },
                  rhs: {
                    tag: #binary,
                    op: #"<<",
                    lhs: {tag: #loadindex, lhs: #buf, rhs: 1},
                    rhs: 16
                  }
                },
                rhs: {
                  tag: #binary,
                  op: #"<<",
                  lhs: {tag: #loadindex, lhs: #buf, rhs: 2},
                  rhs: 8
                }
              },
              rhs: {tag: #loadindex, lhs: #buf, rhs: 3}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1240
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1242, value: 0}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerAPP14,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 11,
      fn: "bstest/bs_decjpg.bs",
      ln: 1245,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #assignop,
            op: #"+",
            lhs: #buf,
            rhs: 2,
            fn: "bstest/bs_decjpg.bs",
            ln: 1248
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1249, value: 0}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_MarkerAPPN,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 7,
      fn: "bstest/bs_decjpg.bs",
      ln: 1252,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1255, value: 0}
    }, 
    {
      tag: #func,
      name: #PDJPG_DecodeCtxInner,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 570,
      fn: "bstest/bs_decjpg.bs",
      ln: 1257,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #sz, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #xs, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #ys, type: {tag: #type, name: #int, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1261,
            value: [
              {
                tag: #var,
                name: #obuf,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #ct,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1262,
            value: [
              {tag: #var, name: #y, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #u, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #v, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #r, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #g, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #b, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #a, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #u1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #v1, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1263,
            value: [
              {tag: #var, name: #y0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #y1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #y2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #y3, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1264,
            value: [
              {tag: #var, name: #r0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #g0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #b0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #a0, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1265,
            value: [
              {tag: #var, name: #r1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #g1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #b1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #a1, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1266,
            value: [
              {tag: #var, name: #r2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #g2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #b2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #a2, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1267,
            value: [
              {tag: #var, name: #r3, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #g3, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #b3, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #a3, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1268,
            value: [
              {tag: #var, name: #l0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l3, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1269,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #l, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 1270,
            cond: {
              tag: #binary,
              op: #"||",
              lhs: {
                tag: #bincmp,
                op: #"!=",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 0},
                rhs: 255
              },
              rhs: {
                tag: #bincmp,
                op: #"!=",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 1},
                rhs: #JPG_SOI
              }
            },
            then: {tag: #return, value: -1}
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_is420},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1273
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_rdct},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1275
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1276,
            args: "PDJPG_DecodeCtxInner: Enter\n",
            func: #printf
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 1278,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: #sz},
            then: {
              tag: #block,
              value: [
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1281,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {tag: #loadindex, lhs: #buf, rhs: #i},
                    rhs: 255
                  },
                  then: {tag: #continue, value: 0}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1286,
                  cond: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {
                      tag: #loadindex,
                      lhs: #buf,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    rhs: 0
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #postinc,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1289,
                        value: #i
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1289,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1289,
                  cond: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {
                      tag: #loadindex,
                      lhs: #buf,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    rhs: 255
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #postinc,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1291,
                        value: #i
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1291,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1291,
                  cond: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {
                      tag: #loadindex,
                      lhs: #buf,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    rhs: #JPG_SOI
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #postinc,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1294,
                        value: #i
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1294,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #assign,
                  lhs: #j,
                  rhs: {
                    tag: #binary,
                    op: #"-",
                    lhs: {
                      tag: #loadindex,
                      lhs: #buf,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    rhs: 192
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1294
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1296,
                  cond: {tag: #bincmp, op: #"<", lhs: #j, rhs: 0},
                  then: {tag: #assign, lhs: #j, rhs: 63}
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1297,
                  cond: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {
                      tag: #loadindex,
                      lhs: #buf,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    rhs: #JPG_DQT
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #call,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1300,
                        args: "PDJPG_DecodeCtxInner: DQT\n",
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1301,
                        args: [
                          #ctx, 
                          {
                            tag: #binary,
                            op: #"+",
                            lhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #i},
                            rhs: 2
                          }],
                        func: #PDJPG_MarkerDQT
                      }]
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1303,
                  cond: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {
                      tag: #loadindex,
                      lhs: #buf,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    rhs: #JPG_DHT
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #call,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1305,
                        args: "PDJPG_DecodeCtxInner: DHT\n",
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1306,
                        args: [
                          #ctx, 
                          {
                            tag: #binary,
                            op: #"+",
                            lhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #i},
                            rhs: 2
                          }],
                        func: #PDJPG_MarkerDHT
                      }]
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1308,
                  cond: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {
                      tag: #loadindex,
                      lhs: #buf,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    rhs: #JPG_SOF0
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #call,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1310,
                        args: "PDJPG_DecodeCtxInner: SOF0\n",
                        func: #printf
                      }, 
                      {
                        tag: #call,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1311,
                        args: [
                          #ctx, 
                          {
                            tag: #binary,
                            op: #"+",
                            lhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #i},
                            rhs: 2
                          }],
                        func: #PDJPG_MarkerSOF0
                      }]
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1313,
                  cond: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {
                      tag: #loadindex,
                      lhs: #buf,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    rhs: #JPG_SOS
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #call,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1315,
                        args: "PDJPG_DecodeCtxInner: SOS\n",
                        func: #printf
                      }, 
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: {
                          tag: #call,
                          args: [
                            #ctx, 
                            {
                              tag: #binary,
                              op: #"+",
                              lhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #i},
                              rhs: 2
                            }],
                          func: #PDJPG_MarkerSOS
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1316
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1318,
                        cond: {tag: #bincmp, op: #">", lhs: #j, rhs: 0},
                        then: {
                          tag: #assignop,
                          op: #"+",
                          lhs: #i,
                          rhs: #j,
                          fn: "bstest/bs_decjpg.bs",
                          ln: 1319
                        }
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1319,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1321,
                  cond: {
                    tag: #binary,
                    op: #"&&",
                    lhs: {
                      tag: #bincmp,
                      op: #">=",
                      lhs: {
                        tag: #loadindex,
                        lhs: #buf,
                        rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                      },
                      rhs: #JPG_APP0
                    },
                    rhs: {
                      tag: #bincmp,
                      op: #"<=",
                      lhs: {
                        tag: #loadindex,
                        lhs: #buf,
                        rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                      },
                      rhs: #JPG_APP15
                    }
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #call,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1324,
                        args: [
                          "PDJPG_DecodeCtxInner: APP%d\n", 
                          {
                            tag: #binary,
                            op: #"-",
                            lhs: {
                              tag: #loadindex,
                              lhs: #buf,
                              rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                            },
                            rhs: #JPG_APP0
                          }],
                        func: #printf
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1326,
                        cond: {
                          tag: #bincmp,
                          op: #"==",
                          lhs: {
                            tag: #loadindex,
                            lhs: #buf,
                            rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                          },
                          rhs: #JPG_APP0
                        },
                        then: {
                          tag: #call,
                          args: [
                            #ctx, 
                            {
                              tag: #binary,
                              op: #"+",
                              lhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #i},
                              rhs: 2
                            }],
                          func: #PDJPG_MarkerAPP0
                        }
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1328,
                        cond: {
                          tag: #bincmp,
                          op: #"==",
                          lhs: {
                            tag: #loadindex,
                            lhs: #buf,
                            rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                          },
                          rhs: #JPG_APP11
                        },
                        then: {
                          tag: #call,
                          args: [
                            #ctx, 
                            {
                              tag: #binary,
                              op: #"+",
                              lhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #i},
                              rhs: 2
                            }],
                          func: #PDJPG_MarkerAPP11
                        }
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1329,
                        cond: {
                          tag: #bincmp,
                          op: #"==",
                          lhs: {
                            tag: #loadindex,
                            lhs: #buf,
                            rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                          },
                          rhs: #JPG_APP12
                        },
                        then: {
                          tag: #call,
                          args: [
                            #ctx, 
                            {
                              tag: #binary,
                              op: #"+",
                              lhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #i},
                              rhs: 2
                            }],
                          func: #PDJPG_MarkerAPP12
                        }
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1330,
                        cond: {
                          tag: #bincmp,
                          op: #"==",
                          lhs: {
                            tag: #loadindex,
                            lhs: #buf,
                            rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                          },
                          rhs: #JPG_APP14
                        },
                        then: {
                          tag: #call,
                          args: [
                            #ctx, 
                            {
                              tag: #binary,
                              op: #"+",
                              lhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #i},
                              rhs: 2
                            }],
                          func: #PDJPG_MarkerAPP14
                        }
                      }, 
                      {
                        tag: #assign,
                        lhs: #j,
                        rhs: {
                          tag: #binary,
                          op: #"|",
                          lhs: {
                            tag: #binary,
                            op: #"<<",
                            lhs: {
                              tag: #loadindex,
                              lhs: #buf,
                              rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 2}
                            },
                            rhs: 8
                          },
                          rhs: {
                            tag: #loadindex,
                            lhs: #buf,
                            rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 3}
                          }
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1331
                      }, 
                      {
                        tag: #assignop,
                        op: #"+",
                        lhs: #i,
                        rhs: #j,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1334
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1335,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1337,
                  cond: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {
                      tag: #loadindex,
                      lhs: #buf,
                      rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 1}
                    },
                    rhs: #JPG_EOI
                  },
                  then: {tag: #break, value: 1}
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1340,
            args: "PDJPG_DecodeCtxInner: Exit\n",
            func: #printf
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1342,
            args: [
              "Sz=%d x %d\n", {tag: #loadslot, lhs: #ctx, rhs: #xs}, 
              {tag: #loadslot, lhs: #ctx, rhs: #ys}],
            func: #printf
          }, 
          {
            tag: #assign,
            lhs: {tag: #unary, op: #"*", value: #xs},
            rhs: {tag: #loadslot, lhs: #ctx, rhs: #xs},
            fn: "bstest/bs_decjpg.bs",
            ln: 1343
          }, 
          {
            tag: #assign,
            lhs: {tag: #unary, op: #"*", value: #ys},
            rhs: {tag: #loadslot, lhs: #ctx, rhs: #ys},
            fn: "bstest/bs_decjpg.bs",
            ln: 1345
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1346, value: 0}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_GetImageYUVA420,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 150,
      fn: "bstest/bs_decjpg.bs",
      ln: 1348,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {
          tag: #var,
          name: #ybuf,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {
          tag: #var,
          name: #ubuf,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {
          tag: #var,
          name: #vbuf,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {
          tag: #var,
          name: #abuf,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {tag: #var, name: #xs, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #ys, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 1353,
            cond: {
              tag: #binary,
              op: #"||",
              lhs: {
                tag: #bincmp,
                op: #"!=",
                lhs: #xs,
                rhs: {tag: #loadslot, lhs: #ctx, rhs: #xs}
              },
              rhs: {
                tag: #bincmp,
                op: #"!=",
                lhs: #ys,
                rhs: {tag: #loadslot, lhs: #ctx, rhs: #ys}
              }
            },
            then: {tag: #return, value: -1}
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 1355,
            cond: {tag: #loadslot, lhs: #ctx, rhs: #jpg_is420},
            then: {
              tag: #block,
              value: [
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1358,
                  args: [
                    #ybuf, 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                      rhs: 0
                    }, 
                    {tag: #binary, op: #"*", lhs: #xs, rhs: #ys}],
                  func: #memcpy
                }, 
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1359,
                  args: [
                    #ubuf, 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                      rhs: 1
                    }, 
                    {
                      tag: #binary,
                      op: #"*",
                      lhs: {tag: #binary, op: #">>", lhs: #xs, rhs: 1},
                      rhs: {tag: #binary, op: #">>", lhs: #ys, rhs: 1}
                    }],
                  func: #memcpy
                }, 
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1360,
                  args: [
                    #vbuf, 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                      rhs: 2
                    }, 
                    {
                      tag: #binary,
                      op: #"*",
                      lhs: {tag: #binary, op: #">>", lhs: #xs, rhs: 1},
                      rhs: {tag: #binary, op: #">>", lhs: #ys, rhs: 1}
                    }],
                  func: #memcpy
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1361,
                  cond: #abuf,
                  then: {
                    tag: #ifelse,
                    fn: "bstest/bs_decjpg.bs",
                    ln: 1363,
                    cond: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sabuf},
                    then: {
                      tag: #call,
                      fn: "bstest/bs_decjpg.bs",
                      ln: 1365,
                      args: [
                        #abuf, {tag: #loadslot, lhs: #ctx, rhs: #jpg_sabuf}, 
                        {tag: #binary, op: #"*", lhs: #xs, rhs: #ys}],
                      func: #memcpy
                    },
                    else: {
                      tag: #call,
                      fn: "bstest/bs_decjpg.bs",
                      ln: 1367,
                      args: [
                        #abuf, 255, 
                        {tag: #binary, op: #"*", lhs: #xs, rhs: #ys}],
                      func: #memset
                    }
                  }
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1368,
                  value: 0
                }]
            }
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1370, value: -1}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_GetImagePlaneYUVA420,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 56,
      fn: "bstest/bs_decjpg.bs",
      ln: 1373,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {
          tag: #var,
          name: #yuva,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {tag: #var, name: #xs, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #ys, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1377,
            value: [
              {tag: #var, name: #n0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #n1, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #n0,
            rhs: {tag: #binary, op: #"*", lhs: #xs, rhs: #ys},
            fn: "bstest/bs_decjpg.bs",
            ln: 1378
          }, 
          {
            tag: #assign,
            lhs: #n1,
            rhs: {
              tag: #binary,
              op: #"*",
              lhs: {tag: #binary, op: #">>", lhs: #xs, rhs: 1},
              rhs: {tag: #binary, op: #">>", lhs: #ys, rhs: 1}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1380
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1381,
            args: [
              #ctx, #yuva, {tag: #binary, op: #"+", lhs: #yuva, rhs: #n0}, 
              {
                tag: #binary,
                op: #"+",
                lhs: {tag: #binary, op: #"+", lhs: #yuva, rhs: #n0},
                rhs: #n1
              }, 
              {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"+",
                  lhs: {tag: #binary, op: #"+", lhs: #yuva, rhs: #n0},
                  rhs: #n1
                },
                rhs: #n1
              }, 
              #xs, #ys],
            func: #PDJPG_GetImageYUVA420
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_GetImageRGBA,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 843,
      fn: "bstest/bs_decjpg.bs",
      ln: 1384,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {
          tag: #var,
          name: #rgba,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {tag: #var, name: #xs, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #ys, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1388,
            value: [
              {
                tag: #var,
                name: #ybuf,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #ubuf,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #vbuf,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1389,
            value: [
              {
                tag: #var,
                name: #csy0,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #csy1,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #csu,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #csv,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1390,
            value: [
              {
                tag: #var,
                name: #ct0,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #ct1,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1391,
            value: [
              {tag: #var, name: #t0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #t1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #t2, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1392,
            value: [
              {tag: #var, name: #cy0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cy1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cy2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cy3, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1393,
            value: [
              {tag: #var, name: #cr0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cr1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cr2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cr3, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1394,
            value: [
              {tag: #var, name: #cg0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cg1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cg2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cg3, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1395,
            value: [
              {tag: #var, name: #cb0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cb1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cb2, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cb3, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1396,
            value: [
              {tag: #var, name: #cu, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #cv, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1397,
            value: [
              {tag: #var, name: #lru, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #lrv, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1398,
            value: [
              {tag: #var, name: #x, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #y, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #y1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #xs1, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #ys1, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1399,
            value: [
              {tag: #var, name: #n0, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #n1, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1400,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 1401,
            cond: {tag: #loadslot, lhs: #ctx, rhs: #jpg_is420},
            then: {
              tag: #block,
              value: [
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1404,
                  args: "PDJPG_GetImageRGBA: Is 420\n",
                  func: #printf
                }, 
                {
                  tag: #assign,
                  lhs: #t0,
                  rhs: {tag: #call, args: undefined, func: #clock},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1405
                }, 
                {
                  tag: #assign,
                  lhs: #ybuf,
                  rhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                    rhs: 0
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1406
                }, 
                {
                  tag: #assign,
                  lhs: #ubuf,
                  rhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                    rhs: 1
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1408
                }, 
                {
                  tag: #assign,
                  lhs: #vbuf,
                  rhs: {
                    tag: #loadindex,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                    rhs: 2
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1409
                }, 
                {
                  tag: #assign,
                  lhs: #xs1,
                  rhs: {tag: #binary, op: #">>", lhs: #xs, rhs: 1},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1410
                }, 
                {
                  tag: #assign,
                  lhs: #ys1,
                  rhs: {tag: #binary, op: #">>", lhs: #ys, rhs: 1},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1412
                }, 
                {
                  tag: #for,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1412,
                  cond: {tag: #bincmp, op: #"<", lhs: #y, rhs: #ys1},
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: #y1,
                        rhs: {
                          tag: #binary,
                          op: #"-",
                          lhs: {tag: #binary, op: #"-", lhs: #ys1, rhs: #y},
                          rhs: 1
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1414
                      }, 
                      {
                        tag: #assign,
                        lhs: #csy1,
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: #ybuf,
                          rhs: {
                            tag: #binary,
                            op: #"*",
                            lhs: {
                              tag: #binary,
                              op: #"+",
                              lhs: {tag: #binary, op: #"*", lhs: #y1, rhs: 2},
                              rhs: 0
                            },
                            rhs: #xs
                          }
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1415
                      }, 
                      {
                        tag: #assign,
                        lhs: #csy0,
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: #ybuf,
                          rhs: {
                            tag: #binary,
                            op: #"*",
                            lhs: {
                              tag: #binary,
                              op: #"+",
                              lhs: {tag: #binary, op: #"*", lhs: #y1, rhs: 2},
                              rhs: 1
                            },
                            rhs: #xs
                          }
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1416
                      }, 
                      {
                        tag: #assign,
                        lhs: #csu,
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: #ubuf,
                          rhs: {tag: #binary, op: #"*", lhs: #y1, rhs: #xs1}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1417
                      }, 
                      {
                        tag: #assign,
                        lhs: #csv,
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: #vbuf,
                          rhs: {tag: #binary, op: #"*", lhs: #y1, rhs: #xs1}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1418
                      }, 
                      {
                        tag: #assign,
                        lhs: #ct0,
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: #rgba,
                          rhs: {
                            tag: #binary,
                            op: #"*",
                            lhs: {
                              tag: #binary,
                              op: #"*",
                              lhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: {tag: #binary, op: #"*", lhs: #y, rhs: 2},
                                rhs: 0
                              },
                              rhs: #xs
                            },
                            rhs: 4
                          }
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1419
                      }, 
                      {
                        tag: #assign,
                        lhs: #ct1,
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: #rgba,
                          rhs: {
                            tag: #binary,
                            op: #"*",
                            lhs: {
                              tag: #binary,
                              op: #"*",
                              lhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: {tag: #binary, op: #"*", lhs: #y, rhs: 2},
                                rhs: 1
                              },
                              rhs: #xs
                            },
                            rhs: 4
                          }
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1421
                      }, 
                      {
                        tag: #for,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1422,
                        cond: {tag: #bincmp, op: #"<", lhs: #x, rhs: #xs1},
                        then: {
                          tag: #block,
                          value: [
                            {
                              tag: #assign,
                              lhs: #cy0,
                              rhs: {tag: #loadindex, lhs: #csy0, rhs: 0},
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1425
                            }, 
                            {
                              tag: #assign,
                              lhs: #cy1,
                              rhs: {tag: #loadindex, lhs: #csy0, rhs: 1},
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1426
                            }, 
                            {
                              tag: #assignop,
                              op: #"+",
                              lhs: #csy0,
                              rhs: 2,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1426
                            }, 
                            {
                              tag: #assign,
                              lhs: #cy2,
                              rhs: {tag: #loadindex, lhs: #csy1, rhs: 0},
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1426
                            }, 
                            {
                              tag: #assign,
                              lhs: #cy3,
                              rhs: {tag: #loadindex, lhs: #csy1, rhs: 1},
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1427
                            }, 
                            {
                              tag: #assignop,
                              op: #"+",
                              lhs: #csy1,
                              rhs: 2,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1427
                            }, 
                            {
                              tag: #assign,
                              lhs: #cu,
                              rhs: {
                                tag: #unary,
                                op: #"*",
                                value: {tag: #postinc, value: #csu}
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1427
                            }, 
                            {
                              tag: #assign,
                              lhs: #cv,
                              rhs: {
                                tag: #unary,
                                op: #"*",
                                value: {tag: #postinc, value: #csv}
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1428
                            }, 
                            {
                              tag: #assign,
                              lhs: #lru,
                              rhs: {tag: #binary, op: #"-", lhs: #cu, rhs: 128},
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1428
                            }, 
                            {
                              tag: #assign,
                              lhs: #lrv,
                              rhs: {tag: #binary, op: #"-", lhs: #cv, rhs: 128},
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1429
                            }, 
                            {
                              tag: #assign,
                              lhs: #cr0,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: #cy0,
                                rhs: #lrv
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1429
                            }, 
                            {
                              tag: #assign,
                              lhs: #cg0,
                              rhs: #cy0,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1431
                            }, 
                            {
                              tag: #assign,
                              lhs: #cb0,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: #cy0,
                                rhs: #lru
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1431
                            }, 
                            {
                              tag: #assign,
                              lhs: #cr1,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: #cy1,
                                rhs: #lrv
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1431
                            }, 
                            {
                              tag: #assign,
                              lhs: #cg1,
                              rhs: #cy1,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1432
                            }, 
                            {
                              tag: #assign,
                              lhs: #cb1,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: #cy1,
                                rhs: #lru
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1432
                            }, 
                            {
                              tag: #assign,
                              lhs: #cr2,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: #cy2,
                                rhs: #lrv
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1432
                            }, 
                            {
                              tag: #assign,
                              lhs: #cg2,
                              rhs: #cy2,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1433
                            }, 
                            {
                              tag: #assign,
                              lhs: #cb2,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: #cy2,
                                rhs: #lru
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1433
                            }, 
                            {
                              tag: #assign,
                              lhs: #cr3,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: #cy3,
                                rhs: #lrv
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1433
                            }, 
                            {
                              tag: #assign,
                              lhs: #cg3,
                              rhs: #cy3,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1434
                            }, 
                            {
                              tag: #assign,
                              lhs: #cb3,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: #cy3,
                                rhs: #lru
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1434
                            }, 
                            {
                              tag: #assign,
                              lhs: #k,
                              rhs: {
                                tag: #binary,
                                op: #"|",
                                lhs: {
                                  tag: #binary,
                                  op: #"|",
                                  lhs: {
                                    tag: #binary,
                                    op: #"|",
                                    lhs: #cr0,
                                    rhs: #cr1
                                  },
                                  rhs: #cr2
                                },
                                rhs: #cr3
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1434
                            }, 
                            {
                              tag: #if,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1437,
                              cond: {tag: #binary, op: #">>", lhs: #k, rhs: 8},
                              then: {
                                tag: #block,
                                value: [
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1439,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cr0,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cr0, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1439,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cr1,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cr1, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1439,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cr2,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cr2, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1440,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cr3,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cr3, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1440,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cr0,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cr0, rhs: 255}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1441,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cr1,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cr1, rhs: 255}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1441,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cr2,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cr2, rhs: 255}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1442,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cr3,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cr3, rhs: 255}
                                  }]
                              }
                            }, 
                            {
                              tag: #assign,
                              lhs: #k,
                              rhs: {
                                tag: #binary,
                                op: #"|",
                                lhs: {
                                  tag: #binary,
                                  op: #"|",
                                  lhs: {
                                    tag: #binary,
                                    op: #"|",
                                    lhs: #cg0,
                                    rhs: #cg1
                                  },
                                  rhs: #cg2
                                },
                                rhs: #cg3
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1442
                            }, 
                            {
                              tag: #if,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1443,
                              cond: {tag: #binary, op: #">>", lhs: #k, rhs: 8},
                              then: {
                                tag: #block,
                                value: [
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1445,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cg0,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cg0, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1445,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cg1,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cg1, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1445,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cg2,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cg2, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1446,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cg3,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cg3, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1446,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cg0,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cg0, rhs: 255}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1447,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cg1,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cg1, rhs: 255}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1447,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cg2,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cg2, rhs: 255}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1448,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cg3,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cg3, rhs: 255}
                                  }]
                              }
                            }, 
                            {
                              tag: #assign,
                              lhs: #k,
                              rhs: {
                                tag: #binary,
                                op: #"|",
                                lhs: {
                                  tag: #binary,
                                  op: #"|",
                                  lhs: {
                                    tag: #binary,
                                    op: #"|",
                                    lhs: #cb0,
                                    rhs: #cb1
                                  },
                                  rhs: #cb2
                                },
                                rhs: #cb3
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1448
                            }, 
                            {
                              tag: #if,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1450,
                              cond: {tag: #binary, op: #">>", lhs: #k, rhs: 8},
                              then: {
                                tag: #block,
                                value: [
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1452,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cb0,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cb0, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1452,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cb1,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cb1, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1452,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cb2,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cb2, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1453,
                                    cond: {
                                      tag: #bincmp,
                                      op: #"<",
                                      lhs: #cb3,
                                      rhs: 0
                                    },
                                    then: {tag: #assign, lhs: #cb3, rhs: 0}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1453,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cb0,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cb0, rhs: 255}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1454,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cb1,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cb1, rhs: 255}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1454,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cb2,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cb2, rhs: 255}
                                  }, 
                                  {
                                    tag: #if,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1455,
                                    cond: {
                                      tag: #bincmp,
                                      op: #">",
                                      lhs: #cb3,
                                      rhs: 255
                                    },
                                    then: {tag: #assign, lhs: #cb3, rhs: 255}
                                  }]
                              }
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct0, rhs: 0},
                              rhs: #cr0,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1455
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct0, rhs: 1},
                              rhs: #cg0,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1457
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct0, rhs: 2},
                              rhs: #cb0,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1457
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct0, rhs: 3},
                              rhs: 255,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1457
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct0, rhs: 4},
                              rhs: #cr1,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1457
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct0, rhs: 5},
                              rhs: #cg1,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1458
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct0, rhs: 6},
                              rhs: #cb1,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1458
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct0, rhs: 7},
                              rhs: 255,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1458
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct1, rhs: 0},
                              rhs: #cr2,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1458
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct1, rhs: 1},
                              rhs: #cg2,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1459
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct1, rhs: 2},
                              rhs: #cb2,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1459
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct1, rhs: 3},
                              rhs: 255,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1459
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct1, rhs: 4},
                              rhs: #cr3,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1459
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct1, rhs: 5},
                              rhs: #cg3,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1460
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct1, rhs: 6},
                              rhs: #cb3,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1460
                            }, 
                            {
                              tag: #assign,
                              lhs: {tag: #loadindex, lhs: #ct1, rhs: 7},
                              rhs: 255,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1460
                            }, 
                            {
                              tag: #assignop,
                              op: #"+",
                              lhs: #ct0,
                              rhs: 8,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1460
                            }, 
                            {
                              tag: #assignop,
                              op: #"+",
                              lhs: #ct1,
                              rhs: 8,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1534
                            }]
                        },
                        init: {tag: #assign, lhs: #x, rhs: 0},
                        step: {tag: #postinc, value: #x}
                      }]
                  },
                  init: {tag: #assign, lhs: #y, rhs: 0},
                  step: {tag: #postinc, value: #y}
                }, 
                {
                  tag: #assign,
                  lhs: #t1,
                  rhs: {tag: #call, args: undefined, func: #clock},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1537
                }, 
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1539,
                  args: [
                    "\tDt=%d\n", 
                    {tag: #binary, op: #"-", lhs: #t1, rhs: #t0}],
                  func: #printf
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1540,
                  value: 0
                }]
            }
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1543,
            args: "PDJPG_GetImageRGBA: Not 420\n",
            func: #printf
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1545, value: -1}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_Free,
      type: {tag: #type, name: #void},
      modi: 1,
      tokcnt: 2,
      fn: "bstest/bs_decjpg.bs",
      ln: 1547,
      args: [{tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}],
      body: {tag: #empty_block}
    }, 
    {
      tag: #func,
      name: #PDJPG_DecodeScanForComponentLayer,
      type: {tag: #type, name: #byte, ptrlvl: 1},
      modi: 1,
      tokcnt: 279,
      fn: "bstest/bs_decjpg.bs",
      ln: 1554,
      args: [
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #sz, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #name, type: {tag: #type, name: #string}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1558,
            value: [
              {
                tag: #var,
                name: #cs,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cs2,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cse,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #var,
            name: #i,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 1559
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1560,
            args: "PDJPG_DecodeScanForComponentLayer: Enter\n",
            func: #printf
          }, 
          {
            tag: #assign,
            lhs: #cs,
            rhs: #buf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1562
          }, 
          {
            tag: #assign,
            lhs: #cse,
            rhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #sz},
            fn: "bstest/bs_decjpg.bs",
            ln: 1564
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 1564,
            cond: {tag: #bincmp, op: #"<", lhs: #cs, rhs: #cse},
            then: {
              tag: #block,
              value: [
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1566,
                  cond: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {tag: #unary, op: #"*", value: #cs},
                    rhs: 255
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #while,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1570,
                        cond: {
                          tag: #binary,
                          op: #"&&",
                          lhs: {tag: #bincmp, op: #"<", lhs: #cs, rhs: #cse},
                          rhs: {
                            tag: #bincmp,
                            op: #"!=",
                            lhs: {tag: #unary, op: #"*", value: #cs},
                            rhs: 255
                          }
                        },
                        then: {tag: #postinc, value: #cs}
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1572,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1574,
                  cond: {
                    tag: #binary,
                    op: #"&&",
                    lhs: {
                      tag: #bincmp,
                      op: #"==",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 0},
                      rhs: 255
                    },
                    rhs: {
                      tag: #bincmp,
                      op: #"==",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 1},
                      rhs: #JPG_APP11
                    }
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: #i,
                        rhs: {
                          tag: #binary,
                          op: #"|",
                          lhs: {
                            tag: #binary,
                            op: #"<<",
                            lhs: {tag: #loadindex, lhs: #cs, rhs: 2},
                            rhs: 8
                          },
                          rhs: {tag: #loadindex, lhs: #cs, rhs: 3}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1579
                      }, 
                      {
                        tag: #assign,
                        lhs: #cs2,
                        rhs: {
                          tag: #binary,
                          op: #"+",
                          lhs: {tag: #binary, op: #"+", lhs: #cs, rhs: #i},
                          rhs: 2
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1580
                      }, 
                      {
                        tag: #assignop,
                        op: #"+",
                        lhs: #cs,
                        rhs: 4,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1581
                      }, 
                      {
                        tag: #if,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1583,
                        cond: {
                          tag: #unary,
                          op: #"!",
                          value: {
                            tag: #call,
                            args: [
                              {
                                tag: #prefix_cast,
                                lhs: #cs,
                                rhs: {tag: #type, name: #char8, ptrlvl: 1}
                              }, 
                              "CompLayer"],
                            func: #strcmp
                          }
                        },
                        then: {
                          tag: #block,
                          value: [
                            {
                              tag: #assignop,
                              op: #"+",
                              lhs: #cs,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: {
                                  tag: #call,
                                  args: {
                                    tag: #prefix_cast,
                                    lhs: #cs,
                                    rhs: {tag: #type, name: #char8, ptrlvl: 1}
                                  },
                                  func: #strlen
                                },
                                rhs: 1
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1585
                            }, 
                            {
                              tag: #if,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1586,
                              cond: {
                                tag: #unary,
                                op: #"!",
                                value: {
                                  tag: #call,
                                  args: [
                                    {
                                      tag: #prefix_cast,
                                      lhs: #cs,
                                      rhs: {tag: #type, name: #char8, ptrlvl: 1}
                                    }, 
                                    #name],
                                  func: #strcmp
                                }
                              },
                              then: {
                                tag: #block,
                                value: [
                                  {
                                    tag: #call,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1588,
                                    args: [
                                      "PDJPG_DecodeScanForComponentLayer: Found %s\n", 
                                      #name],
                                    func: #printf
                                  }, 
                                  {
                                    tag: #assignop,
                                    op: #"+",
                                    lhs: #cs,
                                    rhs: {
                                      tag: #binary,
                                      op: #"+",
                                      lhs: {
                                        tag: #call,
                                        args: {
                                          tag: #prefix_cast,
                                          lhs: #cs,
                                          rhs: {
                                            tag: #type,
                                            name: #char8,
                                            ptrlvl: 1
                                          }
                                        },
                                        func: #strlen
                                      },
                                      rhs: 1
                                    },
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1590
                                  }, 
                                  {
                                    tag: #return,
                                    fn: "bstest/bs_decjpg.bs",
                                    ln: 1591,
                                    value: #cs2
                                  }]
                              }
                            }, 
                            {
                              tag: #assignop,
                              op: #"+",
                              lhs: #cs,
                              rhs: {
                                tag: #binary,
                                op: #"+",
                                lhs: {
                                  tag: #call,
                                  args: {
                                    tag: #prefix_cast,
                                    lhs: #cs,
                                    rhs: {tag: #type, name: #char8, ptrlvl: 1}
                                  },
                                  func: #strlen
                                },
                                rhs: 1
                              },
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1593
                            }, 
                            {
                              tag: #continue,
                              fn: "bstest/bs_decjpg.bs",
                              ln: 1595,
                              value: 0
                            }]
                        }
                      }, 
                      {
                        tag: #assignop,
                        op: #"+",
                        lhs: #cs,
                        rhs: {tag: #binary, op: #"-", lhs: #i, rhs: 2},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1597
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1598,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1600,
                  cond: {
                    tag: #binary,
                    op: #"&&",
                    lhs: {
                      tag: #binary,
                      op: #"&&",
                      lhs: {
                        tag: #bincmp,
                        op: #"==",
                        lhs: {tag: #loadindex, lhs: #cs, rhs: 0},
                        rhs: 255
                      },
                      rhs: {
                        tag: #bincmp,
                        op: #">=",
                        lhs: {tag: #loadindex, lhs: #cs, rhs: 1},
                        rhs: #JPG_APP0
                      }
                    },
                    rhs: {
                      tag: #bincmp,
                      op: #"<=",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 1},
                      rhs: #JPG_APP15
                    }
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assign,
                        lhs: #i,
                        rhs: {
                          tag: #binary,
                          op: #"|",
                          lhs: {
                            tag: #binary,
                            op: #"<<",
                            lhs: {tag: #loadindex, lhs: #cs, rhs: 2},
                            rhs: 8
                          },
                          rhs: {tag: #loadindex, lhs: #cs, rhs: 3}
                        },
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1605
                      }, 
                      {
                        tag: #assignop,
                        op: #"+",
                        lhs: #cs,
                        rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 2},
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1606
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1607,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #postinc,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1609,
                  value: #cs
                }]
            }
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1614,
            args: "PDJPG_DecodeScanForComponentLayer: Exit, No\n",
            func: #printf
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1616, value: #null}]
      }
    }, 
    {
      tag: #func,
      name: #pdjpg_hashBuffer,
      type: {tag: #type, name: #int},
      tokcnt: 52,
      fn: "bstest/bs_decjpg.bs",
      ln: 1618,
      args: [
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #sz, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1621,
            value: [
              {
                tag: #var,
                name: #cs,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cse,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #var,
            name: #h,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 1622
          }, 
          {
            tag: #assign,
            lhs: #cs,
            rhs: #buf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1623
          }, 
          {
            tag: #assign,
            lhs: #cse,
            rhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #sz},
            fn: "bstest/bs_decjpg.bs",
            ln: 1625
          }, 
          {
            tag: #assign,
            lhs: #h,
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1625
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 1625,
            cond: {tag: #bincmp, op: #"<", lhs: #cs, rhs: #cse},
            then: {
              tag: #assign,
              lhs: #h,
              rhs: {
                tag: #binary,
                op: #"+",
                lhs: {
                  tag: #binary,
                  op: #"+",
                  lhs: {tag: #binary, op: #"*", lhs: #h, rhs: 65521},
                  rhs: {
                    tag: #unary,
                    op: #"*",
                    value: {tag: #postinc, value: #cs}
                  }
                },
                rhs: 1
              },
              fn: "bstest/bs_decjpg.bs",
              ln: 1627
            }
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1629, value: #h}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_DecodeBasic,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 217,
      fn: "bstest/bs_decjpg.bs",
      ln: 1631,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #sz, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #rxs, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #rys, type: {tag: #type, name: #int, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #obuf,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 1635
          }, 
          {
            tag: #var,
            name: #otbuf,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 1636
          }, 
          {
            tag: #var,
            name: #csl,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 1637
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1638,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #n, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #sz1, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1639,
            value: [
              {tag: #var, name: #h0, type: {tag: #type, name: #uint}}, 
              {tag: #var, name: #h1, type: {tag: #type, name: #uint}}]
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 1640,
            cond: {tag: #unary, op: #"!", value: #ctx},
            then: {tag: #return, value: -1}
          }, 
          {
            tag: #assign,
            lhs: #csl,
            rhs: {
              tag: #call,
              args: [#buf, #sz, "Alpha"],
              func: #PDJPG_DecodeScanForComponentLayer
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1643
          }, 
          {
            tag: #ifelse,
            fn: "bstest/bs_decjpg.bs",
            ln: 1645,
            cond: #csl,
            then: {
              tag: #block,
              value: [
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1647,
                  args: "PDJPG_DecodeBasic: Found Alpha\n",
                  func: #printf
                }, 
                {
                  tag: #assign,
                  lhs: #sz1,
                  rhs: {
                    tag: #binary,
                    op: #"-",
                    lhs: #sz,
                    rhs: {tag: #binary, op: #"-", lhs: #csl, rhs: #buf}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1648
                }, 
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1649,
                  args: [#ctx, #csl, #sz1, #rxs, #rys],
                  func: #PDJPG_DecodeLDatCtx
                }, 
                {
                  tag: #assign,
                  lhs: #n,
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #xs},
                    rhs: {tag: #loadslot, lhs: #ctx, rhs: #ys}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1650
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1652,
                  cond: {
                    tag: #unary,
                    op: #"!",
                    value: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sabuf}
                  },
                  then: {
                    tag: #assign,
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sabuf},
                    rhs: {
                      tag: #new,
                      type: {
                        tag: #type,
                        name: #byte,
                        arrays: {tag: #arrdef, value: #n}
                      }
                    }
                  }
                }, 
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1655,
                  args: [
                    {tag: #loadslot, lhs: #ctx, rhs: #jpg_sabuf}, 
                    {
                      tag: #loadindex,
                      lhs: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sibuf},
                      rhs: 0
                    }, 
                    #n],
                  func: #memcpy
                }]
            },
            else: {
              tag: #block,
              value: [
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1658,
                  args: "PDJPG_DecodeBasic: No Alpha\n",
                  func: #printf
                }, 
                {
                  tag: #assign,
                  lhs: #n,
                  rhs: {
                    tag: #binary,
                    op: #"*",
                    lhs: {tag: #loadslot, lhs: #ctx, rhs: #xs},
                    rhs: {tag: #loadslot, lhs: #ctx, rhs: #ys}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1659
                }, 
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1661,
                  cond: {tag: #loadslot, lhs: #ctx, rhs: #jpg_sabuf},
                  then: {
                    tag: #call,
                    args: [{tag: #loadslot, lhs: #ctx, rhs: #jpg_sabuf}, 255, #n],
                    func: #memset
                  }
                }]
            }
          }, 
          {
            tag: #assign,
            lhs: #h0,
            rhs: {tag: #call, args: [#buf, #sz], func: #pdjpg_hashBuffer},
            fn: "bstest/bs_decjpg.bs",
            ln: 1664
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1666,
            args: "PDJPG_DecodeBasic: Base\n",
            func: #printf
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #call,
              args: [#ctx, #buf, #sz, #rxs, #rys],
              func: #PDJPG_DecodeCtxInner
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1668
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1669,
            args: "PDJPG_DecodeBasic: Base OK\n",
            func: #printf
          }, 
          {
            tag: #assign,
            lhs: #h1,
            rhs: {tag: #call, args: [#buf, #sz], func: #pdjpg_hashBuffer},
            fn: "bstest/bs_decjpg.bs",
            ln: 1670
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1672,
            args: ["Hash %08X %08X\n", #h0, #h1],
            func: #printf
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1674, value: #i}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_EscapeDecodeBuffer,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 109,
      fn: "bstest/bs_decjpg.bs",
      ln: 1677,
      args: [
        {
          tag: #var,
          name: #ibuf,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {tag: #var, name: #isz, type: {tag: #type, name: #int}}, 
        {
          tag: #var,
          name: #obuf,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {tag: #var, name: #osz, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1682,
            value: [
              {
                tag: #var,
                name: #cs,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #ct,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cse,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cte,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #assign,
            lhs: #cs,
            rhs: #ibuf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1683
          }, 
          {
            tag: #assign,
            lhs: #cse,
            rhs: {tag: #binary, op: #"+", lhs: #ibuf, rhs: #isz},
            fn: "bstest/bs_decjpg.bs",
            ln: 1685
          }, 
          {
            tag: #assign,
            lhs: #ct,
            rhs: #obuf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1685
          }, 
          {
            tag: #assign,
            lhs: #cte,
            rhs: {tag: #binary, op: #"+", lhs: #obuf, rhs: #osz},
            fn: "bstest/bs_decjpg.bs",
            ln: 1686
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 1686,
            cond: {
              tag: #binary,
              op: #"&&",
              lhs: {tag: #bincmp, op: #"<", lhs: #cs, rhs: #cse},
              rhs: {tag: #bincmp, op: #"<", lhs: #ct, rhs: #cte}
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1689,
                  cond: {
                    tag: #binary,
                    op: #"&&",
                    lhs: {
                      tag: #bincmp,
                      op: #"==",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 0},
                      rhs: 255
                    },
                    rhs: {
                      tag: #bincmp,
                      op: #"==",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 1},
                      rhs: 0
                    }
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assignop,
                        op: #"+",
                        lhs: #cs,
                        rhs: 2,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1691
                      }, 
                      {
                        tag: #assign,
                        lhs: {
                          tag: #unary,
                          op: #"*",
                          value: {tag: #postinc, value: #ct}
                        },
                        rhs: 255,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1691
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1691,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #unary,
                    op: #"*",
                    value: {tag: #postinc, value: #ct}
                  },
                  rhs: {
                    tag: #unary,
                    op: #"*",
                    value: {tag: #postinc, value: #cs}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1691
                }]
            }
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 1693,
            cond: {tag: #bincmp, op: #">=", lhs: #ct, rhs: #cte},
            then: {tag: #return, value: -1}
          }, 
          {
            tag: #return,
            fn: "bstest/bs_decjpg.bs",
            ln: 1694,
            value: {tag: #binary, op: #"-", lhs: #ct, rhs: #obuf}
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_EscapeDecodeSingleBuffer,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 109,
      fn: "bstest/bs_decjpg.bs",
      ln: 1696,
      args: [
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #sz, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1699,
            value: [
              {
                tag: #var,
                name: #cs,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #ct,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cse,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cte,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #assign,
            lhs: #cs,
            rhs: #buf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1700
          }, 
          {
            tag: #assign,
            lhs: #cse,
            rhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #sz},
            fn: "bstest/bs_decjpg.bs",
            ln: 1702
          }, 
          {
            tag: #assign,
            lhs: #ct,
            rhs: #buf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1702
          }, 
          {
            tag: #assign,
            lhs: #cte,
            rhs: {tag: #binary, op: #"+", lhs: #buf, rhs: #sz},
            fn: "bstest/bs_decjpg.bs",
            ln: 1703
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 1703,
            cond: {
              tag: #binary,
              op: #"&&",
              lhs: {tag: #bincmp, op: #"<", lhs: #cs, rhs: #cse},
              rhs: {tag: #bincmp, op: #"<", lhs: #ct, rhs: #cte}
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #if,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1706,
                  cond: {
                    tag: #binary,
                    op: #"&&",
                    lhs: {
                      tag: #bincmp,
                      op: #"==",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 0},
                      rhs: 255
                    },
                    rhs: {
                      tag: #bincmp,
                      op: #"==",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 1},
                      rhs: 0
                    }
                  },
                  then: {
                    tag: #block,
                    value: [
                      {
                        tag: #assignop,
                        op: #"+",
                        lhs: #cs,
                        rhs: 2,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1708
                      }, 
                      {
                        tag: #assign,
                        lhs: {
                          tag: #unary,
                          op: #"*",
                          value: {tag: #postinc, value: #ct}
                        },
                        rhs: 255,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1708
                      }, 
                      {
                        tag: #continue,
                        fn: "bstest/bs_decjpg.bs",
                        ln: 1708,
                        value: 0
                      }]
                  }
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #unary,
                    op: #"*",
                    value: {tag: #postinc, value: #ct}
                  },
                  rhs: {
                    tag: #unary,
                    op: #"*",
                    value: {tag: #postinc, value: #cs}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1708
                }]
            }
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 1710,
            cond: {tag: #bincmp, op: #">=", lhs: #ct, rhs: #cte},
            then: {tag: #return, value: -1}
          }, 
          {
            tag: #return,
            fn: "bstest/bs_decjpg.bs",
            ln: 1711,
            value: {tag: #binary, op: #"-", lhs: #ct, rhs: #buf}
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_DecodeLDatCtx,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 360,
      fn: "bstest/bs_decjpg.bs",
      ln: 1713,
      args: [
        {tag: #var, name: #ctx, type: {tag: #type, name: #PDJPG_Context}}, 
        {tag: #var, name: #buf, type: {tag: #type, name: #byte, ptrlvl: 1}}, 
        {tag: #var, name: #sz, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #xs, type: {tag: #type, name: #int, ptrlvl: 1}}, 
        {tag: #var, name: #ys, type: {tag: #type, name: #int, ptrlvl: 1}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #tbufa,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
            fn: "bstest/bs_decjpg.bs",
            ln: 1717
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1718,
            value: [
              {
                tag: #var,
                name: #tbuf,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #tbuf2,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #cs,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }, 
              {
                tag: #var,
                name: #ct,
                type: {tag: #type, name: #byte, ptrlvl: 1}
              }]
          }, 
          {
            tag: #var,
            name: #tsz,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 1719
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1720,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #if,
            fn: "bstest/bs_decjpg.bs",
            ln: 1721,
            cond: {
              tag: #binary,
              op: #"||",
              lhs: {
                tag: #binary,
                op: #"||",
                lhs: {
                  tag: #binary,
                  op: #"||",
                  lhs: {
                    tag: #binary,
                    op: #"||",
                    lhs: {
                      tag: #binary,
                      op: #"||",
                      lhs: {
                        tag: #bincmp,
                        op: #"!=",
                        lhs: {tag: #loadindex, lhs: #buf, rhs: 0},
                        rhs: 255
                      },
                      rhs: {
                        tag: #bincmp,
                        op: #"!=",
                        lhs: {tag: #loadindex, lhs: #buf, rhs: 1},
                        rhs: #JPG_APP12
                      }
                    },
                    rhs: {
                      tag: #bincmp,
                      op: #"!=",
                      lhs: {tag: #loadindex, lhs: #buf, rhs: 4},
                      rhs: 'L'
                    }
                  },
                  rhs: {
                    tag: #bincmp,
                    op: #"!=",
                    lhs: {tag: #loadindex, lhs: #buf, rhs: 5},
                    rhs: 'D'
                  }
                },
                rhs: {
                  tag: #bincmp,
                  op: #"!=",
                  lhs: {tag: #loadindex, lhs: #buf, rhs: 6},
                  rhs: 'A'
                }
              },
              rhs: {
                tag: #bincmp,
                op: #"!=",
                lhs: {tag: #loadindex, lhs: #buf, rhs: 7},
                rhs: 'T'
              }
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #k,
                  rhs: {
                    tag: #call,
                    args: [#ctx, #buf, #sz, #xs, #ys],
                    func: #PDJPG_DecodeCtxInner
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1726
                }, 
                {
                  tag: #return,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1727,
                  value: #k
                }]
            }
          }, 
          {
            tag: #assign,
            lhs: #cs,
            rhs: #buf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1729
          }, 
          {
            tag: #assign,
            lhs: #tsz,
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1731
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 1731,
            cond: {
              tag: #binary,
              op: #"&&",
              lhs: {
                tag: #binary,
                op: #"&&",
                lhs: {
                  tag: #binary,
                  op: #"&&",
                  lhs: {
                    tag: #binary,
                    op: #"&&",
                    lhs: {
                      tag: #binary,
                      op: #"&&",
                      lhs: {
                        tag: #bincmp,
                        op: #"==",
                        lhs: {tag: #loadindex, lhs: #cs, rhs: 0},
                        rhs: 255
                      },
                      rhs: {
                        tag: #bincmp,
                        op: #"==",
                        lhs: {tag: #loadindex, lhs: #cs, rhs: 1},
                        rhs: #JPG_APP12
                      }
                    },
                    rhs: {
                      tag: #bincmp,
                      op: #"==",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 4},
                      rhs: 'L'
                    }
                  },
                  rhs: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {tag: #loadindex, lhs: #cs, rhs: 5},
                    rhs: 'D'
                  }
                },
                rhs: {
                  tag: #bincmp,
                  op: #"==",
                  lhs: {tag: #loadindex, lhs: #cs, rhs: 6},
                  rhs: 'A'
                }
              },
              rhs: {
                tag: #bincmp,
                op: #"==",
                lhs: {tag: #loadindex, lhs: #cs, rhs: 7},
                rhs: 'T'
              }
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #i,
                  rhs: {
                    tag: #binary,
                    op: #"|",
                    lhs: {
                      tag: #binary,
                      op: #"<<",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 2},
                      rhs: 8
                    },
                    rhs: {tag: #loadindex, lhs: #cs, rhs: 3}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1735
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #tsz,
                  rhs: #i,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1736
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #cs,
                  rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 2},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1737
                }]
            }
          }, 
          {
            tag: #assign,
            lhs: #tbufa,
            rhs: {
              tag: #new,
              type: {
                tag: #type,
                name: #byte,
                arrays: {tag: #arrdef, value: #tsz}
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1739
          }, 
          {
            tag: #assign,
            lhs: #tbuf,
            rhs: {
              tag: #prefix_cast,
              lhs: #tbufa,
              rhs: {tag: #type, name: #byte, ptrlvl: 1}
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1741
          }, 
          {
            tag: #assign,
            lhs: #cs,
            rhs: #buf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1742
          }, 
          {
            tag: #assign,
            lhs: #ct,
            rhs: #tbuf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1744
          }, 
          {
            tag: #while,
            fn: "bstest/bs_decjpg.bs",
            ln: 1744,
            cond: {
              tag: #binary,
              op: #"&&",
              lhs: {
                tag: #binary,
                op: #"&&",
                lhs: {
                  tag: #binary,
                  op: #"&&",
                  lhs: {
                    tag: #binary,
                    op: #"&&",
                    lhs: {
                      tag: #binary,
                      op: #"&&",
                      lhs: {
                        tag: #bincmp,
                        op: #"==",
                        lhs: {tag: #loadindex, lhs: #cs, rhs: 0},
                        rhs: 255
                      },
                      rhs: {
                        tag: #bincmp,
                        op: #"==",
                        lhs: {tag: #loadindex, lhs: #cs, rhs: 1},
                        rhs: #JPG_APP12
                      }
                    },
                    rhs: {
                      tag: #bincmp,
                      op: #"==",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 4},
                      rhs: 'L'
                    }
                  },
                  rhs: {
                    tag: #bincmp,
                    op: #"==",
                    lhs: {tag: #loadindex, lhs: #cs, rhs: 5},
                    rhs: 'D'
                  }
                },
                rhs: {
                  tag: #bincmp,
                  op: #"==",
                  lhs: {tag: #loadindex, lhs: #cs, rhs: 6},
                  rhs: 'A'
                }
              },
              rhs: {
                tag: #bincmp,
                op: #"==",
                lhs: {tag: #loadindex, lhs: #cs, rhs: 7},
                rhs: 'T'
              }
            },
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #i,
                  rhs: {
                    tag: #binary,
                    op: #"|",
                    lhs: {
                      tag: #binary,
                      op: #"<<",
                      lhs: {tag: #loadindex, lhs: #cs, rhs: 2},
                      rhs: 8
                    },
                    rhs: {tag: #loadindex, lhs: #cs, rhs: 3}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1749
                }, 
                {
                  tag: #call,
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1750,
                  args: [
                    #ct, {tag: #binary, op: #"+", lhs: #cs, rhs: 8}, 
                    {tag: #binary, op: #"-", lhs: #i, rhs: 6}],
                  func: #memcpy
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #cs,
                  rhs: {tag: #binary, op: #"+", lhs: #i, rhs: 2},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1751
                }, 
                {
                  tag: #assignop,
                  op: #"+",
                  lhs: #ct,
                  rhs: {tag: #binary, op: #"-", lhs: #i, rhs: 6},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1752
                }]
            }
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {tag: #binary, op: #"-", lhs: #ct, rhs: #tbuf},
            fn: "bstest/bs_decjpg.bs",
            ln: 1753
          }, 
          {
            tag: #assign,
            lhs: #i,
            rhs: {
              tag: #call,
              args: [#tbuf, #i],
              func: #PDJPG_EscapeDecodeSingleBuffer
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1755
          }, 
          {
            tag: #assign,
            lhs: #k,
            rhs: {
              tag: #call,
              args: [#ctx, #tbuf, #i, #xs, #ys],
              func: #PDJPG_DecodeCtxInner
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1756
          }, 
          {
            tag: #delete,
            fn: "bstest/bs_decjpg.bs",
            ln: 1758,
            value: #tbufa
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1759, value: #k}]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_FlattenTGA,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 244,
      fn: "bstest/bs_decjpg.bs",
      ln: 1761,
      args: [
        {
          tag: #var,
          name: #obuf,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {
          tag: #var,
          name: #rgba,
          type: {tag: #type, name: #byte, ptrlvl: 1}
        }, 
        {tag: #var, name: #xs, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #ys, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #head,
            type: {tag: #type, name: #byte, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 1764
          }, 
          {
            tag: #vars,
            fn: "bstest/bs_decjpg.bs",
            ln: 1766,
            value: [
              {tag: #var, name: #i, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #j, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #k, type: {tag: #type, name: #int}}, 
              {tag: #var, name: #n, type: {tag: #type, name: #int}}]
          }, 
          {
            tag: #assign,
            lhs: #head,
            rhs: #obuf,
            fn: "bstest/bs_decjpg.bs",
            ln: 1767
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 0},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1769
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 1},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1771
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 2},
            rhs: 2,
            fn: "bstest/bs_decjpg.bs",
            ln: 1772
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 3},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1773
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 4},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1775
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 5},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1775
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 6},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1776
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 7},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1776
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 8},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1778
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 9},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1780
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 10},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1780
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 11},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1781
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 12},
            rhs: #xs,
            fn: "bstest/bs_decjpg.bs",
            ln: 1781
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 13},
            rhs: {tag: #binary, op: #">>", lhs: #xs, rhs: 8},
            fn: "bstest/bs_decjpg.bs",
            ln: 1783
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 14},
            rhs: #ys,
            fn: "bstest/bs_decjpg.bs",
            ln: 1783
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 15},
            rhs: {tag: #binary, op: #">>", lhs: #ys, rhs: 8},
            fn: "bstest/bs_decjpg.bs",
            ln: 1784
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 16},
            rhs: 24,
            fn: "bstest/bs_decjpg.bs",
            ln: 1784
          }, 
          {
            tag: #assign,
            lhs: {tag: #loadindex, lhs: #head, rhs: 17},
            rhs: 0,
            fn: "bstest/bs_decjpg.bs",
            ln: 1785
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1786,
            args: ["PDJPG_FlattenTGA: %d x %d\n", #xs, #ys],
            func: #printf
          }, 
          {
            tag: #assign,
            lhs: #n,
            rhs: {tag: #binary, op: #"*", lhs: #xs, rhs: #ys},
            fn: "bstest/bs_decjpg.bs",
            ln: 1788
          }, 
          {
            tag: #for,
            fn: "bstest/bs_decjpg.bs",
            ln: 1792,
            cond: {tag: #bincmp, op: #"<", lhs: #i, rhs: #n},
            then: {
              tag: #block,
              value: [
                {
                  tag: #assign,
                  lhs: #j,
                  rhs: {tag: #binary, op: #"*", lhs: #i, rhs: 4},
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1794
                }, 
                {
                  tag: #assign,
                  lhs: #k,
                  rhs: {
                    tag: #binary,
                    op: #"+",
                    lhs: 18,
                    rhs: {tag: #binary, op: #"*", lhs: #i, rhs: 3}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1795
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: #obuf,
                    rhs: {tag: #binary, op: #"+", lhs: #k, rhs: 0}
                  },
                  rhs: {
                    tag: #loadindex,
                    lhs: #rgba,
                    rhs: {tag: #binary, op: #"+", lhs: #j, rhs: 2}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1796
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: #obuf,
                    rhs: {tag: #binary, op: #"+", lhs: #k, rhs: 1}
                  },
                  rhs: {
                    tag: #loadindex,
                    lhs: #rgba,
                    rhs: {tag: #binary, op: #"+", lhs: #j, rhs: 1}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1797
                }, 
                {
                  tag: #assign,
                  lhs: {
                    tag: #loadindex,
                    lhs: #obuf,
                    rhs: {tag: #binary, op: #"+", lhs: #k, rhs: 2}
                  },
                  rhs: {
                    tag: #loadindex,
                    lhs: #rgba,
                    rhs: {tag: #binary, op: #"+", lhs: #j, rhs: 0}
                  },
                  fn: "bstest/bs_decjpg.bs",
                  ln: 1798
                }]
            },
            init: {tag: #assign, lhs: #i, rhs: 0},
            step: {tag: #postinc, value: #i}
          }, 
          {
            tag: #return,
            fn: "bstest/bs_decjpg.bs",
            ln: 1800,
            value: {
              tag: #binary,
              op: #"+",
              lhs: 18,
              rhs: {tag: #binary, op: #"*", lhs: #n, rhs: 3}
            }
          }]
      }
    }, 
    {
      tag: #func,
      name: #PDJPG_StoreTGA,
      type: {tag: #type, name: #int},
      modi: 1,
      tokcnt: 71,
      fn: "bstest/bs_decjpg.bs",
      ln: 1802,
      args: [
        {tag: #var, name: #name, type: {tag: #type, name: #string}}, 
        {
          tag: #var,
          name: #rgba,
          type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}}
        }, 
        {tag: #var, name: #xs, type: {tag: #type, name: #int}}, 
        {tag: #var, name: #ys, type: {tag: #type, name: #int}}],
      body: {
        tag: #block,
        value: [
          {
            tag: #var,
            name: #fd,
            type: {tag: #type, name: #void, ptrlvl: 1},
            fn: "bstest/bs_decjpg.bs",
            ln: 1805
          }, 
          {
            tag: #var,
            name: #tbuf,
            type: {tag: #type, name: #byte, arrays: {tag: #arrdef0}},
            fn: "bstest/bs_decjpg.bs",
            ln: 1806
          }, 
          {
            tag: #var,
            name: #sz,
            type: {tag: #type, name: #int},
            fn: "bstest/bs_decjpg.bs",
            ln: 1807
          }, 
          {
            tag: #assign,
            lhs: #tbuf,
            rhs: {
              tag: #new,
              type: {
                tag: #type,
                name: #byte,
                arrays: {
                  tag: #arrdef,
                  value: {
                    tag: #binary,
                    op: #"+",
                    lhs: {
                      tag: #binary,
                      op: #"*",
                      lhs: {tag: #binary, op: #"*", lhs: #xs, rhs: #ys},
                      rhs: 4
                    },
                    rhs: 64
                  }
                }
              }
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1808
          }, 
          {
            tag: #assign,
            lhs: #sz,
            rhs: {
              tag: #call,
              args: [#tbuf, #rgba, #xs, #ys],
              func: #PDJPG_FlattenTGA
            },
            fn: "bstest/bs_decjpg.bs",
            ln: 1810
          }, 
          {
            tag: #assign,
            lhs: #fd,
            rhs: {tag: #call, args: [#name, "wb"], func: #fopen},
            fn: "bstest/bs_decjpg.bs",
            ln: 1811
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1813,
            args: [#tbuf, 1, #sz, #fd],
            func: #fwrite
          }, 
          {
            tag: #call,
            fn: "bstest/bs_decjpg.bs",
            ln: 1814,
            args: #fd,
            func: #fclose
          }, 
          {tag: #return, fn: "bstest/bs_decjpg.bs", ln: 1815, value: 0}]
      }
    }]
}1: (null) ?
2: clock ?
3: rand ?
4: bsvm2_natfib ?
5: bsvm2_natsorttst ?
6: bsvm2_vm_printf ?
7: printf(CsCz)v:
0007:0000 2800            LDA       L0
0007:0002 2801            LDA       L1
0007:0004 7000            CALLG     G0(bsvm2_vm_printf)
0007:0006 E161            DROPAA    
0007:0008 79              RETV      
	Avg B/tk=0.999999
8: fn_noArgReturnsInt ?
9: Exception {
10: Exception/dummy:00000000(i)
11: Exception/$CTOR$:0000010B(L11)
}
10: Exception/dummy ?
11: Exception/$CTOR$()v:
000B:0000 79              RETV      
	Avg B/tk=0.499998
12: bstest ?
13: bstest/Foo {
14: bstest/Foo/x:00000000(i)
15: bstest/Foo/y:00000000(i)
16: bstest/Foo/z:00000003(d)
}
14: bstest/Foo/x ?
15: bstest/Foo/y ?
16: bstest/Foo/z ?
17: bstest/Foo2 {
18: bstest/Foo2/x:00000000(i)
19: bstest/Foo2/y:00000000(i)
20: bstest/Foo2/z:00000003(d)
21: bstest/Foo2/$CTOR$:00000115(L21)
22: bstest/Foo2/method0:00000003(d)
}
18: bstest/Foo2/x ?
19: bstest/Foo2/y ?
20: bstest/Foo2/z ?
21: bstest/Foo2/$CTOR$(i)v:
0015:0000 2A14            LDC       Str:2="Foo2 Ctor %d\n"
0015:0002 8914            NEWARR    a:1
0015:0004 E10F45          LDCA      4u
0015:0007 E1AC00          DSTIXAC   0
0015:000A 7000            CALLG     G0(printf)
0015:000C 79              RETV      
	Avg B/tk=1.444443
22: bstest/Foo2/method0()d:
0016:0000 E12000          LDTHIS    G0(bstest/Foo2/x)
0016:0003 E12001          LDTHIS    G1(bstest/Foo2/y)
0016:0006 00              ADDI      
0016:0007 92              CVTI2D    
0016:0008 E12002          LDTHIS    G2(bstest/Foo2/z)
0016:000B 14              ADDD      
0016:000C 77              RETD      
	Avg B/tk=1.181817
23: bstest/i:00000000(i)
24: bstest/j:00000000(i)
25: bstest/arr:00010000(Qi)
26: bstest/arr2:08000006(A256h)
27: bstest/fib(i)i:
001B:0000 6A04            CMPILC    L0, 2
001B:0002 3504            JGE       0x0006
001B:0004 6415            RETC      1u
001B:0006 E1C101          SUBISLC   L0, 1
001B:0009 7000            CALLG     G0(bstest/fib)
001B:000B E1C102          SUBISLC   L0, 2
001B:000E 7000            CALLG     G0(bstest/fib)
001B:0010 00              ADDI      
001B:0011 74              RETI      
	Avg B/tk=0.600000
28: bstest/selsort(Qii)i:
001C:0000 2804            LDA       L4
001C:0002 E1B0            CVTA2PTR  
001C:0004 2900            STA       L0
001C:0006 E11C10          MVIC      L1, 0
001C:0009 7B              LABEL     
001C:000A 6B15            CMPILL    L1, L5
001C:000C 358082          JGE       0x0050
001C:000F E1E02101        ADDILLC   L2, L1, 1
001C:0013 7B              LABEL     
001C:0014 6B25            CMPILL    L2, L5
001C:0016 358064          JGE       0x004B
001C:0019 2800            LDA       L0
001C:001B 2002            LDI       L2
001C:001D 8C40            LDIXI.P   
001C:001F 2800            LDA       L0
001C:0021 2001            LDI       L1
001C:0023 8C40            LDIXI.P   
001C:0025 38              CMPI      
001C:0026 35803A          JGE       0x0046
001C:0029 2800            LDA       L0
001C:002B 2001            LDI       L1
001C:002D 8C40            LDIXI.P   
001C:002F 2403            STI       L3
001C:0031 2800            LDA       L0
001C:0033 2002            LDI       L2
001C:0035 8C40            LDIXI.P   
001C:0037 2800            LDA       L0
001C:0039 2001            LDI       L1
001C:003B 8C44            STIXI.P   
001C:003D 2003            LDI       L3
001C:003F 2800            LDA       L0
001C:0041 2002            LDI       L2
001C:0043 8C44            STIXI.P   
001C:0045 7B              LABEL     
001C:0046 6E02            INCIL     L2
001C:0048 37806D          JMP       0x0014
001C:004B 6E01            INCIL     L1
001C:004D 37808B          JMP       0x000A
001C:0050 6400            RETC      0i
	Avg B/tk=0.921348
29: bstest/sorttst(i)v:
001D:0000 2002            LDI       L2
001D:0002 8900            NEWARR    i:0
001D:0004 2900            STA       L0
001D:0006 E11C10          MVIC      L1, 0
001D:0009 7B              LABEL     
001D:000A 6B12            CMPILL    L1, L2
001D:000C 358018          JGE       0x001B
001D:000F 7000            CALLG     G0(rand)
001D:0011 E1870001        STIXZLL   L0i, L1
001D:0015 7B              LABEL     
001D:0016 6E01            INCIL     L1
001D:0018 378021          JMP       0x000A
001D:001B 2800            LDA       L0
001D:001D 2002            LDI       L2
001D:001F 7001            CALLG     G1(bstest/selsort)
001D:0021 A0              POPI      
001D:0022 79              RETV      
	Avg B/tk=0.744681
30: bstest/Fib {
31: bstest/Fib/foo:0000010D(X13)
32: bstest/Fib/$CTOR$:00000120(L32)
33: bstest/Fib/tst_switch:00000000(i)
34: bstest/Fib/tst_ref:00000000(i)
35: bstest/Fib/tst_func:0000000B(v)
36: bstest/Fib/tst_func2:0000000B(v)
37: bstest/Fib/tst_tryex2:0000000B(v)
38: bstest/Fib/tst_tryex:0000000B(v)
39: bstest/Fib/tst_letlec:0000000B(v)
40: bstest/Fib/tst_decjpg:0000000B(v)
41: bstest/Fib/main:0000000B(v)
}
31: bstest/Fib/foo ?
32: bstest/Fib/$CTOR$(ii)v:
0020:0000 2000            LDI       L0
0020:0002 E12001          LDTHIS    G1(bstest/Fib/foo)
0020:0005 7D00            STOS      G0(bstest/Foo/x)
0020:0007 2001            LDI       L1
0020:0009 E12001          LDTHIS    G1(bstest/Fib/foo)
0020:000C 7D02            STOS      G2(bstest/Foo/y)
0020:000E E12001          LDTHIS    G1(bstest/Fib/foo)
0020:0011 7C00            LDOS      G0(bstest/Foo/x)
0020:0013 E12001          LDTHIS    G1(bstest/Fib/foo)
0020:0016 7C02            LDOS      G2(bstest/Foo/y)
0020:0018 00              ADDI      
0020:0019 92              CVTI2D    
0020:001A E12001          LDTHIS    G1(bstest/Fib/foo)
0020:001D 7D03            STOS      G3(bstest/Foo/z)
0020:001F 79              RETV      
	Avg B/tk=1.230769
33: bstest/Fib/tst_switch(i)i:
0021:0000 2001            LDI       L1
0021:0002 E1290C804A      DCJGEIC   6, 0x002C
0021:0007 E129068020      DCJGEIC   3, 0x001C
0021:000C E129028006      DCJGEIC   1, 0x0014
0021:0011 378084          JMP       0x0056
0021:0014 E12402808C      DCJEQIC   1, 0x005F
0021:0019 378098          JMP       0x0068
0021:001C E129088006      DCJGEIC   4, 0x0024
0021:0021 37809C          JMP       0x0072
0021:0024 E1240880A6      DCJEQIC   4, 0x007C
0021:0029 3780B4          JMP       0x0086
0021:002C E129128020      DCJGEIC   9, 0x0041
0021:0031 E1290E8006      DCJGEIC   7, 0x0039
0021:0036 3780AE          JMP       0x0090
0021:0039 E1240E80B8      DCJEQIC   7, 0x009A
0021:003E 3780C6          JMP       0x00A4
0021:0041 E129148006      DCJGEIC   10, 0x0049
0021:0046 3780CA          JMP       0x00AE
0021:0049 E1241480D4      DCJEQIC   10, 0x00B8
0021:004E E1241680DE      DCJEQIC   11, 0x00C2
0021:0053 3780EC          JMP       0x00CC
0021:0056 A0              POPI      
0021:0057 E11C02          MVIC      L0, 1
0021:005A 3780EC          JMP       0x00D3
0021:005D 61AC            NX.PUSHI  
0021:005F A0              POPI      
0021:0060 E11C08          MVIC      L0, 4
0021:0063 3780DA          JMP       0x00D3
0021:0066 61AC            NX.PUSHI  
0021:0068 A0              POPI      
0021:0069 E11C8012        MVIC      L0, 9
0021:006D 3780C6          JMP       0x00D3
0021:0070 61AC            NX.PUSHI  
0021:0072 A0              POPI      
0021:0073 E11C8020        MVIC      L0, 16
0021:0077 3780B2          JMP       0x00D3
0021:007A 61AC            NX.PUSHI  
0021:007C A0              POPI      
0021:007D E11C8032        MVIC      L0, 25
0021:0081 37809E          JMP       0x00D3
0021:0084 61AC            NX.PUSHI  
0021:0086 A0              POPI      
0021:0087 E11C8048        MVIC      L0, 36
0021:008B 37808A          JMP       0x00D3
0021:008E 61AC            NX.PUSHI  
0021:0090 A0              POPI      
0021:0091 E11C8062        MVIC      L0, 49
0021:0095 378076          JMP       0x00D3
0021:0098 61AC            NX.PUSHI  
0021:009A A0              POPI      
0021:009B E11C8080        MVIC      L0, 64
0021:009F 378062          JMP       0x00D3
0021:00A2 61AC            NX.PUSHI  
0021:00A4 A0              POPI      
0021:00A5 E11C80A2        MVIC      L0, 81
0021:00A9 37804E          JMP       0x00D3
0021:00AC 61AC            NX.PUSHI  
0021:00AE A0              POPI      
0021:00AF E11C80C8        MVIC      L0, 100
0021:00B3 37803A          JMP       0x00D3
0021:00B6 61AC            NX.PUSHI  
0021:00B8 A0              POPI      
0021:00B9 E11C80F2        MVIC      L0, 121
0021:00BD 378026          JMP       0x00D3
0021:00C0 61AC            NX.PUSHI  
0021:00C2 A0              POPI      
0021:00C3 E11C8120        MVIC      L0, 144
0021:00C7 378012          JMP       0x00D3
0021:00CA 61AC            NX.PUSHI  
0021:00CC A0              POPI      
0021:00CD E11C01          MVIC      L0, -1
0021:00D0 378000          JMP       0x00D3
0021:00D3 7A00            RET2      L0i
	Avg B/tk=1.601504
34: bstest/Fib/tst_ref(RiRi)i:
0022:0000 E14D00          LDDRVL    L0i
0022:0003 E14D10          LDDRVL    L1i
0022:0006 00              ADDI      
0022:0007 E14F00          STDRVL    L0i
0022:000A E14D10          LDDRVL    L1i
0022:000D 74              RETI      
	Avg B/tk=1.076922
35: bstest/Fib/tst_func()v:
0023:0000 E11C14          MVIC      L1, 2
0023:0003 E11C26          MVIC      L2, 3
0023:0006 E1BC00          MKLFCN    G0($GS$4D1062E1_0001)
0023:0009 E1BE0001        DSTIXUZL  i:0, L1
0023:000D E1BE1002        DSTIXUZL  i:1, L2
0023:0011 2900            STA       L0
0023:0013 7301            CALLL     L0, G1(fn_noArgReturnsInt)
0023:0015 2403            STI       L3
0023:0017 2A34            LDC       Str:10="tst_func: %d %d %d\n"
0023:0019 8934            NEWARR    a:3
0023:001B 2001            LDI       L1
0023:001D E110            CVTI2AA   
0023:001F E1AC00          DSTIXAC   0
0023:0022 2002            LDI       L2
0023:0024 E110            CVTI2AA   
0023:0026 E1AC02          DSTIXAC   1
0023:0029 2003            LDI       L3
0023:002B E110            CVTI2AA   
0023:002D E1AC04          DSTIXAC   2
0023:0030 7002            CALLG     G2(printf)
0023:0032 79              RETV      
	Avg B/tk=1.040816
36: bstest/Fib/tst_func2()v:
0024:0000 E1BA40          IFXLFCN   L4, G0($GS$4D1062E1_0002)
0024:0003 2804            LDA       L4
0024:0005 E1BF0401        DSTIXUZRL a:0, L1
0024:0009 E1BF1402        DSTIXUZRL a:1, L2
0024:000D A8              POPA      
0024:000E E11C16          MVIC      L1, 3
0024:0011 E11C28          MVIC      L2, 4
0024:0014 2804            LDA       L4
0024:0016 2900            STA       L0
0024:0018 7301            CALLL     L0, G1(fn_noArgReturnsInt)
0024:001A 2403            STI       L3
0024:001C 2A34            LDC       Str:24="tst_func2: %d %d %d\n"
0024:001E 8934            NEWARR    a:3
0024:0020 2001            LDI       L1
0024:0022 E110            CVTI2AA   
0024:0024 E1AC00          DSTIXAC   0
0024:0027 2002            LDI       L2
0024:0029 E110            CVTI2AA   
0024:002B E1AC02          DSTIXAC   1
0024:002E 2003            LDI       L3
0024:0030 E110            CVTI2AA   
0024:0032 E1AC04          DSTIXAC   2
0024:0035 7002            CALLG     G2(printf)
0024:0037 E144            LBLCLNP   
0024:0039 E1BB40          DFXLFCN   L4, G0($GS$4D1062E1_0002)
0024:003C 79              RETV      
	Avg B/tk=1.220000
37: bstest/Fib/tst_tryex2()v:
0025:0000 8800            NEWOBJ    G0(Exception)
0025:0002 A9              DUPA      
0025:0003 7201            CALLV     G1(Exception/$CTOR$)
0025:0005 E1F3            THROW     
0025:0007 79              RETV      
	Avg B/tk=0.999999
38: bstest/Fib/tst_tryex()v:
0026:0000 E1F08018        BEGTRY    0x0010
0026:0004 2A24            LDC       Str:39="try 1\n"
0026:0006 AB              PUSHA     
0026:0007 7001            CALLG     G1(printf)
0026:0009 7003            CALLG     G3(bstest/Fib/tst_tryex2)
0026:000B 2A44            LDC       Str:40="try 2\n"
0026:000D AB              PUSHA     
0026:000E 7001            CALLG     G1(printf)
0026:0010 E1F18020        ENDTRY    0x0024
0026:0014 E1F2008016      CATCH     G0(Exception), 0x0024
0026:0019 2900            STA       L0
0026:001B 2A54            LDC       Str:47="catch\n"
0026:001D AB              PUSHA     
0026:001E 7001            CALLG     G1(printf)
0026:0020 AB              PUSHA     
0026:0021 378000          JMP       0x0024
0026:0024 2A64            LDC       Str:4E="finally\n"
0026:0026 AB              PUSHA     
0026:0027 7001            CALLG     G1(printf)
0026:0029 E1F7            RETHROW   
0026:002B 79              RETV      
	Avg B/tk=1.128205
39: bstest/Fib/tst_letlec()v:
0027:0000 2A14            LDC       Str:57="letlec A\n"
0027:0002 AB              PUSHA     
0027:0003 7000            CALLG     G0(printf)
0027:0005 E1F400801C      BEGLEC    L0, 0x0018
0027:000A 2A24            LDC       Str:61="letlec B\n"
0027:000C AB              PUSHA     
0027:000D 7000            CALLG     G0(printf)
0027:000F 2800            LDA       L0
0027:0011 E1F3            THROW     
0027:0013 2A34            LDC       Str:6B="letlec C\n"
0027:0015 AB              PUSHA     
0027:0016 7000            CALLG     G0(printf)
0027:0018 E1F500          ENDLEC    L0
0027:001B 2A44            LDC       Str:75="letlec D\n"
0027:001D AB              PUSHA     
0027:001E 7000            CALLG     G0(printf)
0027:0020 79              RETV      
	Avg B/tk=1.031250
40: bstest/Fib/tst_decjpg()v:
0028:0000 2A14            LDC       Str:7F="ATst %d\n"
0028:0002 8914            NEWARR    a:1
0028:0004 7E02            LDGS      G2(pdjpg_zigzag2)
0028:0006 502E            LDIXIC    23
0028:0008 E110            CVTI2AA   
0028:000A E1AC00          DSTIXAC   0
0028:000D 7000            CALLG     G0(printf)
0028:000F 2A44            LDC       Str:88="NanoITX_4_1.jpg"
0028:0011 808080          LDRL      L8i
0028:0014 7003            CALLG     G3(readfile)
0028:0016 2902            STA       L2
0028:0018 2A54            LDC       Str:98="JP: %02X %02X sz=%d\n"
0028:001A 8934            NEWARR    a:3
0028:001C 2802            LDA       L2
0028:001E E159            LDDRUB    
0028:0020 E110            CVTI2AA   
0028:0022 E1AC00          DSTIXAC   0
0028:0025 E17F2602        LDIXZLC   L2b, 1
0028:0029 E110            CVTI2AA   
0028:002B E1AC02          DSTIXAC   1
0028:002E 2008            LDI       L8
0028:0030 E110            CVTI2AA   
0028:0032 E1AC04          DSTIXAC   2
0028:0035 7000            CALLG     G0(printf)
0028:0037 7006            CALLG     G6(PDJPG_AllocContext)
0028:0039 2900            STA       L0
0028:003B 2802            LDA       L2
0028:003D E1B0            CVTA2PTR  
0028:003F 2903            STA       L3
0028:0041 2803            LDA       L3
0028:0043 8CE13D02        LEARBC.P  1
0028:0047 2903            STA       L3
0028:0049 7007            CALLG     G7(clock)
0028:004B 2404            STI       L4
0028:004D 2800            LDA       L0
0028:004F 2802            LDA       L2
0028:0051 E1B0            CVTA2PTR  
0028:0053 2008            LDI       L8
0028:0055 808090          LDRL      L9i
0028:0058 8080A0          LDRL      L10i
0028:005B 7008            CALLG     G8(PDJPG_DecodeBasic)
0028:005D A0              POPI      
0028:005E 7007            CALLG     G7(clock)
0028:0060 2405            STI       L5
0028:0062 E1E98C54        SUBILLL   L6, L5, L4
0028:0066 2A8094          LDC       Str:AD="DecJPG %d\n"
0028:0069 8914            NEWARR    a:1
0028:006B 2006            LDI       L6
0028:006D E110            CVTI2AA   
0028:006F E1AC00          DSTIXAC   0
0028:0072 7000            CALLG     G0(printf)
0028:0074 2A80A4          LDC       Str:B8="Image Dec %d x %d\n"
0028:0077 8924            NEWARR    a:2
0028:0079 2009            LDI       L9
0028:007B E110            CVTI2AA   
0028:007D E1AC00          DSTIXAC   0
0028:0080 200A            LDI       L10
0028:0082 E110            CVTI2AA   
0028:0084 E1AC02          DSTIXAC   1
0028:0087 7000            CALLG     G0(printf)
0028:0089 E1CA848A        MULISLL   L9, L10
0028:008D B604            SHLIC     2
0028:008F 8906            NEWARR    b:0
0028:0091 2901            STA       L1
0028:0093 2800            LDA       L0
0028:0095 2801            LDA       L1
0028:0097 E1B0            CVTA2PTR  
0028:0099 2009            LDI       L9
0028:009B 200A            LDI       L10
0028:009D 700B            CALLG     G11(PDJPG_GetImageRGBA)
0028:009F A0              POPI      
0028:00A0 2A80D4          LDC       Str:CB="fibtst0.tga"
0028:00A3 2801            LDA       L1
0028:00A5 2009            LDI       L9
0028:00A7 200A            LDI       L10
0028:00A9 700C            CALLG     G12(PDJPG_StoreTGA)
0028:00AB A0              POPI      
0028:00AC 79              RETV      
	Avg B/tk=0.982954
41: bstest/Fib/main(QCs)v:
0029:0000 E14000          IFXOBJ    L0, G0(bstest/Foo)
0029:0003 E40806          IFXX      L6
0029:0006 E40807          IFXX      L7
0029:0009 E40808          IFXX      L8
0029:000C 2A24            LDC       Str:D7="%f\n"
0029:000E 8914            NEWARR    a:1
0029:0010 E10F8233D921FA  LDCA      3.141590d
0029:0017 E1AC00          DSTIXAC   0
0029:001A 7001            CALLG     G1(printf)
0029:001C E11CA010        MVIC      L16, 8
0029:0020 2AF80DECAF000A  LDC       -20254720m
0029:0027 93              CVTL2I    
0029:0028 2409            STI       L9
0029:002A 2009            LDI       L9
0029:002C 2A8085          LDC       8u
0029:002F E174            SHRI      
0029:0031 240A            STI       L10
0029:0033 E1CE8490        SHLISLL   L9, L16
0029:0037 BC0A            ORIL      L10
0029:0039 240B            STI       L11
0029:003B 200B            LDI       L11
0029:003D 2A8085          LDC       8u
0029:0040 E174            SHRI      
0029:0042 B31E            ANDIC     15
0029:0044 2411            STI       L17
0029:0046 2A34            LDC       Str:DB="%08X %08X %08X %d\n"
0029:0048 8944            NEWARR    a:4
0029:004A 2009            LDI       L9
0029:004C E178            CVTUI2L   
0029:004E E111            CVTL2AA   
0029:0050 E1AC00          DSTIXAC   0
0029:0053 200A            LDI       L10
0029:0055 E178            CVTUI2L   
0029:0057 E111            CVTL2AA   
0029:0059 E1AC02          DSTIXAC   1
0029:005C 200B            LDI       L11
0029:005E E178            CVTUI2L   
0029:0060 E111            CVTL2AA   
0029:0062 E1AC04          DSTIXAC   2
0029:0065 2011            LDI       L17
0029:0067 E110            CVTI2AA   
0029:0069 E1AC06          DSTIXAC   3
0029:006C 7001            CALLG     G1(printf)
0029:006E E11CA201        MVIC      L17, -1
0029:0072 6AA200          CMPILC    L17, 0
0029:0075 338010          JGT       0x0080
0029:0078 2A44            LDC       Str:EE="T\n"
0029:007A AB              PUSHA     
0029:007B 7001            CALLG     G1(printf)
0029:007D 37800A          JMP       0x0085
0029:0080 2A54            LDC       Str:F1="F\n"
0029:0082 AB              PUSHA     
0029:0083 7001            CALLG     G1(printf)
0029:0085 7006            CALLG     G6(clock)
0029:0087 2412            STI       L18
0029:0089 2A74            LDC       Str:F4="BS Fib %d\n"
0029:008B 8914            NEWARR    a:1
0029:008D 2A8265          LDC       38u
0029:0090 7008            CALLG     G8(bstest/fib)
0029:0092 E110            CVTI2AA   
0029:0094 E1AC00          DSTIXAC   0
0029:0097 7001            CALLG     G1(printf)
0029:0099 7006            CALLG     G6(clock)
0029:009B 2413            STI       L19
0029:009D 2A8094          LDC       Str:FF="BS Dt %d\n"
0029:00A0 8914            NEWARR    a:1
0029:00A2 E1C98992        SUBISLL   L19, L18
0029:00A6 E110            CVTI2AA   
0029:00A8 E1AC00          DSTIXAC   0
0029:00AB 7001            CALLG     G1(printf)
0029:00AD 7006            CALLG     G6(clock)
0029:00AF 2412            STI       L18
0029:00B1 2A80A4          LDC       Str:109="Na Fib %d\n"
0029:00B4 8914            NEWARR    a:1
0029:00B6 2A8265          LDC       38u
0029:00B9 700B            CALLG     G11(bsvm2_natfib)
0029:00BB E110            CVTI2AA   
0029:00BD E1AC00          DSTIXAC   0
0029:00C0 7001            CALLG     G1(printf)
0029:00C2 7006            CALLG     G6(clock)
0029:00C4 2413            STI       L19
0029:00C6 2A80C4          LDC       Str:114="Na Dt %d\n"
0029:00C9 8914            NEWARR    a:1
0029:00CB E1C98992        SUBISLL   L19, L18
0029:00CF E110            CVTI2AA   
0029:00D1 E1AC00          DSTIXAC   0
0029:00D4 7001            CALLG     G1(printf)
0029:00D6 7006            CALLG     G6(clock)
0029:00D8 2412            STI       L18
0029:00DA 2AC20005        LDC       8192u
0029:00DE 700D            CALLG     G13(bstest/sorttst)
0029:00E0 7006            CALLG     G6(clock)
0029:00E2 2413            STI       L19
0029:00E4 2A80E4          LDC       Str:11E="Bs SortTst Dt %d\n"
0029:00E7 8914            NEWARR    a:1
0029:00E9 E1C98992        SUBISLL   L19, L18
0029:00ED E110            CVTI2AA   
0029:00EF E1AC00          DSTIXAC   0
0029:00F2 7001            CALLG     G1(printf)
0029:00F4 7006            CALLG     G6(clock)
0029:00F6 2412            STI       L18
0029:00F8 2AC20005        LDC       8192u
0029:00FC 700F            CALLG     G15(bsvm2_natsorttst)
0029:00FE 7006            CALLG     G6(clock)
0029:0100 2413            STI       L19
0029:0102 2A8104          LDC       Str:130="Na SortTst Dt %d\n"
0029:0105 8914            NEWARR    a:1
0029:0107 E1C98992        SUBISLL   L19, L18
0029:010B E110            CVTI2AA   
0029:010D E1AC00          DSTIXAC   0
0029:0110 7001            CALLG     G1(printf)
0029:0112 8811            NEWOBJ    G17(bstest/Foo2)
0029:0114 A9              DUPA      
0029:0115 2A15            LDC       1u
0029:0117 7212            CALLV     G18(bstest/Foo2/$CTOR$)
0029:0119 2902            STA       L2
0029:011B 2A35            LDC       3u
0029:011D 8F8113          STOSL     L2, G19(bstest/Foo2/x)
0029:0120 2A45            LDC       4u
0029:0122 8F8114          STOSL     L2, G20(bstest/Foo2/y)
0029:0125 2A80AD          LDC       5d
0029:0128 8F8115          STOSL     L2, G21(bstest/Foo2/z)
0029:012B 2A8164          LDC       Str:142="FObj "
0029:012E AB              PUSHA     
0029:012F 7001            CALLG     G1(printf)
0029:0131 2A8174          LDC       Str:148="%d(=3) "
0029:0134 8914            NEWARR    a:1
0029:0136 8E8113          LDOSL     L2, G19(bstest/Foo2/x)
0029:0139 E110            CVTI2AA   
0029:013B E1AC00          DSTIXAC   0
0029:013E 7001            CALLG     G1(printf)
0029:0140 2A8184          LDC       Str:150="%d(=4) "
0029:0143 8914            NEWARR    a:1
0029:0145 8E8114          LDOSL     L2, G20(bstest/Foo2/y)
0029:0148 E110            CVTI2AA   
0029:014A E1AC00          DSTIXAC   0
0029:014D 7001            CALLG     G1(printf)
0029:014F 2A8194          LDC       Str:158="%f(=5.0)\n"
0029:0152 8914            NEWARR    a:1
0029:0154 8E8115          LDOSL     L2, G21(bstest/Foo2/z)
0029:0157 E113            CVTD2AA   
0029:0159 E1AC00          DSTIXAC   0
0029:015C 7001            CALLG     G1(printf)
0029:015E 2A81A4          LDC       Str:162="FObj Method %f(=12.0)\n"
0029:0161 8914            NEWARR    a:1
0029:0163 2802            LDA       L2
0029:0165 721B            CALLV     G27(bstest/Foo2/method0)
0029:0167 E113            CVTD2AA   
0029:0169 E1AC00          DSTIXAC   0
0029:016C 7001            CALLG     G1(printf)
0029:016E 2802            LDA       L2
0029:0170 8A              DELOBJ    
0029:0171 2A4C            LDC       2f
0029:0173 2A6C            LDC       3f
0029:0175 E431            MKV2F     
0029:0177 2903            STA       L3
0029:0179 2A808C          LDC       4f
0029:017C 2A80AC          LDC       5f
0029:017F E431            MKV2F     
0029:0181 2904            STA       L4
0029:0183 2803            LDA       L3
0029:0185 2804            LDA       L4
0029:0187 E40E05          BINOPX    add.v2f
0029:018A 2905            STA       L5
0029:018C 2A81C4          LDC       Str:179="v2=(%f %f) (=6 8)\n"
0029:018F 8924            NEWARR    a:2
0029:0191 2805            LDA       L5
0029:0193 E442            LDV2FA    
0029:0195 E112            CVTF2AA   
0029:0197 E1AC00          DSTIXAC   0
0029:019A 2805            LDA       L5
0029:019C E443            LDV2FB    
0029:019E E112            CVTF2AA   
0029:01A0 E1AC02          DSTIXAC   1
0029:01A3 7001            CALLG     G1(printf)
0029:01A5 2A2C            LDC       1f
0029:01A7 AE              PUSHF     
0029:01A8 AE              PUSHF     
0029:01A9 AE              PUSHF     
0029:01AA E402            MKX4F     
0029:01AC E40706          STXL      L6
0029:01AF AE              PUSHF     
0029:01B0 2A2C            LDC       1f
0029:01B2 AE              PUSHF     
0029:01B3 AE              PUSHF     
0029:01B4 E402            MKX4F     
0029:01B6 E40707          STXL      L7
0029:01B9 E40606          LDXL      L6
0029:01BC E40607          LDXL      L7
0029:01BF E40E57          BINOPX    cross.v3f
0029:01C2 E40708          STXL      L8
0029:01C5 2A81D4          LDC       Str:18C="w2=(%f %f %f) (=0 0 1)\n"
0029:01C8 8934            NEWARR    a:3
0029:01CA E40608          LDXL      L8
0029:01CD E44C            LDX4FA    
0029:01CF E112            CVTF2AA   
0029:01D1 E1AC00          DSTIXAC   0
0029:01D4 E40608          LDXL      L8
0029:01D7 E44D            LDX4FB    
0029:01D9 E112            CVTF2AA   
0029:01DB E1AC02          DSTIXAC   1
0029:01DE E40608          LDXL      L8
0029:01E1 E44E            LDX4FC    
0029:01E3 E112            CVTF2AA   
0029:01E5 E1AC04          DSTIXAC   2
0029:01E8 7001            CALLG     G1(printf)
0029:01EA 2010            LDI       L16
0029:01EC 308014          JEQ       0x01F9
0029:01EF 2011            LDI       L17
0029:01F1 30800A          JEQ       0x01F9
0029:01F4 2A44            LDC       Str:EE="T\n"
0029:01F6 AB              PUSHA     
0029:01F7 7001            CALLG     G1(printf)
0029:01F9 898400          NEWARR    i:64
0029:01FC 290C            STA       L12
0029:01FE 280C            LDA       L12
0029:0200 E13840          LEARIC    32
0029:0203 290D            STA       L13
0029:0205 2A8455          LDC       69u
0029:0208 280D            LDA       L13
0029:020A E154            STDRI     
0029:020C 2A81E4          LDC       Str:1A4="Oat %d\n"
0029:020F 8914            NEWARR    a:1
0029:0211 E17F80C040      LDIXZLC   L12i, 32
0029:0216 E110            CVTI2AA   
0029:0218 E1AC00          DSTIXAC   0
0029:021B 7001            CALLG     G1(printf)
0029:021D 280C            LDA       L12
0029:021F E1B0            CVTA2PTR  
0029:0221 290E            STA       L14
0029:0223 280E            LDA       L14
0029:0225 8CE13840        LEARIC.P  32
0029:0229 290F            STA       L15
0029:022B 2A81F4          LDC       Str:1AC="Opt %d\n"
0029:022E 8914            NEWARR    a:1
0029:0230 E1B280F0        LDDRPL    L15i
0029:0234 E1AC00          DSTIXAC   0
0029:0237 7001            CALLG     G1(printf)
0029:0239 280F            LDA       L15
0029:023B 280E            LDA       L14
0029:023D E1B400          DIFFPTR   i:0
0029:0240 2410            STI       L16
0029:0242 2A8204          LDC       Str:1B4="Dptr %d\n"
0029:0245 8914            NEWARR    a:1
0029:0247 2010            LDI       L16
0029:0249 E110            CVTI2AA   
0029:024B E1AC00          DSTIXAC   0
0029:024E 7001            CALLG     G1(printf)
0029:0250 E11CA006        MVIC      L16, 3
0029:0254 E11CA208        MVIC      L17, 4
0029:0258 2A8214          LDC       Str:1BD="RtA i=%d, j=%d\n"
0029:025B 8924            NEWARR    a:2
0029:025D 2010            LDI       L16
0029:025F E110            CVTI2AA   
0029:0261 E1AC00          DSTIXAC   0
0029:0264 2011            LDI       L17
0029:0266 E110            CVTI2AA   
0029:0268 E1AC02          DSTIXAC   1
0029:026B 7001            CALLG     G1(printf)
0029:026D 808100          LDRL      L16i
0029:0270 808110          LDRL      L17i
0029:0273 7022            CALLG     G34(bstest/Fib/tst_ref)
0029:0275 A0              POPI      
0029:0276 2A8234          LDC       Str:1CD="RtB i=%d, j=%d\n"
0029:0279 8924            NEWARR    a:2
0029:027B 2010            LDI       L16
0029:027D E110            CVTI2AA   
0029:027F E1AC00          DSTIXAC   0
0029:0282 2011            LDI       L17
0029:0284 E110            CVTI2AA   
0029:0286 E1AC02          DSTIXAC   1
0029:0289 7001            CALLG     G1(printf)
0029:028B 2010            LDI       L16
0029:028D 7024            CALLG     G36(bstest/Fib/tst_switch)
0029:028F 2411            STI       L17
0029:0291 2A8254          LDC       Str:1DD="St i=%d, j=%d\n"
0029:0294 8924            NEWARR    a:2
0029:0296 2010            LDI       L16
0029:0298 E110            CVTI2AA   
0029:029A E1AC00          DSTIXAC   0
0029:029D 2011            LDI       L17
0029:029F E110            CVTI2AA   
0029:02A1 E1AC02          DSTIXAC   1
0029:02A4 7001            CALLG     G1(printf)
0029:02A6 E1E0881002      ADDILLC   L16, L16, 2
0029:02AB E1EAC44811      MULILLL   L17, L16, L17
0029:02B0 2A8264          LDC       Str:1EC="St2 i=%d, j=%d\n"
0029:02B3 8924            NEWARR    a:2
0029:02B5 2010            LDI       L16
0029:02B7 E110            CVTI2AA   
0029:02B9 E1AC00          DSTIXAC   0
0029:02BC 2011            LDI       L17
0029:02BE E110            CVTI2AA   
0029:02C0 E1AC02          DSTIXAC   1
0029:02C3 7001            CALLG     G1(printf)
0029:02C5 7027            CALLG     G39(bstest/Fib/tst_func)
0029:02C7 7028            CALLG     G40(bstest/Fib/tst_func2)
0029:02C9 7029            CALLG     G41(bstest/Fib/tst_letlec)
0029:02CB 702A            CALLG     G42(bstest/Fib/tst_tryex)
0029:02CD 702B            CALLG     G43(bstest/Fib/tst_decjpg)
0029:02CF E144            LBLCLNP   
0029:02D1 E14200          DFXOBJ    L0, G0(bstest/Foo)
0029:02D4 E40906          DFXX      L6
0029:02D7 E40907          DFXX      L7
0029:02DA E40908          DFXX      L8
0029:02DD 79              RETV      
	Avg B/tk=1.287719
42: fopen ?
43: fclose ?
44: fread ?
45: fwrite ?
46: fseek ?
47: ftell ?
48: readfile(CsRi)Qh:
0030:0000 2803            LDA       L3
0030:0002 2A14            LDC       Str:1FC="rb"
0030:0004 7000            CALLG     G0(fopen)
0030:0006 2901            STA       L1
0030:0008 E19F018004      JNENULLL  L1, 0x000F
0030:000D AB              PUSHA     
0030:000E 78              RETA      
0030:000F 2801            LDA       L1
0030:0011 AC              PUSHI     
0030:0012 2A25            LDC       2u
0030:0014 7002            CALLG     G2(fseek)
0030:0016 A0              POPI      
0030:0017 2801            LDA       L1
0030:0019 7003            CALLG     G3(ftell)
0030:001B 2402            STI       L2
0030:001D 2801            LDA       L1
0030:001F AC              PUSHI     
0030:0020 AC              PUSHI     
0030:0021 7002            CALLG     G2(fseek)
0030:0023 A0              POPI      
0030:0024 2002            LDI       L2
0030:0026 8906            NEWARR    b:0
0030:0028 2900            STA       L0
0030:002A 2800            LDA       L0
0030:002C E1B0            CVTA2PTR  
0030:002E 2A15            LDC       1u
0030:0030 2002            LDI       L2
0030:0032 2801            LDA       L1
0030:0034 7004            CALLG     G4(fread)
0030:0036 A0              POPI      
0030:0037 2801            LDA       L1
0030:0039 7005            CALLG     G5(fclose)
0030:003B A0              POPI      
0030:003C 2002            LDI       L2
0030:003E E14F40          STDRVL    L4i
0030:0041 7A04            RET2      L0a
	Avg B/tk=0.736264
49: DCTSZ:00000000(i)
50: DCTSZ2:00000000(i)
51: JPG_SOF0:00000000(i)
52: JPG_SOF1:00000000(i)
53: JPG_SOF2:00000000(i)
54: JPG_SOF3:00000000(i)
55: JPG_DHT:00000000(i)
56: JPG_SOF5:00000000(i)
57: JPG_SOF6:00000000(i)
58: JPG_SOF7:00000000(i)
59: JPG_JPG:00000000(i)
60: JPG_SOF9:00000000(i)
61: JPG_SOF10:00000000(i)
62: JPG_SOF11:00000000(i)
63: JPG_DAC:00000000(i)
64: JPG_SOF13:00000000(i)
65: JPG_SOF14:00000000(i)
66: JPG_SOF15:00000000(i)
67: JPG_RST0:00000000(i)
68: JPG_RST1:00000000(i)
69: JPG_RST2:00000000(i)
70: JPG_RST3:00000000(i)
71: JPG_RST4:00000000(i)
72: JPG_RST5:00000000(i)
73: JPG_RST6:00000000(i)
74: JPG_RST7:00000000(i)
75: JPG_SOI:00000000(i)
76: JPG_EOI:00000000(i)
77: JPG_SOS:00000000(i)
78: JPG_DQT:00000000(i)
79: JPG_DNL:00000000(i)
80: JPG_DRI:00000000(i)
81: JPG_DHP:00000000(i)
82: JPG_EXP:00000000(i)
83: JPG_APP0:00000000(i)
84: JPG_APP1:00000000(i)
85: JPG_APP2:00000000(i)
86: JPG_APP3:00000000(i)
87: JPG_APP4:00000000(i)
88: JPG_APP5:00000000(i)
89: JPG_APP6:00000000(i)
90: JPG_APP7:00000000(i)
91: JPG_APP8:00000000(i)
92: JPG_APP9:00000000(i)
93: JPG_APP10:00000000(i)
94: JPG_APP11:00000000(i)
95: JPG_APP12:00000000(i)
96: JPG_APP13:00000000(i)
97: JPG_APP14:00000000(i)
98: JPG_APP15:00000000(i)
99: JPG_JPG0:00000000(i)
100: JPG_JPG1:00000000(i)
101: JPG_JPG2:00000000(i)
102: JPG_JPG3:00000000(i)
103: JPG_JPG4:00000000(i)
104: JPG_JPG5:00000000(i)
105: JPG_JPG6:00000000(i)
106: JPG_JPG7:00000000(i)
107: JPG_JPG8:00000000(i)
108: JPG_JPG9:00000000(i)
109: JPG_JPG10:00000000(i)
110: JPG_JPG11:00000000(i)
111: JPG_JPG12:00000000(i)
112: JPG_JPG13:00000000(i)
113: JPG_COM:00000000(i)
114: pdjpg_marker:00010011(QCs)
115: pdjpg_zigzag:00010000(Qi)
116: pdjpg_zigzag2:02000000(A64i)
117: u16:00000009(t)
118: s16:00000007(s)
119: u32:00000005(j)
120: s32:00000000(i)
121: u64:0000000A(y)
122: u64:00000001(x)
123: PDJPG_Context {
124: PDJPG_Context/$CTOR$:0000017C(L124)
125: PDJPG_Context/huff_css:00050006(Ph)
126: PDJPG_Context/huff_cs:00050006(Ph)
127: PDJPG_Context/huff_ct:00050006(Ph)
128: PDJPG_Context/huff_win:00000005(j)
129: PDJPG_Context/huff_pos:00000000(i)
130: PDJPG_Context/huff_isend:00000000(i)
131: PDJPG_Context/huff_code:00050009(Pt)
132: PDJPG_Context/huff_mask:00050009(Pt)
133: PDJPG_Context/huff_next:00050007(Ps)
134: PDJPG_Context/huff_len:00050006(Ph)
135: PDJPG_Context/huff_idx:00050007(Ps)
136: PDJPG_Context/jpg_qt:00010006(Qh)
137: PDJPG_Context/xs:00000000(i)
138: PDJPG_Context/ys:00000000(i)
139: PDJPG_Context/lxs:00000000(i)
140: PDJPG_Context/lys:00000000(i)
141: PDJPG_Context/jpg_cid:00010006(Qh)
142: PDJPG_Context/jpg_ch:00010006(Qh)
143: PDJPG_Context/jpg_cv:00010006(Qh)
144: PDJPG_Context/jpg_qid:00010006(Qh)
145: PDJPG_Context/jpg_cxi:00010000(Qi)
146: PDJPG_Context/jpg_cyi:00010000(Qi)
147: PDJPG_Context/jpg_nc:00000000(i)
148: PDJPG_Context/jpg_chm:00000000(i)
149: PDJPG_Context/jpg_chn:00000000(i)
150: PDJPG_Context/jpg_scid:00010000(Qi)
151: PDJPG_Context/jpg_scn:00010000(Qi)
152: PDJPG_Context/jpg_sibuf:00020006(QQh)
153: PDJPG_Context/jpg_sabuf:00010006(Qh)
154: PDJPG_Context/jpg_schs:00010000(Qi)
155: PDJPG_Context/jpg_scvs:00010000(Qi)
156: PDJPG_Context/jpg_schsci:00010000(Qi)
157: PDJPG_Context/jpg_scvsci:00010000(Qi)
158: PDJPG_Context/jpg_is420:00000006(h)
159: PDJPG_Context/jpg_is444:00000006(h)
160: PDJPG_Context/jpg_rdct:00000006(h)
}
124: PDJPG_Context/$CTOR$()v:
007C:0000 89C08009        NEWARR    t:2048
007C:0004 E1B0            CVTA2PTR  
007C:0006 E12100          STTHIS    G0(PDJPG_Context/huff_code)
007C:0009 89C08009        NEWARR    t:2048
007C:000D E1B0            CVTA2PTR  
007C:000F E12101          STTHIS    G1(PDJPG_Context/huff_mask)
007C:0012 89C08007        NEWARR    s:2048
007C:0016 E1B0            CVTA2PTR  
007C:0018 E12102          STTHIS    G2(PDJPG_Context/huff_next)
007C:001B 89C08006        NEWARR    b:2048
007C:001F E1B0            CVTA2PTR  
007C:0021 E12103          STTHIS    G3(PDJPG_Context/huff_len)
007C:0024 89C08007        NEWARR    s:2048
007C:0028 E1B0            CVTA2PTR  
007C:002A E12104          STTHIS    G4(PDJPG_Context/huff_idx)
007C:002D 899006          NEWARR    b:256
007C:0030 E12105          STTHIS    G5(PDJPG_Context/jpg_qt)
007C:0033 898106          NEWARR    b:16
007C:0036 E12106          STTHIS    G6(PDJPG_Context/jpg_cid)
007C:0039 898106          NEWARR    b:16
007C:003C E12107          STTHIS    G7(PDJPG_Context/jpg_ch)
007C:003F 898106          NEWARR    b:16
007C:0042 E12108          STTHIS    G8(PDJPG_Context/jpg_cv)
007C:0045 898106          NEWARR    b:16
007C:0048 E12109          STTHIS    G9(PDJPG_Context/jpg_qid)
007C:004B 898100          NEWARR    i:16
007C:004E E1210A          STTHIS    G10(PDJPG_Context/jpg_cxi)
007C:0051 898100          NEWARR    i:16
007C:0054 E1210B          STTHIS    G11(PDJPG_Context/jpg_cyi)
007C:0057 8940            NEWARR    i:4
007C:0059 E1210C          STTHIS    G12(PDJPG_Context/jpg_scid)
007C:005C 8940            NEWARR    i:4
007C:005E E1210D          STTHIS    G13(PDJPG_Context/jpg_scn)
007C:0061 8944            NEWARR    a:4
007C:0063 E1210E          STTHIS    G14(PDJPG_Context/jpg_sibuf)
007C:0066 8940            NEWARR    i:4
007C:0068 E1210F          STTHIS    G15(PDJPG_Context/jpg_schs)
007C:006B 8940            NEWARR    i:4
007C:006D E12110          STTHIS    G16(PDJPG_Context/jpg_scvs)
007C:0070 8940            NEWARR    i:4
007C:0072 E12111          STTHIS    G17(PDJPG_Context/jpg_schsci)
007C:0075 8940            NEWARR    i:4
007C:0077 E12112          STTHIS    G18(PDJPG_Context/jpg_scvsci)
007C:007A 79              RETV      
	Avg B/tk=0.702857
125: PDJPG_Context/huff_css ?
126: PDJPG_Context/huff_cs ?
127: PDJPG_Context/huff_ct ?
128: PDJPG_Context/huff_win ?
129: PDJPG_Context/huff_pos ?
130: PDJPG_Context/huff_isend ?
131: PDJPG_Context/huff_code ?
132: PDJPG_Context/huff_mask ?
133: PDJPG_Context/huff_next ?
134: PDJPG_Context/huff_len ?
135: PDJPG_Context/huff_idx ?
136: PDJPG_Context/jpg_qt ?
137: PDJPG_Context/xs ?
138: PDJPG_Context/ys ?
139: PDJPG_Context/lxs ?
140: PDJPG_Context/lys ?
141: PDJPG_Context/jpg_cid ?
142: PDJPG_Context/jpg_ch ?
143: PDJPG_Context/jpg_cv ?
144: PDJPG_Context/jpg_qid ?
145: PDJPG_Context/jpg_cxi ?
146: PDJPG_Context/jpg_cyi ?
147: PDJPG_Context/jpg_nc ?
148: PDJPG_Context/jpg_chm ?
149: PDJPG_Context/jpg_chn ?
150: PDJPG_Context/jpg_scid ?
151: PDJPG_Context/jpg_scn ?
152: PDJPG_Context/jpg_sibuf ?
153: PDJPG_Context/jpg_sabuf ?
154: PDJPG_Context/jpg_schs ?
155: PDJPG_Context/jpg_scvs ?
156: PDJPG_Context/jpg_schsci ?
157: PDJPG_Context/jpg_scvsci ?
158: PDJPG_Context/jpg_is420 ?
159: PDJPG_Context/jpg_is444 ?
160: PDJPG_Context/jpg_rdct ?
161: clamp255(i)i:
00A1:0000 6A00            CMPILC    L0, 0
00A1:0002 3504            JGE       0x0006
00A1:0004 6400            RETC      0i
00A1:0006 6A81FE          CMPILC    L0, 255
00A1:0009 3406            JLE       0x000E
00A1:000B 648FF5          RETC      255u
00A1:000E 7A00            RET2      L0i
	Avg B/tk=0.551724
162: memcpy(PhPhi)v:
00A2:0000 2B04            MVA       L0, L4
00A2:0002 2800            LDA       L0
00A2:0004 2005            LDI       L5
00A2:0006 8CE135          LEARB.P   
00A2:0009 2902            STA       L2
00A2:000B 2B13            MVA       L1, L3
00A2:000D 7B              LABEL     
00A2:000E 2800            LDA       L0
00A2:0010 8CE13D20        LEARBC.P  16
00A2:0014 2802            LDA       L2
00A2:0016 8C3C            CMPA.P    
00A2:0018 33806E          JGT       0x0052
00A2:001B 2800            LDA       L0
00A2:001D E1B0            CVTA2PTR  
00A2:001F 8CE151          LDDRL.P   
00A2:0022 2801            LDA       L1
00A2:0024 E1B0            CVTA2PTR  
00A2:0026 8CE155          STDRL.P   
00A2:0029 2800            LDA       L0
00A2:002B 8CE13D10        LEARBC.P  8
00A2:002F E1B0            CVTA2PTR  
00A2:0031 8CE151          LDDRL.P   
00A2:0034 2801            LDA       L1
00A2:0036 8CE13D10        LEARBC.P  8
00A2:003A E1B0            CVTA2PTR  
00A2:003C 8CE155          STDRL.P   
00A2:003F 2801            LDA       L1
00A2:0041 8CE13D20        LEARBC.P  16
00A2:0045 2901            STA       L1
00A2:0047 2800            LDA       L0
00A2:0049 8CE13D20        LEARBC.P  16
00A2:004D 2900            STA       L0
00A2:004F 378087          JMP       0x000E
00A2:0052 2800            LDA       L0
00A2:0054 8CE13D08        LEARBC.P  4
00A2:0058 2802            LDA       L2
00A2:005A 8C3C            CMPA.P    
00A2:005C 338042          JGT       0x0080
00A2:005F 2800            LDA       L0
00A2:0061 E1B0            CVTA2PTR  
00A2:0063 8CE150          LDDRI.P   
00A2:0066 2801            LDA       L1
00A2:0068 E1B0            CVTA2PTR  
00A2:006A 8CE154          STDRI.P   
00A2:006D 2801            LDA       L1
00A2:006F 8CE13D08        LEARBC.P  4
00A2:0073 2901            STA       L1
00A2:0075 2800            LDA       L0
00A2:0077 8CE13D08        LEARBC.P  4
00A2:007B 2900            STA       L0
00A2:007D 37805B          JMP       0x0052
00A2:0080 2800            LDA       L0
00A2:0082 2802            LDA       L2
00A2:0084 8C3C            CMPA.P    
00A2:0086 358036          JGE       0x00A4
00A2:0089 2800            LDA       L0
00A2:008B A9              DUPA      
00A2:008C 8CE13D02        LEARBC.P  1
00A2:0090 2900            STA       L0
00A2:0092 8CE159          LDDRUB.P  
00A2:0095 2801            LDA       L1
00A2:0097 A9              DUPA      
00A2:0098 8CE13D02        LEARBC.P  1
00A2:009C 2901            STA       L1
00A2:009E 8CE15E          STDRB.P   
00A2:00A1 378047          JMP       0x0080
00A2:00A4 79              RETV      
	Avg B/tk=1.269231
163: memset(Phhi)v:
00A3:0000 2B02            MVA       L0, L2
00A3:0002 2800            LDA       L0
00A3:0004 2004            LDI       L4
00A3:0006 8CE135          LEARB.P   
00A3:0009 2901            STA       L1
00A3:000B 7B              LABEL     
00A3:000C 2800            LDA       L0
00A3:000E 2801            LDA       L1
00A3:0010 8C3C            CMPA.P    
00A3:0012 358022          JGE       0x0026
00A3:0015 2003            LDI       L3
00A3:0017 2800            LDA       L0
00A3:0019 A9              DUPA      
00A3:001A 8CE13D02        LEARBC.P  1
00A3:001E 2900            STA       L0
00A3:0020 8CE15E          STDRB.P   
00A3:0023 378033          JMP       0x000C
00A3:0026 79              RETV      
	Avg B/tk=1.218750
164: strcmp(PcPc)i:
00A4:0000 7B              LABEL     
00A4:0001 E1B206          LDDRPL    L0b
00A4:0004 308046          JEQ       0x002A
00A4:0007 E1B216          LDDRPL    L1b
00A4:000A 30803A          JEQ       0x002A
00A4:000D E1B206          LDDRPL    L0b
00A4:0010 E1B216          LDDRPL    L1b
00A4:0013 38              CMPI      
00A4:0014 318026          JNE       0x002A
00A4:0017 2800            LDA       L0
00A4:0019 8CE13D02        LEARBC.P  1
00A4:001D 2900            STA       L0
00A4:001F 2801            LDA       L1
00A4:0021 8CE13D02        LEARBC.P  1
00A4:0025 2901            STA       L1
00A4:0027 378051          JMP       0x0001
00A4:002A E1B206          LDDRPL    L0b
00A4:002D 318014          JNE       0x003A
00A4:0030 E1B216          LDDRPL    L1b
00A4:0033 318004          JNE       0x0038
00A4:0036 6400            RETC      0i
00A4:0038 6415            RETC      1u
00A4:003A E1B216          LDDRPL    L1b
00A4:003D 318004          JNE       0x0042
00A4:0040 6410            RETC      -1i
00A4:0042 E1B206          LDDRPL    L0b
00A4:0045 E1B216          LDDRPL    L1b
00A4:0048 38              CMPI      
00A4:0049 348004          JLE       0x004E
00A4:004C 6410            RETC      -1i
00A4:004E E1B206          LDDRPL    L0b
00A4:0051 E1B216          LDDRPL    L1b
00A4:0054 38              CMPI      
00A4:0055 358004          JGE       0x005A
00A4:0058 6415            RETC      1u
00A4:005A 6400            RETC      0i
	Avg B/tk=0.938775
165: strlen(Pc)i:
00A5:0000 E11C00          MVIC      L0, 0
00A5:0003 7B              LABEL     
00A5:0004 E1B216          LDDRPL    L1b
00A5:0007 3018            JEQ       0x0015
00A5:0009 2801            LDA       L1
00A5:000B 8CE13D02        LEARBC.P  1
00A5:000F 2901            STA       L1
00A5:0011 6E00            INCIL     L0
00A5:0013 3721            JMP       0x0004
00A5:0015 7A00            RET2      L0i
	Avg B/tk=0.851852
166: PDJPG_AllocContext()L123:
00A6:0000 8800            NEWOBJ    G0(PDJPG_Context)
00A6:0002 A9              DUPA      
00A6:0003 7201            CALLV     G1(PDJPG_Context/$CTOR$)
00A6:0005 2900            STA       L0
00A6:0007 7A04            RET2      L0a
	Avg B/tk=0.529411
167: PDJPG_FreeContext(L123)v:
00A7:0000 E11C00          MVIC      L0, 0
00A7:0003 7B              LABEL     
00A7:0004 6A08            CMPILC    L0, 4
00A7:0006 35802A          JGE       0x001E
00A7:0009 8E10            LDOSL     L1, G0(PDJPG_Context/jpg_sibuf)
00A7:000B 2000            LDI       L0
00A7:000D 4C              LDIXA     
00A7:000E E19C800E        JEQNULL   0x0019
00A7:0012 8E10            LDOSL     L1, G0(PDJPG_Context/jpg_sibuf)
00A7:0014 2000            LDI       L0
00A7:0016 4C              LDIXA     
00A7:0017 8A              DELOBJ    
00A7:0018 7B              LABEL     
00A7:0019 6E00            INCIL     L0
00A7:001B 378033          JMP       0x0004
00A7:001E 2801            LDA       L1
00A7:0020 8A              DELOBJ    
00A7:0021 79              RETV      
	Avg B/tk=0.894737
168: PDJPG_Init()v:
00A8:0000 7E00            LDGS      G0(PDJPG_Init/init)
00A8:0002 3002            JEQ       0x0005
00A8:0004 79              RETV      
00A8:0005 2A15            LDC       1u
00A8:0007 7F00            STGS      G0(PDJPG_Init/init)
00A8:0009 79              RETV      
	Avg B/tk=0.357143
169: PDJPG_TransIDCT_Horiz(PiPi)v:
00A9:0000 280E            LDA       L14
00A9:0002 8CE150          LDDRI.P   
00A9:0005 B280B6          MULIC     91
00A9:0008 2400            STI       L0
00A9:000A 280E            LDA       L14
00A9:000C 8C5008          LDIXIC.P  4
00A9:000F B280B6          MULIC     91
00A9:0012 2401            STI       L1
00A9:0014 280E            LDA       L14
00A9:0016 8C5004          LDIXIC.P  2
00A9:0019 B280EC          MULIC     118
00A9:001C 2402            STI       L2
00A9:001E 280E            LDA       L14
00A9:0020 8C5004          LDIXIC.P  2
00A9:0023 B262            MULIC     49
00A9:0025 2403            STI       L3
00A9:0027 280E            LDA       L14
00A9:0029 8C500C          LDIXIC.P  6
00A9:002C B280EC          MULIC     118
00A9:002F 2404            STI       L4
00A9:0031 280E            LDA       L14
00A9:0033 8C500C          LDIXIC.P  6
00A9:0036 B262            MULIC     49
00A9:0038 2405            STI       L5
00A9:003A E1C802          ADDISLL   L0, L2
00A9:003D B801            ADDIL     L1
00A9:003F B805            ADDIL     L5
00A9:0041 2406            STI       L6
00A9:0043 E1C803          ADDISLL   L0, L3
00A9:0046 B901            SUBIL     L1
00A9:0048 B904            SUBIL     L4
00A9:004A 2407            STI       L7
00A9:004C E1C903          SUBISLL   L0, L3
00A9:004F B901            SUBIL     L1
00A9:0051 B804            ADDIL     L4
00A9:0053 2408            STI       L8
00A9:0055 E1C902          SUBISLL   L0, L2
00A9:0058 B801            ADDIL     L1
00A9:005A B905            SUBIL     L5
00A9:005C 2409            STI       L9
00A9:005E 280E            LDA       L14
00A9:0060 8C5002          LDIXIC.P  1
00A9:0063 B280FC          MULIC     126
00A9:0066 280E            LDA       L14
00A9:0068 8C5006          LDIXIC.P  3
00A9:006B B280D4          MULIC     106
00A9:006E 00              ADDI      
00A9:006F 280E            LDA       L14
00A9:0071 8C500A          LDIXIC.P  5
00A9:0074 B2808E          MULIC     71
00A9:0077 00              ADDI      
00A9:0078 280E            LDA       L14
00A9:007A 8C500E          LDIXIC.P  7
00A9:007D B232            MULIC     25
00A9:007F 00              ADDI      
00A9:0080 240A            STI       L10
00A9:0082 280E            LDA       L14
00A9:0084 8C5002          LDIXIC.P  1
00A9:0087 B280D4          MULIC     106
00A9:008A 280E            LDA       L14
00A9:008C 8C5006          LDIXIC.P  3
00A9:008F B232            MULIC     25
00A9:0091 01              SUBI      
00A9:0092 280E            LDA       L14
00A9:0094 8C500A          LDIXIC.P  5
00A9:0097 B280FC          MULIC     126
00A9:009A 01              SUBI      
00A9:009B 280E            LDA       L14
00A9:009D 8C500E          LDIXIC.P  7
00A9:00A0 B2808E          MULIC     71
00A9:00A3 01              SUBI      
00A9:00A4 240B            STI       L11
00A9:00A6 280E            LDA       L14
00A9:00A8 8C5002          LDIXIC.P  1
00A9:00AB B2808E          MULIC     71
00A9:00AE 280E            LDA       L14
00A9:00B0 8C5006          LDIXIC.P  3
00A9:00B3 B280FC          MULIC     126
00A9:00B6 01              SUBI      
00A9:00B7 280E            LDA       L14
00A9:00B9 8C500A          LDIXIC.P  5
00A9:00BC B232            MULIC     25
00A9:00BE 00              ADDI      
00A9:00BF 280E            LDA       L14
00A9:00C1 8C500E          LDIXIC.P  7
00A9:00C4 B280D4          MULIC     106
00A9:00C7 00              ADDI      
00A9:00C8 240C            STI       L12
00A9:00CA 280E            LDA       L14
00A9:00CC 8C5002          LDIXIC.P  1
00A9:00CF B232            MULIC     25
00A9:00D1 280E            LDA       L14
00A9:00D3 8C5006          LDIXIC.P  3
00A9:00D6 B2808E          MULIC     71
00A9:00D9 01              SUBI      
00A9:00DA 280E            LDA       L14
00A9:00DC 8C500A          LDIXIC.P  5
00A9:00DF B280D4          MULIC     106
00A9:00E2 00              ADDI      
00A9:00E3 280E            LDA       L14
00A9:00E5 8C500E          LDIXIC.P  7
00A9:00E8 B280FC          MULIC     126
00A9:00EB 01              SUBI      
00A9:00EC 240D            STI       L13
00A9:00EE E1C86A          ADDISLL   L6, L10
00A9:00F1 280F            LDA       L15
00A9:00F3 8CE154          STDRI.P   
00A9:00F6 E1C87B          ADDISLL   L7, L11
00A9:00F9 280F            LDA       L15
00A9:00FB 8C5402          STIXIC.P  1
00A9:00FE E1C8840C        ADDISLL   L8, L12
00A9:0102 280F            LDA       L15
00A9:0104 8C5404          STIXIC.P  2
00A9:0107 E1C8848D        ADDISLL   L9, L13
00A9:010B 280F            LDA       L15
00A9:010D 8C5406          STIXIC.P  3
00A9:0110 E1C9848D        SUBISLL   L9, L13
00A9:0114 280F            LDA       L15
00A9:0116 8C5408          STIXIC.P  4
00A9:0119 E1C9840C        SUBISLL   L8, L12
00A9:011D 280F            LDA       L15
00A9:011F 8C540A          STIXIC.P  5
00A9:0122 E1C97B          SUBISLL   L7, L11
00A9:0125 280F            LDA       L15
00A9:0127 8C540C          STIXIC.P  6
00A9:012A E1C96A          SUBISLL   L6, L10
00A9:012D 280F            LDA       L15
00A9:012F 8C540E          STIXIC.P  7
00A9:0132 79              RETV      
	Avg B/tk=0.962382
170: PDJPG_TransIDCT_Vert(PiPi)v:
00AA:0000 280E            LDA       L14
00AA:0002 8CE150          LDDRI.P   
00AA:0005 B280B6          MULIC     91
00AA:0008 2400            STI       L0
00AA:000A 280E            LDA       L14
00AA:000C 8C5040          LDIXIC.P  32
00AA:000F B280B6          MULIC     91
00AA:0012 2401            STI       L1
00AA:0014 280E            LDA       L14
00AA:0016 8C5020          LDIXIC.P  16
00AA:0019 B280EC          MULIC     118
00AA:001C 2402            STI       L2
00AA:001E 280E            LDA       L14
00AA:0020 8C5020          LDIXIC.P  16
00AA:0023 B262            MULIC     49
00AA:0025 2403            STI       L3
00AA:0027 280E            LDA       L14
00AA:0029 8C5060          LDIXIC.P  48
00AA:002C B280EC          MULIC     118
00AA:002F 2404            STI       L4
00AA:0031 280E            LDA       L14
00AA:0033 8C5060          LDIXIC.P  48
00AA:0036 B262            MULIC     49
00AA:0038 2405            STI       L5
00AA:003A E1C802          ADDISLL   L0, L2
00AA:003D B801            ADDIL     L1
00AA:003F B805            ADDIL     L5
00AA:0041 2406            STI       L6
00AA:0043 E1C803          ADDISLL   L0, L3
00AA:0046 B901            SUBIL     L1
00AA:0048 B904            SUBIL     L4
00AA:004A 2407            STI       L7
00AA:004C E1C903          SUBISLL   L0, L3
00AA:004F B901            SUBIL     L1
00AA:0051 B804            ADDIL     L4
00AA:0053 2408            STI       L8
00AA:0055 E1C902          SUBISLL   L0, L2
00AA:0058 B801            ADDIL     L1
00AA:005A B905            SUBIL     L5
00AA:005C 2409            STI       L9
00AA:005E 280E            LDA       L14
00AA:0060 8C5010          LDIXIC.P  8
00AA:0063 B280FC          MULIC     126
00AA:0066 280E            LDA       L14
00AA:0068 8C5030          LDIXIC.P  24
00AA:006B B280D4          MULIC     106
00AA:006E 00              ADDI      
00AA:006F 280E            LDA       L14
00AA:0071 8C5050          LDIXIC.P  40
00AA:0074 B2808E          MULIC     71
00AA:0077 00              ADDI      
00AA:0078 280E            LDA       L14
00AA:007A 8C5070          LDIXIC.P  56
00AA:007D B232            MULIC     25
00AA:007F 00              ADDI      
00AA:0080 240A            STI       L10
00AA:0082 280E            LDA       L14
00AA:0084 8C5010          LDIXIC.P  8
00AA:0087 B280D4          MULIC     106
00AA:008A 280E            LDA       L14
00AA:008C 8C5030          LDIXIC.P  24
00AA:008F B232            MULIC     25
00AA:0091 01              SUBI      
00AA:0092 280E            LDA       L14
00AA:0094 8C5050          LDIXIC.P  40
00AA:0097 B280FC          MULIC     126
00AA:009A 01              SUBI      
00AA:009B 280E            LDA       L14
00AA:009D 8C5070          LDIXIC.P  56
00AA:00A0 B2808E          MULIC     71
00AA:00A3 01              SUBI      
00AA:00A4 240B            STI       L11
00AA:00A6 280E            LDA       L14
00AA:00A8 8C5010          LDIXIC.P  8
00AA:00AB B2808E          MULIC     71
00AA:00AE 280E            LDA       L14
00AA:00B0 8C5030          LDIXIC.P  24
00AA:00B3 B280FC          MULIC     126
00AA:00B6 01              SUBI      
00AA:00B7 280E            LDA       L14
00AA:00B9 8C5050          LDIXIC.P  40
00AA:00BC B232            MULIC     25
00AA:00BE 00              ADDI      
00AA:00BF 280E            LDA       L14
00AA:00C1 8C5070          LDIXIC.P  56
00AA:00C4 B280D4          MULIC     106
00AA:00C7 00              ADDI      
00AA:00C8 240C            STI       L12
00AA:00CA 280E            LDA       L14
00AA:00CC 8C5010          LDIXIC.P  8
00AA:00CF B232            MULIC     25
00AA:00D1 280E            LDA       L14
00AA:00D3 8C5030          LDIXIC.P  24
00AA:00D6 B2808E          MULIC     71
00AA:00D9 01              SUBI      
00AA:00DA 280E            LDA       L14
00AA:00DC 8C5050          LDIXIC.P  40
00AA:00DF B280D4          MULIC     106
00AA:00E2 00              ADDI      
00AA:00E3 280E            LDA       L14
00AA:00E5 8C5070          LDIXIC.P  56
00AA:00E8 B280FC          MULIC     126
00AA:00EB 01              SUBI      
00AA:00EC 240D            STI       L13
00AA:00EE E1C86A          ADDISLL   L6, L10
00AA:00F1 280F            LDA       L15
00AA:00F3 8CE154          STDRI.P   
00AA:00F6 E1C87B          ADDISLL   L7, L11
00AA:00F9 280F            LDA       L15
00AA:00FB 8C5410          STIXIC.P  8
00AA:00FE E1C8840C        ADDISLL   L8, L12
00AA:0102 280F            LDA       L15
00AA:0104 8C5420          STIXIC.P  16
00AA:0107 E1C8848D        ADDISLL   L9, L13
00AA:010B 280F            LDA       L15
00AA:010D 8C5430          STIXIC.P  24
00AA:0110 E1C9848D        SUBISLL   L9, L13
00AA:0114 280F            LDA       L15
00AA:0116 8C5440          STIXIC.P  32
00AA:0119 E1C9840C        SUBISLL   L8, L12
00AA:011D 280F            LDA       L15
00AA:011F 8C5450          STIXIC.P  40
00AA:0122 E1C97B          SUBISLL   L7, L11
00AA:0125 280F            LDA       L15
00AA:0127 8C5460          STIXIC.P  48
00AA:012A E1C96A          SUBISLL   L6, L10
00AA:012D 280F            LDA       L15
00AA:012F 8C5470          STIXIC.P  56
00AA:0132 79              RETV      
	Avg B/tk=0.962382
171: BGBBTJ_JPG_TransIDCT_Vert2(PiPii)v:
00AB:0000 280E            LDA       L14
00AB:0002 8CE150          LDDRI.P   
00AB:0005 B280B6          MULIC     91
00AB:0008 2400            STI       L0
00AB:000A 280E            LDA       L14
00AB:000C 8C5040          LDIXIC.P  32
00AB:000F B280B6          MULIC     91
00AB:0012 2401            STI       L1
00AB:0014 280E            LDA       L14
00AB:0016 8C5020          LDIXIC.P  16
00AB:0019 B280EC          MULIC     118
00AB:001C 2402            STI       L2
00AB:001E 280E            LDA       L14
00AB:0020 8C5020          LDIXIC.P  16
00AB:0023 B262            MULIC     49
00AB:0025 2403            STI       L3
00AB:0027 280E            LDA       L14
00AB:0029 8C5060          LDIXIC.P  48
00AB:002C B280EC          MULIC     118
00AB:002F 2404            STI       L4
00AB:0031 280E            LDA       L14
00AB:0033 8C5060          LDIXIC.P  48
00AB:0036 B262            MULIC     49
00AB:0038 2405            STI       L5
00AB:003A E1C802          ADDISLL   L0, L2
00AB:003D B801            ADDIL     L1
00AB:003F B805            ADDIL     L5
00AB:0041 2406            STI       L6
00AB:0043 E1C803          ADDISLL   L0, L3
00AB:0046 B901            SUBIL     L1
00AB:0048 B904            SUBIL     L4
00AB:004A 2407            STI       L7
00AB:004C E1C903          SUBISLL   L0, L3
00AB:004F B901            SUBIL     L1
00AB:0051 B804            ADDIL     L4
00AB:0053 2408            STI       L8
00AB:0055 E1C902          SUBISLL   L0, L2
00AB:0058 B801            ADDIL     L1
00AB:005A B905            SUBIL     L5
00AB:005C 2409            STI       L9
00AB:005E 280E            LDA       L14
00AB:0060 8C5010          LDIXIC.P  8
00AB:0063 B280FC          MULIC     126
00AB:0066 280E            LDA       L14
00AB:0068 8C5030          LDIXIC.P  24
00AB:006B B280D4          MULIC     106
00AB:006E 00              ADDI      
00AB:006F 280E            LDA       L14
00AB:0071 8C5050          LDIXIC.P  40
00AB:0074 B2808E          MULIC     71
00AB:0077 00              ADDI      
00AB:0078 280E            LDA       L14
00AB:007A 8C5070          LDIXIC.P  56
00AB:007D B232            MULIC     25
00AB:007F 00              ADDI      
00AB:0080 240A            STI       L10
00AB:0082 280E            LDA       L14
00AB:0084 8C5010          LDIXIC.P  8
00AB:0087 B280D4          MULIC     106
00AB:008A 280E            LDA       L14
00AB:008C 8C5030          LDIXIC.P  24
00AB:008F B232            MULIC     25
00AB:0091 01              SUBI      
00AB:0092 280E            LDA       L14
00AB:0094 8C5050          LDIXIC.P  40
00AB:0097 B280FC          MULIC     126
00AB:009A 01              SUBI      
00AB:009B 280E            LDA       L14
00AB:009D 8C5070          LDIXIC.P  56
00AB:00A0 B2808E          MULIC     71
00AB:00A3 01              SUBI      
00AB:00A4 240B            STI       L11
00AB:00A6 280E            LDA       L14
00AB:00A8 8C5010          LDIXIC.P  8
00AB:00AB B2808E          MULIC     71
00AB:00AE 280E            LDA       L14
00AB:00B0 8C5030          LDIXIC.P  24
00AB:00B3 B280FC          MULIC     126
00AB:00B6 01              SUBI      
00AB:00B7 280E            LDA       L14
00AB:00B9 8C5050          LDIXIC.P  40
00AB:00BC B232            MULIC     25
00AB:00BE 00              ADDI      
00AB:00BF 280E            LDA       L14
00AB:00C1 8C5070          LDIXIC.P  56
00AB:00C4 B280D4          MULIC     106
00AB:00C7 00              ADDI      
00AB:00C8 240C            STI       L12
00AB:00CA 280E            LDA       L14
00AB:00CC 8C5010          LDIXIC.P  8
00AB:00CF B232            MULIC     25
00AB:00D1 280E            LDA       L14
00AB:00D3 8C5030          LDIXIC.P  24
00AB:00D6 B2808E          MULIC     71
00AB:00D9 01              SUBI      
00AB:00DA 280E            LDA       L14
00AB:00DC 8C5050          LDIXIC.P  40
00AB:00DF B280D4          MULIC     106
00AB:00E2 00              ADDI      
00AB:00E3 280E            LDA       L14
00AB:00E5 8C5070          LDIXIC.P  56
00AB:00E8 B280FC          MULIC     126
00AB:00EB 01              SUBI      
00AB:00EC 240D            STI       L13
00AB:00EE E1C86A          ADDISLL   L6, L10
00AB:00F1 B720            SARIC     16
00AB:00F3 B810            ADDIL     L16
00AB:00F5 280F            LDA       L15
00AB:00F7 8CE154          STDRI.P   
00AB:00FA E1C87B          ADDISLL   L7, L11
00AB:00FD B720            SARIC     16
00AB:00FF B810            ADDIL     L16
00AB:0101 280F            LDA       L15
00AB:0103 8C5410          STIXIC.P  8
00AB:0106 E1C8840C        ADDISLL   L8, L12
00AB:010A B720            SARIC     16
00AB:010C B810            ADDIL     L16
00AB:010E 280F            LDA       L15
00AB:0110 8C5420          STIXIC.P  16
00AB:0113 E1C8848D        ADDISLL   L9, L13
00AB:0117 B720            SARIC     16
00AB:0119 B810            ADDIL     L16
00AB:011B 280F            LDA       L15
00AB:011D 8C5430          STIXIC.P  24
00AB:0120 E1C9848D        SUBISLL   L9, L13
00AB:0124 B720            SARIC     16
00AB:0126 B810            ADDIL     L16
00AB:0128 280F            LDA       L15
00AB:012A 8C5440          STIXIC.P  32
00AB:012D E1C9840C        SUBISLL   L8, L12
00AB:0131 B720            SARIC     16
00AB:0133 B810            ADDIL     L16
00AB:0135 280F            LDA       L15
00AB:0137 8C5450          STIXIC.P  40
00AB:013A E1C97B          SUBISLL   L7, L11
00AB:013D B720            SARIC     16
00AB:013F B810            ADDIL     L16
00AB:0141 280F            LDA       L15
00AB:0143 8C5460          STIXIC.P  48
00AB:0146 E1C96A          SUBISLL   L6, L10
00AB:0149 B720            SARIC     16
00AB:014B B810            ADDIL     L16
00AB:014D 280F            LDA       L15
00AB:014F 8C5470          STIXIC.P  56
00AB:0152 79              RETV      
	Avg B/tk=0.885117
172: PDJPG_TransIDCT(PiPiii)v:
00AC:0000 E141840000      IFXARR    i:64, L0
00AC:0005 E141840001      IFXARR    i:64, L1
00AC:000A 6A9404          CMPILC    L10, 2
00AC:000D 31814C          JNE       0x00B6
00AC:0010 2807            LDA       L7
00AC:0012 8CE150          LDDRI.P   
00AC:0015 B2C040B2        MULIC     8281
00AC:0019 B0C08000        ADDIC     32768
00AC:001D B720            SARIC     16
00AC:001F B809            ADDIL     L9
00AC:0021 2406            STI       L6
00AC:0023 2B28            MVA       L2, L8
00AC:0025 2802            LDA       L2
00AC:0027 8CE1388080      LEARIC.P  64
00AC:002C 2903            STA       L3
00AC:002E 7B              LABEL     
00AC:002F 2802            LDA       L2
00AC:0031 2803            LDA       L3
00AC:0033 8C3C            CMPA.P    
00AC:0035 3580F6          JGE       0x00B3
00AC:0038 2006            LDI       L6
00AC:003A 2802            LDA       L2
00AC:003C 8CE154          STDRI.P   
00AC:003F 2006            LDI       L6
00AC:0041 2802            LDA       L2
00AC:0043 8C5402          STIXIC.P  1
00AC:0046 2006            LDI       L6
00AC:0048 2802            LDA       L2
00AC:004A 8C5404          STIXIC.P  2
00AC:004D 2006            LDI       L6
00AC:004F 2802            LDA       L2
00AC:0051 8C5406          STIXIC.P  3
00AC:0054 2006            LDI       L6
00AC:0056 2802            LDA       L2
00AC:0058 8C5408          STIXIC.P  4
00AC:005B 2006            LDI       L6
00AC:005D 2802            LDA       L2
00AC:005F 8C540A          STIXIC.P  5
00AC:0062 2006            LDI       L6
00AC:0064 2802            LDA       L2
00AC:0066 8C540C          STIXIC.P  6
00AC:0069 2006            LDI       L6
00AC:006B 2802            LDA       L2
00AC:006D 8C540E          STIXIC.P  7
00AC:0070 2006            LDI       L6
00AC:0072 2802            LDA       L2
00AC:0074 8C5410          STIXIC.P  8
00AC:0077 2006            LDI       L6
00AC:0079 2802            LDA       L2
00AC:007B 8C5412          STIXIC.P  9
00AC:007E 2006            LDI       L6
00AC:0080 2802            LDA       L2
00AC:0082 8C5414          STIXIC.P  10
00AC:0085 2006            LDI       L6
00AC:0087 2802            LDA       L2
00AC:0089 8C5416          STIXIC.P  11
00AC:008C 2006            LDI       L6
00AC:008E 2802            LDA       L2
00AC:0090 8C5418          STIXIC.P  12
00AC:0093 2006            LDI       L6
00AC:0095 2802            LDA       L2
00AC:0097 8C541A          STIXIC.P  13
00AC:009A 2006            LDI       L6
00AC:009C 2802            LDA       L2
00AC:009E 8C541C          STIXIC.P  14
00AC:00A1 2006            LDI       L6
00AC:00A3 2802            LDA       L2
00AC:00A5 8C541E          STIXIC.P  15
00AC:00A8 2802            LDA       L2
00AC:00AA 8CE13820        LEARIC.P  16
00AC:00AE 2902            STA       L2
00AC:00B0 378107          JMP       0x002F
00AC:00B3 378204          JMP       0x01B8
00AC:00B6 2807            LDA       L7
00AC:00B8 8CE13800        LEARIC.P  0
00AC:00BC 2800            LDA       L0
00AC:00BE E13800          LEARIC    0
00AC:00C1 E1B0            CVTA2PTR  
00AC:00C3 7001            CALLG     G1(PDJPG_TransIDCT_Horiz)
00AC:00C5 2807            LDA       L7
00AC:00C7 8CE13810        LEARIC.P  8
00AC:00CB 2800            LDA       L0
00AC:00CD E13810          LEARIC    8
00AC:00D0 E1B0            CVTA2PTR  
00AC:00D2 7001            CALLG     G1(PDJPG_TransIDCT_Horiz)
00AC:00D4 2807            LDA       L7
00AC:00D6 8CE13820        LEARIC.P  16
00AC:00DA 2800            LDA       L0
00AC:00DC E13820          LEARIC    16
00AC:00DF E1B0            CVTA2PTR  
00AC:00E1 7001            CALLG     G1(PDJPG_TransIDCT_Horiz)
00AC:00E3 2807            LDA       L7
00AC:00E5 8CE13830        LEARIC.P  24
00AC:00E9 2800            LDA       L0
00AC:00EB E13830          LEARIC    24
00AC:00EE E1B0            CVTA2PTR  
00AC:00F0 7001            CALLG     G1(PDJPG_TransIDCT_Horiz)
00AC:00F2 2807            LDA       L7
00AC:00F4 8CE13840        LEARIC.P  32
00AC:00F8 2800            LDA       L0
00AC:00FA E13840          LEARIC    32
00AC:00FD E1B0            CVTA2PTR  
00AC:00FF 7001            CALLG     G1(PDJPG_TransIDCT_Horiz)
00AC:0101 2807            LDA       L7
00AC:0103 8CE13850        LEARIC.P  40
00AC:0107 2800            LDA       L0
00AC:0109 E13850          LEARIC    40
00AC:010C E1B0            CVTA2PTR  
00AC:010E 7001            CALLG     G1(PDJPG_TransIDCT_Horiz)
00AC:0110 2807            LDA       L7
00AC:0112 8CE13860        LEARIC.P  48
00AC:0116 2800            LDA       L0
00AC:0118 E13860          LEARIC    48
00AC:011B E1B0            CVTA2PTR  
00AC:011D 7001            CALLG     G1(PDJPG_TransIDCT_Horiz)
00AC:011F 2807            LDA       L7
00AC:0121 8CE13870        LEARIC.P  56
00AC:0125 2800            LDA       L0
00AC:0127 E13870          LEARIC    56
00AC:012A E1B0            CVTA2PTR  
00AC:012C 7001            CALLG     G1(PDJPG_TransIDCT_Horiz)
00AC:012E 2800            LDA       L0
00AC:0130 E13800          LEARIC    0
00AC:0133 E1B0            CVTA2PTR  
00AC:0135 2808            LDA       L8
00AC:0137 8CE13800        LEARIC.P  0
00AC:013B 2009            LDI       L9
00AC:013D 7002            CALLG     G2(BGBBTJ_JPG_TransIDCT_Vert2)
00AC:013F 2800            LDA       L0
00AC:0141 E13802          LEARIC    1
00AC:0144 E1B0            CVTA2PTR  
00AC:0146 2808            LDA       L8
00AC:0148 8CE13802        LEARIC.P  1
00AC:014C 2009            LDI       L9
00AC:014E 7002            CALLG     G2(BGBBTJ_JPG_TransIDCT_Vert2)
00AC:0150 2800            LDA       L0
00AC:0152 E13804          LEARIC    2
00AC:0155 E1B0            CVTA2PTR  
00AC:0157 2808            LDA       L8
00AC:0159 8CE13804        LEARIC.P  2
00AC:015D 2009            LDI       L9
00AC:015F 7002            CALLG     G2(BGBBTJ_JPG_TransIDCT_Vert2)
00AC:0161 2800            LDA       L0
00AC:0163 E13806          LEARIC    3
00AC:0166 E1B0            CVTA2PTR  
00AC:0168 2808            LDA       L8
00AC:016A 8CE13806        LEARIC.P  3
00AC:016E 2009            LDI       L9
00AC:0170 7002            CALLG     G2(BGBBTJ_JPG_TransIDCT_Vert2)
00AC:0172 2800            LDA       L0
00AC:0174 E13808          LEARIC    4
00AC:0177 E1B0            CVTA2PTR  
00AC:0179 2808            LDA       L8
00AC:017B 8CE13808        LEARIC.P  4
00AC:017F 2009            LDI       L9
00AC:0181 7002            CALLG     G2(BGBBTJ_JPG_TransIDCT_Vert2)
00AC:0183 2800            LDA       L0
00AC:0185 E1380A          LEARIC    5
00AC:0188 E1B0            CVTA2PTR  
00AC:018A 2808            LDA       L8
00AC:018C 8CE1380A        LEARIC.P  5
00AC:0190 2009            LDI       L9
00AC:0192 7002            CALLG     G2(BGBBTJ_JPG_TransIDCT_Vert2)
00AC:0194 2800            LDA       L0
00AC:0196 E1380C          LEARIC    6
00AC:0199 E1B0            CVTA2PTR  
00AC:019B 2808            LDA       L8
00AC:019D 8CE1380C        LEARIC.P  6
00AC:01A1 2009            LDI       L9
00AC:01A3 7002            CALLG     G2(BGBBTJ_JPG_TransIDCT_Vert2)
00AC:01A5 2800            LDA       L0
00AC:01A7 E1380E          LEARIC    7
00AC:01AA E1B0            CVTA2PTR  
00AC:01AC 2808            LDA       L8
00AC:01AE 8CE1380E        LEARIC.P  7
00AC:01B2 2009            LDI       L9
00AC:01B4 7002            CALLG     G2(BGBBTJ_JPG_TransIDCT_Vert2)
00AC:01B6 E144            LBLCLNP   
00AC:01B8 E143840000      DFXARR    i:64, L0
00AC:01BD E143840001      DFXARR    i:64, L1
00AC:01C2 79              RETV      
	Avg B/tk=1.180628
173: PDJHUFF_NextByte(L123)i:
00AD:0000 8E20            LDOSL     L2, G0(PDJPG_Context/huff_cs)
00AD:0002 A9              DUPA      
00AD:0003 8CE13D02        LEARBC.P  1
00AD:0007 8F20            STOSL     L2, G0(PDJPG_Context/huff_cs)
00AD:0009 8CE159          LDDRUB.P  
00AD:000C 2400            STI       L0
00AD:000E 6A81FE          CMPILC    L0, 255
00AD:0011 31803C          JNE       0x0032
00AD:0014 8E20            LDOSL     L2, G0(PDJPG_Context/huff_cs)
00AD:0016 A9              DUPA      
00AD:0017 8CE13D02        LEARBC.P  1
00AD:001B 8F20            STOSL     L2, G0(PDJPG_Context/huff_cs)
00AD:001D 8CE159          LDDRUB.P  
00AD:0020 2401            STI       L1
00AD:0022 2001            LDI       L1
00AD:0024 308016          JEQ       0x0032
00AD:0027 2A24            LDC       Str:1FF="IsEnd\n"
00AD:0029 AB              PUSHA     
00AD:002A 7001            CALLG     G1(printf)
00AD:002C 2A15            LDC       1u
00AD:002E 8F23            STOSL     L2, G3(PDJPG_Context/huff_isend)
00AD:0030 6400            RETC      0i
00AD:0032 7A00            RET2      L0i
	Avg B/tk=0.896552
174: PDJHUFF_InitStream(L123Ph)i:
00AE:0000 AC              PUSHI     
00AE:0001 8F00            STOSL     L0, G0(PDJPG_Context/huff_pos)
00AE:0003 AC              PUSHI     
00AE:0004 8F01            STOSL     L0, G1(PDJPG_Context/huff_isend)
00AE:0006 2801            LDA       L1
00AE:0008 8F02            STOSL     L0, G2(PDJPG_Context/huff_css)
00AE:000A 2801            LDA       L1
00AE:000C 8F03            STOSL     L0, G3(PDJPG_Context/huff_cs)
00AE:000E 2800            LDA       L0
00AE:0010 7004            CALLG     G4(PDJHUFF_NextByte)
00AE:0012 8F05            STOSL     L0, G5(PDJPG_Context/huff_win)
00AE:0014 8E05            LDOSL     L0, G5(PDJPG_Context/huff_win)
00AE:0016 B610            SHLIC     8
00AE:0018 2800            LDA       L0
00AE:001A 7004            CALLG     G4(PDJHUFF_NextByte)
00AE:001C 04              ORI       
00AE:001D 8F05            STOSL     L0, G5(PDJPG_Context/huff_win)
00AE:001F 8E05            LDOSL     L0, G5(PDJPG_Context/huff_win)
00AE:0021 B610            SHLIC     8
00AE:0023 2800            LDA       L0
00AE:0025 7004            CALLG     G4(PDJHUFF_NextByte)
00AE:0027 04              ORI       
00AE:0028 8F05            STOSL     L0, G5(PDJPG_Context/huff_win)
00AE:002A 8E05            LDOSL     L0, G5(PDJPG_Context/huff_win)
00AE:002C B610            SHLIC     8
00AE:002E 2800            LDA       L0
00AE:0030 7004            CALLG     G4(PDJHUFF_NextByte)
00AE:0032 04              ORI       
00AE:0033 8F05            STOSL     L0, G5(PDJPG_Context/huff_win)
00AE:0035 6400            RETC      0i
	Avg B/tk=0.604396
175: PDJHUFF_ReadNBits(L123i)i:
00AF:0000 6A20            CMPILC    L2, 0
00AF:0002 338004          JGT       0x0007
00AF:0005 6400            RETC      0i
00AF:0007 8E10            LDOSL     L1, G0(PDJPG_Context/huff_win)
00AF:0009 2A8205          LDC       32u
00AF:000C B902            SUBIL     L2
00AF:000E 8E11            LDOSL     L1, G1(PDJPG_Context/huff_pos)
00AF:0010 01              SUBI      
00AF:0011 E174            SHRI      
00AF:0013 2A15            LDC       1u
00AF:0015 BE02            SHLIL     L2
00AF:0017 6D              DECI      
00AF:0018 03              ANDI      
00AF:0019 2400            STI       L0
00AF:001B 8E11            LDOSL     L1, G1(PDJPG_Context/huff_pos)
00AF:001D B802            ADDIL     L2
00AF:001F 8F11            STOSL     L1, G1(PDJPG_Context/huff_pos)
00AF:0021 8E11            LDOSL     L1, G1(PDJPG_Context/huff_pos)
00AF:0023 6810            CMPIC     8
00AF:0025 32805A          JLT       0x0055
00AF:0028 8E10            LDOSL     L1, G0(PDJPG_Context/huff_win)
00AF:002A B610            SHLIC     8
00AF:002C 2801            LDA       L1
00AF:002E 7002            CALLG     G2(PDJHUFF_NextByte)
00AF:0030 04              ORI       
00AF:0031 8F10            STOSL     L1, G0(PDJPG_Context/huff_win)
00AF:0033 8E11            LDOSL     L1, G1(PDJPG_Context/huff_pos)
00AF:0035 B108            SUBIC     8
00AF:0037 8F11            STOSL     L1, G1(PDJPG_Context/huff_pos)
00AF:0039 7B              LABEL     
00AF:003A 8E11            LDOSL     L1, G1(PDJPG_Context/huff_pos)
00AF:003C 6810            CMPIC     8
00AF:003E 328028          JLT       0x0055
00AF:0041 8E10            LDOSL     L1, G0(PDJPG_Context/huff_win)
00AF:0043 B610            SHLIC     8
00AF:0045 2801            LDA       L1
00AF:0047 7002            CALLG     G2(PDJHUFF_NextByte)
00AF:0049 04              ORI       
00AF:004A 8F10            STOSL     L1, G0(PDJPG_Context/huff_win)
00AF:004C 8E11            LDOSL     L1, G1(PDJPG_Context/huff_pos)
00AF:004E B108            SUBIC     8
00AF:0050 8F11            STOSL     L1, G1(PDJPG_Context/huff_pos)
00AF:0052 378035          JMP       0x003A
00AF:0055 7A00            RET2      L0i
	Avg B/tk=0.719008
176: PDJHUFF_SkipNBits(L123i)v:
00B0:0000 8E00            LDOSL     L0, G0(PDJPG_Context/huff_pos)
00B0:0002 B801            ADDIL     L1
00B0:0004 8F00            STOSL     L0, G0(PDJPG_Context/huff_pos)
00B0:0006 7B              LABEL     
00B0:0007 8E00            LDOSL     L0, G0(PDJPG_Context/huff_pos)
00B0:0009 6810            CMPIC     8
00B0:000B 328028          JLT       0x0022
00B0:000E 8E02            LDOSL     L0, G2(PDJPG_Context/huff_win)
00B0:0010 B610            SHLIC     8
00B0:0012 2800            LDA       L0
00B0:0014 7001            CALLG     G1(PDJHUFF_NextByte)
00B0:0016 04              ORI       
00B0:0017 8F02            STOSL     L0, G2(PDJPG_Context/huff_win)
00B0:0019 8E00            LDOSL     L0, G0(PDJPG_Context/huff_pos)
00B0:001B B108            SUBIC     8
00B0:001D 8F00            STOSL     L0, G0(PDJPG_Context/huff_pos)
00B0:001F 378035          JMP       0x0007
00B0:0022 79              RETV      
	Avg B/tk=0.853658
177: PDJHUFF_PeekWord(L123)i:
00B1:0000 8E10            LDOSL     L1, G0(PDJPG_Context/huff_win)
00B1:0002 2A8105          LDC       16u
00B1:0005 8E11            LDOSL     L1, G1(PDJPG_Context/huff_pos)
00B1:0007 01              SUBI      
00B1:0008 E174            SHRI      
00B1:000A B3C1FFFE        ANDIC     65535
00B1:000E 2400            STI       L0
00B1:0010 7A00            RET2      L0i
	Avg B/tk=0.642857
178: PDJHUFF_DecodeSymbol(L123i)i:
00B2:0000 8E40            LDOSL     L4, G0(PDJPG_Context/huff_win)
00B2:0002 2A8185          LDC       24u
00B2:0005 8E41            LDOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:0007 01              SUBI      
00B2:0008 E174            SHRI      
00B2:000A 9D              CVTUB2I   
00B2:000B 2400            STI       L0
00B2:000D E1E65510        SHLILLC   L5, L5, 8
00B2:0011 8E42            LDOSL     L4, G2(PDJPG_Context/huff_idx)
00B2:0013 E1CC50          ORISLL    L5, L0
00B2:0016 8C4A            LDIXSS.P  
00B2:0018 2401            STI       L1
00B2:001A 8E43            LDOSL     L4, G3(PDJPG_Context/huff_len)
00B2:001C E1CC51          ORISLL    L5, L1
00B2:001F 8C49            LDIXUB.P  
00B2:0021 2402            STI       L2
00B2:0023 6A8410          CMPILC    L2, 8
00B2:0026 338042          JGT       0x004A
00B2:0029 8E41            LDOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:002B B802            ADDIL     L2
00B2:002D 8F41            STOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:002F 8E41            LDOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:0031 6810            CMPIC     8
00B2:0033 328024          JLT       0x0048
00B2:0036 8E40            LDOSL     L4, G0(PDJPG_Context/huff_win)
00B2:0038 B610            SHLIC     8
00B2:003A 2804            LDA       L4
00B2:003C 7004            CALLG     G4(PDJHUFF_NextByte)
00B2:003E 04              ORI       
00B2:003F 8F40            STOSL     L4, G0(PDJPG_Context/huff_win)
00B2:0041 8E41            LDOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:0043 B108            SUBIC     8
00B2:0045 8F41            STOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:0047 7B              LABEL     
00B2:0048 7A10            RET2      L1i
00B2:004A 8E40            LDOSL     L4, G0(PDJPG_Context/huff_win)
00B2:004C 2A8105          LDC       16u
00B2:004F 8E41            LDOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:0051 01              SUBI      
00B2:0052 E174            SHRI      
00B2:0054 9F              CVTUS2I   
00B2:0055 2400            STI       L0
00B2:0057 7B              LABEL     
00B2:0058 E1EC8651        ORILLL    L3, L5, L1
00B2:005C 8E43            LDOSL     L4, G3(PDJPG_Context/huff_len)
00B2:005E 2003            LDI       L3
00B2:0060 8C49            LDIXUB.P  
00B2:0062 2402            STI       L2
00B2:0064 2002            LDI       L2
00B2:0066 318006          JNE       0x006C
00B2:0069 378098          JMP       0x00B8
00B2:006C 2000            LDI       L0
00B2:006E 2A8105          LDC       16u
00B2:0071 B902            SUBIL     L2
00B2:0073 07              SARI      
00B2:0074 8E45            LDOSL     L4, G5(PDJPG_Context/huff_code)
00B2:0076 2003            LDI       L3
00B2:0078 8C4B            LDIXUS.P  
00B2:007A 38              CMPI      
00B2:007B 308026          JEQ       0x0091
00B2:007E 8E46            LDOSL     L4, G6(PDJPG_Context/huff_next)
00B2:0080 2003            LDI       L3
00B2:0082 8C4A            LDIXSS.P  
00B2:0084 2401            STI       L1
00B2:0086 6A10            CMPILC    L1, 0
00B2:0088 358006          JGE       0x008E
00B2:008B 378054          JMP       0x00B8
00B2:008E 378071          JMP       0x0058
00B2:0091 8E41            LDOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:0093 B802            ADDIL     L2
00B2:0095 8F41            STOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:0097 7B              LABEL     
00B2:0098 8E41            LDOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:009A 6810            CMPIC     8
00B2:009C 328028          JLT       0x00B3
00B2:009F 8E40            LDOSL     L4, G0(PDJPG_Context/huff_win)
00B2:00A1 B610            SHLIC     8
00B2:00A3 2804            LDA       L4
00B2:00A5 7004            CALLG     G4(PDJHUFF_NextByte)
00B2:00A7 04              ORI       
00B2:00A8 8F40            STOSL     L4, G0(PDJPG_Context/huff_win)
00B2:00AA 8E41            LDOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:00AC B108            SUBIC     8
00B2:00AE 8F41            STOSL     L4, G1(PDJPG_Context/huff_pos)
00B2:00B0 378035          JMP       0x0098
00B2:00B3 7A10            RET2      L1i
00B2:00B5 3780BF          JMP       0x0058
00B2:00B8 6410            RETC      -1i
	Avg B/tk=0.746988
179: PDJHUFF_DecodeDiffDC(L123i)i:
00B3:0000 2802            LDA       L2
00B3:0002 2003            LDI       L3
00B3:0004 7000            CALLG     G0(PDJHUFF_DecodeSymbol)
00B3:0006 2400            STI       L0
00B3:0008 2802            LDA       L2
00B3:000A 2000            LDI       L0
00B3:000C 7001            CALLG     G1(PDJHUFF_ReadNBits)
00B3:000E 2401            STI       L1
00B3:0010 2001            LDI       L1
00B3:0012 2A8205          LDC       32u
00B3:0015 B900            SUBIL     L0
00B3:0017 06              SHLI      
00B3:0018 B73E            SARIC     31
00B3:001A 1C              NOTI      
00B3:001B 2A10            LDC       -1i
00B3:001D BE00            SHLIL     L0
00B3:001F 6C              INCI      
00B3:0020 03              ANDI      
00B3:0021 E1D811          ADDILSL   L1, L1
00B3:0024 7A10            RET2      L1i
	Avg B/tk=0.633333
180: PDJHUFF_DecodeBlock(L123Piiiiii)i:
00B4:0000 AC              PUSHI     
00B4:0001 2805            LDA       L5
00B4:0003 8C5402          STIXIC.P  1
00B4:0006 AC              PUSHI     
00B4:0007 2805            LDA       L5
00B4:0009 8C5404          STIXIC.P  2
00B4:000C AC              PUSHI     
00B4:000D 2805            LDA       L5
00B4:000F 8C5406          STIXIC.P  3
00B4:0012 E11C18          MVIC      L1, 4
00B4:0015 7B              LABEL     
00B4:0016 6A8280          CMPILC    L1, 64
00B4:0019 358050          JGE       0x0044
00B4:001C AC              PUSHI     
00B4:001D 2805            LDA       L5
00B4:001F E1C010          ADDISLC   L1, 0
00B4:0022 8C44            STIXI.P   
00B4:0024 AC              PUSHI     
00B4:0025 2805            LDA       L5
00B4:0027 E1C011          ADDISLC   L1, 1
00B4:002A 8C44            STIXI.P   
00B4:002C AC              PUSHI     
00B4:002D 2805            LDA       L5
00B4:002F E1C012          ADDISLC   L1, 2
00B4:0032 8C44            STIXI.P   
00B4:0034 AC              PUSHI     
00B4:0035 2805            LDA       L5
00B4:0037 E1C013          ADDISLC   L1, 3
00B4:003A 8C44            STIXI.P   
00B4:003C 7B              LABEL     
00B4:003D E1E01104        ADDILLC   L1, L1, 4
00B4:0041 37805B          JMP       0x0016
00B4:0044 8E40            LDOSL     L4, G0(PDJPG_Context/jpg_qt)
00B4:0046 E1C6900C        SHLISLC   L8, 6
00B4:004A E135            LEARB     
00B4:004C E1B0            CVTA2PTR  
00B4:004E 2900            STA       L0
00B4:0050 2805            LDA       L5
00B4:0052 8CE150          LDDRI.P   
00B4:0055 2804            LDA       L4
00B4:0057 2006            LDI       L6
00B4:0059 7001            CALLG     G1(PDJHUFF_DecodeDiffDC)
00B4:005B 2800            LDA       L0
00B4:005D 8CE159          LDDRUB.P  
00B4:0060 02              MULI      
00B4:0061 00              ADDI      
00B4:0062 2805            LDA       L5
00B4:0064 8CE154          STDRI.P   
00B4:0067 E11C12          MVIC      L1, 1
00B4:006A 7B              LABEL     
00B4:006B 6A8280          CMPILC    L1, 64
00B4:006E 35811E          JGE       0x0100
00B4:0071 2804            LDA       L4
00B4:0073 2007            LDI       L7
00B4:0075 7002            CALLG     G2(PDJHUFF_DecodeSymbol)
00B4:0077 2402            STI       L2
00B4:0079 6A20            CMPILC    L2, 0
00B4:007B 338058          JGT       0x00AA
00B4:007E 6A20            CMPILC    L2, 0
00B4:0080 358048          JGE       0x00A7
00B4:0083 2A44            LDC       Str:206="bad dct block1 %02X(%d) %d/%d\n"
00B4:0085 8944            NEWARR    a:4
00B4:0087 2002            LDI       L2
00B4:0089 E110            CVTI2AA   
00B4:008B E1AC00          DSTIXAC   0
00B4:008E 2002            LDI       L2
00B4:0090 E110            CVTI2AA   
00B4:0092 E1AC02          DSTIXAC   1
00B4:0095 2009            LDI       L9
00B4:0097 E110            CVTI2AA   
00B4:0099 E1AC04          DSTIXAC   2
00B4:009C 200A            LDI       L10
00B4:009E E110            CVTI2AA   
00B4:00A0 E1AC06          DSTIXAC   3
00B4:00A3 7003            CALLG     G3(printf)
00B4:00A5 6410            RETC      -1i
00B4:00A7 3780AC          JMP       0x0100
00B4:00AA E1C728          SARISLC   L2, 4
00B4:00AD B31E            ANDIC     15
00B4:00AF E1D811          ADDILSL   L1, L1
00B4:00B2 E1C3841E        ANDISLC   L2, 15
00B4:00B6 318006          JNE       0x00BC
00B4:00B9 37807E          JMP       0x00FB
00B4:00BC 6A8280          CMPILC    L1, 64
00B4:00BF 328006          JLT       0x00C5
00B4:00C2 378076          JMP       0x0100
00B4:00C5 E1E3221E        ANDILLC   L2, L2, 15
00B4:00C9 2804            LDA       L4
00B4:00CB 2002            LDI       L2
00B4:00CD 7005            CALLG     G5(PDJHUFF_ReadNBits)
00B4:00CF 2403            STI       L3
00B4:00D1 2003            LDI       L3
00B4:00D3 2A8205          LDC       32u
00B4:00D6 B902            SUBIL     L2
00B4:00D8 06              SHLI      
00B4:00D9 B73E            SARIC     31
00B4:00DB 1C              NOTI      
00B4:00DC 2A10            LDC       -1i
00B4:00DE BE02            SHLIL     L2
00B4:00E0 6C              INCI      
00B4:00E1 03              ANDI      
00B4:00E2 E1D833          ADDILSL   L3, L3
00B4:00E5 7E06            LDGS      G6(pdjpg_zigzag2)
00B4:00E7 2001            LDI       L1
00B4:00E9 40              LDIXI     
00B4:00EA 2402            STI       L2
00B4:00EC 2800            LDA       L0
00B4:00EE 2002            LDI       L2
00B4:00F0 8C49            LDIXUB.P  
00B4:00F2 BA03            MULIL     L3
00B4:00F4 2805            LDA       L5
00B4:00F6 2002            LDI       L2
00B4:00F8 8C44            STIXI.P   
00B4:00FA 7B              LABEL     
00B4:00FB 6E01            INCIL     L1
00B4:00FD 378129          JMP       0x006B
00B4:0100 6A8280          CMPILC    L1, 64
00B4:0103 34807C          JLE       0x0144
00B4:0106 2A74            LDC       Str:225="bad dct block2 %02X(%d) len=%d %d/%d\n"
00B4:0108 8954            NEWARR    a:5
00B4:010A 2002            LDI       L2
00B4:010C E110            CVTI2AA   
00B4:010E E1AC00          DSTIXAC   0
00B4:0111 2002            LDI       L2
00B4:0113 E110            CVTI2AA   
00B4:0115 E1AC02          DSTIXAC   1
00B4:0118 2001            LDI       L1
00B4:011A E110            CVTI2AA   
00B4:011C E1AC04          DSTIXAC   2
00B4:011F 2009            LDI       L9
00B4:0121 E110            CVTI2AA   
00B4:0123 E1AC06          DSTIXAC   3
00B4:0126 200A            LDI       L10
00B4:0128 E110            CVTI2AA   
00B4:012A E1AC08          DSTIXAC   4
00B4:012D 7003            CALLG     G3(printf)
00B4:012F 2A8084          LDC       Str:24B="Error @ %06X\n"
00B4:0132 8914            NEWARR    a:1
00B4:0134 8E49            LDOSL     L4, G9(PDJPG_Context/huff_cs)
00B4:0136 8E4A            LDOSL     L4, G10(PDJPG_Context/huff_css)
00B4:0138 E1B446          DIFFPTR   b:4
00B4:013B E111            CVTL2AA   
00B4:013D E1AC00          DSTIXAC   0
00B4:0140 7003            CALLG     G3(printf)
00B4:0142 6410            RETC      -1i
00B4:0144 6A12            CMPILC    L1, 1
00B4:0146 318004          JNE       0x014B
00B4:0149 6425            RETC      2u
00B4:014B 6400            RETC      0i
	Avg B/tk=1.018349
181: PDJPG_CopyOutBlock8B(L123PiPhiiii)v:
00B5:0000 E1C0A408        ADDISLC   L18, 8
00B5:0004 2010            LDI       L16
00B5:0006 38              CMPI      
00B5:0007 338014          JGT       0x0014
00B5:000A E1C0A608        ADDISLC   L19, 8
00B5:000E 2011            LDI       L17
00B5:0010 38              CMPI      
00B5:0011 348116          JLE       0x009F
00B5:0014 E11C9400        MVIC      L10, 0
00B5:0018 7B              LABEL     
00B5:0019 6A9410          CMPILC    L10, 8
00B5:001C 3580FE          JGE       0x009E
00B5:001F E1C8898A        ADDISLL   L19, L10
00B5:0023 2011            LDI       L17
00B5:0025 38              CMPI      
00B5:0026 328006          JLT       0x002C
00B5:0029 3780DA          JMP       0x0099
00B5:002C 280E            LDA       L14
00B5:002E E1C69406        SHLISLC   L10, 3
00B5:0032 8CE130          LEARI.P   
00B5:0035 2900            STA       L0
00B5:0037 280F            LDA       L15
00B5:0039 E1C8898A        ADDISLL   L19, L10
00B5:003D BA10            MULIL     L16
00B5:003F 8CE135          LEARB.P   
00B5:0042 2012            LDI       L18
00B5:0044 8CE135          LEARB.P   
00B5:0047 2901            STA       L1
00B5:0049 E11C9600        MVIC      L11, 0
00B5:004D 7B              LABEL     
00B5:004E 6A9610          CMPILC    L11, 8
00B5:0051 35808A          JGE       0x0099
00B5:0054 E1C8890B        ADDISLL   L18, L11
00B5:0058 2010            LDI       L16
00B5:005A 38              CMPI      
00B5:005B 328006          JLT       0x0061
00B5:005E 378066          JMP       0x0094
00B5:0061 2800            LDA       L0
00B5:0063 A9              DUPA      
00B5:0064 8CE13802        LEARIC.P  1
00B5:0068 2900            STA       L0
00B5:006A 8CE150          LDDRI.P   
00B5:006D 240C            STI       L12
00B5:006F 6A9800          CMPILC    L12, 0
00B5:0072 35800A          JGE       0x007A
00B5:0075 E11C9800        MVIC      L12, 0
00B5:0079 7B              LABEL     
00B5:007A 6A99FE          CMPILC    L12, 255
00B5:007D 34800A          JLE       0x0085
00B5:0080 E11C99FE        MVIC      L12, 255
00B5:0084 7B              LABEL     
00B5:0085 200C            LDI       L12
00B5:0087 9D              CVTUB2I   
00B5:0088 E1B316          STDRPL    L1b
00B5:008B 2801            LDA       L1
00B5:008D 8CE13D02        LEARBC.P  1
00B5:0091 2901            STA       L1
00B5:0093 7B              LABEL     
00B5:0094 6E0B            INCIL     L11
00B5:0096 378095          JMP       0x004E
00B5:0099 6E0A            INCIL     L10
00B5:009B 378109          JMP       0x0019
00B5:009E 79              RETV      
00B5:009F E11C9400        MVIC      L10, 0
00B5:00A3 7B              LABEL     
00B5:00A4 6A9410          CMPILC    L10, 8
00B5:00A7 3583A4          JGE       0x027C
00B5:00AA 280E            LDA       L14
00B5:00AC E1C69406        SHLISLC   L10, 3
00B5:00B0 8CE130          LEARI.P   
00B5:00B3 2900            STA       L0
00B5:00B5 280F            LDA       L15
00B5:00B7 E1C8898A        ADDISLL   L19, L10
00B5:00BB BA10            MULIL     L16
00B5:00BD 8CE135          LEARB.P   
00B5:00C0 2012            LDI       L18
00B5:00C2 8CE135          LEARB.P   
00B5:00C5 2901            STA       L1
00B5:00C7 2800            LDA       L0
00B5:00C9 8CE150          LDDRI.P   
00B5:00CC 2800            LDA       L0
00B5:00CE 8C5002          LDIXIC.P  1
00B5:00D1 04              ORI       
00B5:00D2 2800            LDA       L0
00B5:00D4 8C5004          LDIXIC.P  2
00B5:00D7 04              ORI       
00B5:00D8 2800            LDA       L0
00B5:00DA 8C5006          LDIXIC.P  3
00B5:00DD 04              ORI       
00B5:00DE 2800            LDA       L0
00B5:00E0 8C5008          LDIXIC.P  4
00B5:00E3 04              ORI       
00B5:00E4 2800            LDA       L0
00B5:00E6 8C500A          LDIXIC.P  5
00B5:00E9 04              ORI       
00B5:00EA 2800            LDA       L0
00B5:00EC 8C500C          LDIXIC.P  6
00B5:00EF 04              ORI       
00B5:00F0 2800            LDA       L0
00B5:00F2 8C500E          LDIXIC.P  7
00B5:00F5 04              ORI       
00B5:00F6 240B            STI       L11
00B5:00F8 E1C79610        SARISLC   L11, 8
00B5:00FC 30823E          JEQ       0x021E
00B5:00FF 2800            LDA       L0
00B5:0101 8CE150          LDDRI.P   
00B5:0104 2402            STI       L2
00B5:0106 2800            LDA       L0
00B5:0108 8C5002          LDIXIC.P  1
00B5:010B 2403            STI       L3
00B5:010D 2800            LDA       L0
00B5:010F 8C5004          LDIXIC.P  2
00B5:0112 2404            STI       L4
00B5:0114 2800            LDA       L0
00B5:0116 8C5006          LDIXIC.P  3
00B5:0119 2405            STI       L5
00B5:011B 2800            LDA       L0
00B5:011D 8C5008          LDIXIC.P  4
00B5:0120 2406            STI       L6
00B5:0122 2800            LDA       L0
00B5:0124 8C500A          LDIXIC.P  5
00B5:0127 2407            STI       L7
00B5:0129 2800            LDA       L0
00B5:012B 8C500C          LDIXIC.P  6
00B5:012E 2408            STI       L8
00B5:0130 2800            LDA       L0
00B5:0132 8C500E          LDIXIC.P  7
00B5:0135 2409            STI       L9
00B5:0137 6A20            CMPILC    L2, 0
00B5:0139 358008          JGE       0x0140
00B5:013C E11C20          MVIC      L2, 0
00B5:013F 7B              LABEL     
00B5:0140 6A30            CMPILC    L3, 0
00B5:0142 358008          JGE       0x0149
00B5:0145 E11C30          MVIC      L3, 0
00B5:0148 7B              LABEL     
00B5:0149 6A40            CMPILC    L4, 0
00B5:014B 358008          JGE       0x0152
00B5:014E E11C40          MVIC      L4, 0
00B5:0151 7B              LABEL     
00B5:0152 6A50            CMPILC    L5, 0
00B5:0154 358008          JGE       0x015B
00B5:0157 E11C50          MVIC      L5, 0
00B5:015A 7B              LABEL     
00B5:015B 6A60            CMPILC    L6, 0
00B5:015D 358008          JGE       0x0164
00B5:0160 E11C60          MVIC      L6, 0
00B5:0163 7B              LABEL     
00B5:0164 6A70            CMPILC    L7, 0
00B5:0166 358008          JGE       0x016D
00B5:0169 E11C70          MVIC      L7, 0
00B5:016C 7B              LABEL     
00B5:016D 6A9000          CMPILC    L8, 0
00B5:0170 35800A          JGE       0x0178
00B5:0173 E11C9000        MVIC      L8, 0
00B5:0177 7B              LABEL     
00B5:0178 6A9200          CMPILC    L9, 0
00B5:017B 35800A          JGE       0x0183
00B5:017E E11C9200        MVIC      L9, 0
00B5:0182 7B              LABEL     
00B5:0183 6A85FE          CMPILC    L2, 255
00B5:0186 34800A          JLE       0x018E
00B5:0189 E11C85FE        MVIC      L2, 255
00B5:018D 7B              LABEL     
00B5:018E 6A87FE          CMPILC    L3, 255
00B5:0191 34800A          JLE       0x0199
00B5:0194 E11C87FE        MVIC      L3, 255
00B5:0198 7B              LABEL     
00B5:0199 6A89FE          CMPILC    L4, 255
00B5:019C 34800A          JLE       0x01A4
00B5:019F E11C89FE        MVIC      L4, 255
00B5:01A3 7B              LABEL     
00B5:01A4 6A8BFE          CMPILC    L5, 255
00B5:01A7 34800A          JLE       0x01AF
00B5:01AA E11C8BFE        MVIC      L5, 255
00B5:01AE 7B              LABEL     
00B5:01AF 6A8DFE          CMPILC    L6, 255
00B5:01B2 34800A          JLE       0x01BA
00B5:01B5 E11C8DFE        MVIC      L6, 255
00B5:01B9 7B              LABEL     
00B5:01BA 6A8FFE          CMPILC    L7, 255
00B5:01BD 34800A          JLE       0x01C5
00B5:01C0 E11C8FFE        MVIC      L7, 255
00B5:01C4 7B              LABEL     
00B5:01C5 6A91FE          CMPILC    L8, 255
00B5:01C8 34800A          JLE       0x01D0
00B5:01CB E11C91FE        MVIC      L8, 255
00B5:01CF 7B              LABEL     
00B5:01D0 6A93FE          CMPILC    L9, 255
00B5:01D3 34800A          JLE       0x01DB
00B5:01D6 E11C93FE        MVIC      L9, 255
00B5:01DA 7B              LABEL     
00B5:01DB 2002            LDI       L2
00B5:01DD 9D              CVTUB2I   
00B5:01DE 2801            LDA       L1
00B5:01E0 8CE15E          STDRB.P   
00B5:01E3 2003            LDI       L3
00B5:01E5 9D              CVTUB2I   
00B5:01E6 2801            LDA       L1
00B5:01E8 8C5E02          STIXBC.P  1
00B5:01EB 2004            LDI       L4
00B5:01ED 9D              CVTUB2I   
00B5:01EE 2801            LDA       L1
00B5:01F0 8C5E04          STIXBC.P  2
00B5:01F3 2005            LDI       L5
00B5:01F5 9D              CVTUB2I   
00B5:01F6 2801            LDA       L1
00B5:01F8 8C5E06          STIXBC.P  3
00B5:01FB 2006            LDI       L6
00B5:01FD 9D              CVTUB2I   
00B5:01FE 2801            LDA       L1
00B5:0200 8C5E08          STIXBC.P  4
00B5:0203 2007            LDI       L7
00B5:0205 9D              CVTUB2I   
00B5:0206 2801            LDA       L1
00B5:0208 8C5E0A          STIXBC.P  5
00B5:020B 2008            LDI       L8
00B5:020D 9D              CVTUB2I   
00B5:020E 2801            LDA       L1
00B5:0210 8C5E0C          STIXBC.P  6
00B5:0213 2009            LDI       L9
00B5:0215 9D              CVTUB2I   
00B5:0216 2801            LDA       L1
00B5:0218 8C5E0E          STIXBC.P  7
00B5:021B 3780B2          JMP       0x0277
00B5:021E 2800            LDA       L0
00B5:0220 8CE150          LDDRI.P   
00B5:0223 9D              CVTUB2I   
00B5:0224 2801            LDA       L1
00B5:0226 8CE15E          STDRB.P   
00B5:0229 2800            LDA       L0
00B5:022B 8C5002          LDIXIC.P  1
00B5:022E 9D              CVTUB2I   
00B5:022F 2801            LDA       L1
00B5:0231 8C5E02          STIXBC.P  1
00B5:0234 2800            LDA       L0
00B5:0236 8C5004          LDIXIC.P  2
00B5:0239 9D              CVTUB2I   
00B5:023A 2801            LDA       L1
00B5:023C 8C5E04          STIXBC.P  2
00B5:023F 2800            LDA       L0
00B5:0241 8C5006          LDIXIC.P  3
00B5:0244 9D              CVTUB2I   
00B5:0245 2801            LDA       L1
00B5:0247 8C5E06          STIXBC.P  3
00B5:024A 2800            LDA       L0
00B5:024C 8C5008          LDIXIC.P  4
00B5:024F 9D              CVTUB2I   
00B5:0250 2801            LDA       L1
00B5:0252 8C5E08          STIXBC.P  4
00B5:0255 2800            LDA       L0
00B5:0257 8C500A          LDIXIC.P  5
00B5:025A 9D              CVTUB2I   
00B5:025B 2801            LDA       L1
00B5:025D 8C5E0A          STIXBC.P  5
00B5:0260 2800            LDA       L0
00B5:0262 8C500C          LDIXIC.P  6
00B5:0265 9D              CVTUB2I   
00B5:0266 2801            LDA       L1
00B5:0268 8C5E0C          STIXBC.P  6
00B5:026B 2800            LDA       L0
00B5:026D 8C500E          LDIXIC.P  7
00B5:0270 9D              CVTUB2I   
00B5:0271 2801            LDA       L1
00B5:0273 8C5E0E          STIXBC.P  7
00B5:0276 7B              LABEL     
00B5:0277 6E0A            INCIL     L10
00B5:0279 3783AF          JMP       0x00A4
00B5:027C 79              RETV      
	Avg B/tk=1.014331
182: PDJPG_MarkerSOS(L123Ph)i:
00B6:0000 E141900000      IFXARR    i:256, L0
00B6:0005 E141840001      IFXARR    i:64, L1
00B6:000A E141840002      IFXARR    i:64, L2
00B6:000F E1414603        IFXARR    b:4, L3
00B6:0013 E1414604        IFXARR    b:4, L4
00B6:0017 E1414605        IFXARR    b:4, L5
00B6:001B E1414606        IFXARR    b:4, L6
00B6:001F E1414007        IFXARR    i:4, L7
00B6:0023 E1414008        IFXARR    i:4, L8
00B6:0027 E1414009        IFXARR    i:4, L9
00B6:002B E141400A        IFXARR    i:4, L10
00B6:002F E141460B        IFXARR    b:4, L11
00B6:0033 E141460C        IFXARR    b:4, L12
00B6:0037 E141400D        IFXARR    i:4, L13
00B6:003B E141440E        IFXARR    a:4, L14
00B6:003F E141400F        IFXARR    i:4, L15
00B6:0043 2A14            LDC       Str:259="PDJPG_MarkerSOS: A\n"
00B6:0045 AB              PUSHA     
00B6:0046 7000            CALLG     G0(printf)
00B6:0048 7002            CALLG     G2(clock)
00B6:004A 2411            STI       L17
00B6:004C 2822            LDA       L34
00B6:004E 8CE159          LDDRUB.P  
00B6:0051 B610            SHLIC     8
00B6:0053 2822            LDA       L34
00B6:0055 8C5902          LDIXUBC.P 1
00B6:0058 04              ORI       
00B6:0059 2417            STI       L23
00B6:005B 2A34            LDC       Str:26D="ns %d\n"
00B6:005D 8914            NEWARR    a:1
00B6:005F 2822            LDA       L34
00B6:0061 8C5904          LDIXUBC.P 2
00B6:0064 E110            CVTI2AA   
00B6:0066 E1AC00          DSTIXAC   0
00B6:0069 7000            CALLG     G0(printf)
00B6:006B 2822            LDA       L34
00B6:006D 8C5904          LDIXUBC.P 2
00B6:0070 241F            STI       L31
00B6:0072 E11CC40000      MVIC      L32, 0
00B6:0077 2822            LDA       L34
00B6:0079 8CE13D06        LEARBC.P  3
00B6:007D 2910            STA       L16
00B6:007F E11CA800        MVIC      L20, 0
00B6:0083 7B              LABEL     
00B6:0084 2014            LDI       L20
00B6:0086 2822            LDA       L34
00B6:0088 8C5904          LDIXUBC.P 2
00B6:008B 38              CMPI      
00B6:008C 358242          JGE       0x01B0
00B6:008F 2A44            LDC       Str:274="%d %d %d\n"
00B6:0091 8934            NEWARR    a:3
00B6:0093 2810            LDA       L16
00B6:0095 8CE159          LDDRUB.P  
00B6:0098 E110            CVTI2AA   
00B6:009A E1AC00          DSTIXAC   0
00B6:009D 2810            LDA       L16
00B6:009F 8C5902          LDIXUBC.P 1
00B6:00A2 B708            SARIC     4
00B6:00A4 E110            CVTI2AA   
00B6:00A6 E1AC02          DSTIXAC   1
00B6:00A9 2810            LDA       L16
00B6:00AB 8C5902          LDIXUBC.P 1
00B6:00AE B31E            ANDIC     15
00B6:00B0 E110            CVTI2AA   
00B6:00B2 E1AC04          DSTIXAC   2
00B6:00B5 7000            CALLG     G0(printf)
00B6:00B7 2810            LDA       L16
00B6:00B9 8C5902          LDIXUBC.P 1
00B6:00BC B708            SARIC     4
00B6:00BE E18780B614      STIXZLL   L11b, L20
00B6:00C3 2810            LDA       L16
00B6:00C5 8C5902          LDIXUBC.P 1
00B6:00C8 B31E            ANDIC     15
00B6:00CA 9D              CVTUB2I   
00B6:00CB E18780C614      STIXZLL   L12b, L20
00B6:00D0 E11CAA00        MVIC      L21, 0
00B6:00D4 7B              LABEL     
00B6:00D5 2015            LDI       L21
00B6:00D7 8E9085          LDOSL     L33, G5(PDJPG_Context/jpg_nc)
00B6:00DA 38              CMPI      
00B6:00DB 3580B2          JGE       0x0137
00B6:00DE 8E9086          LDOSL     L33, G6(PDJPG_Context/jpg_cid)
00B6:00E1 2015            LDI       L21
00B6:00E3 49              LDIXUB    
00B6:00E4 2810            LDA       L16
00B6:00E6 8CE159          LDDRUB.P  
00B6:00E9 38              CMPI      
00B6:00EA 31808A          JNE       0x0132
00B6:00ED 8E9087          LDOSL     L33, G7(PDJPG_Context/jpg_ch)
00B6:00F0 2015            LDI       L21
00B6:00F2 49              LDIXUB    
00B6:00F3 E1873614        STIXZLL   L3b, L20
00B6:00F7 8E9088          LDOSL     L33, G8(PDJPG_Context/jpg_cv)
00B6:00FA 2015            LDI       L21
00B6:00FC 49              LDIXUB    
00B6:00FD E1874614        STIXZLL   L4b, L20
00B6:0101 8E9089          LDOSL     L33, G9(PDJPG_Context/jpg_qid)
00B6:0104 2015            LDI       L21
00B6:0106 49              LDIXUB    
00B6:0107 E1875614        STIXZLL   L5b, L20
00B6:010B 8E908A          LDOSL     L33, G10(PDJPG_Context/jpg_cxi)
00B6:010E 2015            LDI       L21
00B6:0110 40              LDIXI     
00B6:0111 E1877014        STIXZLL   L7i, L20
00B6:0115 8E908B          LDOSL     L33, G11(PDJPG_Context/jpg_cyi)
00B6:0118 2015            LDI       L21
00B6:011A 40              LDIXI     
00B6:011B E187808014      STIXZLL   L8i, L20
00B6:0120 E17E3614        LDIXZLL   L3b, L20
00B6:0124 E17E4614        LDIXZLL   L4b, L20
00B6:0128 02              MULI      
00B6:0129 E1876614        STIXZLL   L6b, L20
00B6:012D 6E1A            INCIL     L26
00B6:012F 37800A          JMP       0x0137
00B6:0132 6E15            INCIL     L21
00B6:0134 3780C3          JMP       0x00D5
00B6:0137 E17E7014        LDIXZLL   L7i, L20
00B6:013B B007            ADDIC     7
00B6:013D B706            SARIC     3
00B6:013F 241C            STI       L28
00B6:0141 E17E808014      LDIXZLL   L8i, L20
00B6:0146 B007            ADDIC     7
00B6:0148 B706            SARIC     3
00B6:014A 241D            STI       L29
00B6:014C 201C            LDI       L28
00B6:014E E187809014      STIXZLL   L9i, L20
00B6:0153 201D            LDI       L29
00B6:0155 E18780A014      STIXZLL   L10i, L20
00B6:015A E1C0B801        ADDISLC   L28, 1
00B6:015E E1C0BA02        ADDISLC   L29, 2
00B6:0162 02              MULI      
00B6:0163 241E            STI       L30
00B6:0165 2810            LDA       L16
00B6:0167 8CE159          LDDRUB.P  
00B6:016A 8E908C          LDOSL     L33, G12(PDJPG_Context/jpg_scid)
00B6:016D 2014            LDI       L20
00B6:016F 44              STIXI     
00B6:0170 2015            LDI       L21
00B6:0172 8E908D          LDOSL     L33, G13(PDJPG_Context/jpg_scn)
00B6:0175 2014            LDI       L20
00B6:0177 44              STIXI     
00B6:0178 8E908E          LDOSL     L33, G14(PDJPG_Context/jpg_sibuf)
00B6:017B 2014            LDI       L20
00B6:017D 4C              LDIXA     
00B6:017E E19D801A        JNENULL   0x018F
00B6:0182 E1C6BC0C        SHLISLC   L30, 6
00B6:0186 8906            NEWARR    b:0
00B6:0188 8E908E          LDOSL     L33, G14(PDJPG_Context/jpg_sibuf)
00B6:018B 2014            LDI       L20
00B6:018D 4D              STIXA     
00B6:018E 7B              LABEL     
00B6:018F 8E908E          LDOSL     L33, G14(PDJPG_Context/jpg_sibuf)
00B6:0192 2014            LDI       L20
00B6:0194 4C              LDIXA     
00B6:0195 E1B0            CVTA2PTR  
00B6:0197 E18780E414      STIXZLL   L14a, L20
00B6:019C AC              PUSHI     
00B6:019D E18780D014      STIXZLL   L13i, L20
00B6:01A2 2810            LDA       L16
00B6:01A4 8CE13D04        LEARBC.P  2
00B6:01A8 2910            STA       L16
00B6:01AA 7B              LABEL     
00B6:01AB 6E14            INCIL     L20
00B6:01AD 378257          JMP       0x0084
00B6:01B0 2810            LDA       L16
00B6:01B2 8CE13D06        LEARBC.P  3
00B6:01B6 2910            STA       L16
00B6:01B8 2A80F4          LDC       Str:27E="PDJPG_MarkerSOS: B\n"
00B6:01BB AB              PUSHA     
00B6:01BC 7000            CALLG     G0(printf)
00B6:01BE E11CA800        MVIC      L20, 0
00B6:01C2 7B              LABEL     
00B6:01C3 2014            LDI       L20
00B6:01C5 8E9085          LDOSL     L33, G5(PDJPG_Context/jpg_nc)
00B6:01C8 38              CMPI      
00B6:01C9 35818A          JGE       0x0291
00B6:01CC 8E908D          LDOSL     L33, G13(PDJPG_Context/jpg_scn)
00B6:01CF 2014            LDI       L20
00B6:01D1 40              LDIXI     
00B6:01D2 2415            STI       L21
00B6:01D4 2A8104          LDC       Str:292="PDJPG_MarkerSOS: ch=%d cv=%d chm=%d chn=%d\n"
00B6:01D7 8944            NEWARR    a:4
00B6:01D9 8E9087          LDOSL     L33, G7(PDJPG_Context/jpg_ch)
00B6:01DC 2015            LDI       L21
00B6:01DE 49              LDIXUB    
00B6:01DF E110            CVTI2AA   
00B6:01E1 E1AC00          DSTIXAC   0
00B6:01E4 8E9088          LDOSL     L33, G8(PDJPG_Context/jpg_cv)
00B6:01E7 2015            LDI       L21
00B6:01E9 49              LDIXUB    
00B6:01EA E110            CVTI2AA   
00B6:01EC E1AC02          DSTIXAC   1
00B6:01EF 8E9091          LDOSL     L33, G17(PDJPG_Context/jpg_chm)
00B6:01F2 E110            CVTI2AA   
00B6:01F4 E1AC04          DSTIXAC   2
00B6:01F7 8E9092          LDOSL     L33, G18(PDJPG_Context/jpg_chn)
00B6:01FA E110            CVTI2AA   
00B6:01FC E1AC06          DSTIXAC   3
00B6:01FF 7000            CALLG     G0(printf)
00B6:0201 8E9087          LDOSL     L33, G7(PDJPG_Context/jpg_ch)
00B6:0204 2015            LDI       L21
00B6:0206 49              LDIXUB    
00B6:0207 B2C20000        MULIC     65536
00B6:020B 8E9091          LDOSL     L33, G17(PDJPG_Context/jpg_chm)
00B6:020E E170            DIVI      
00B6:0210 8E9093          LDOSL     L33, G19(PDJPG_Context/jpg_schsci)
00B6:0213 2014            LDI       L20
00B6:0215 44              STIXI     
00B6:0216 8E9088          LDOSL     L33, G8(PDJPG_Context/jpg_cv)
00B6:0219 2015            LDI       L21
00B6:021B 49              LDIXUB    
00B6:021C B2C20000        MULIC     65536
00B6:0220 8E9092          LDOSL     L33, G18(PDJPG_Context/jpg_chn)
00B6:0223 E170            DIVI      
00B6:0225 8E9094          LDOSL     L33, G20(PDJPG_Context/jpg_scvsci)
00B6:0228 2014            LDI       L20
00B6:022A 44              STIXI     
00B6:022B 8E908A          LDOSL     L33, G10(PDJPG_Context/jpg_cxi)
00B6:022E 2015            LDI       L21
00B6:0230 40              LDIXI     
00B6:0231 B007            ADDIC     7
00B6:0233 B706            SARIC     3
00B6:0235 8E9095          LDOSL     L33, G21(PDJPG_Context/jpg_schs)
00B6:0238 2014            LDI       L20
00B6:023A 44              STIXI     
00B6:023B 8E908B          LDOSL     L33, G11(PDJPG_Context/jpg_cyi)
00B6:023E 2015            LDI       L21
00B6:0240 40              LDIXI     
00B6:0241 B007            ADDIC     7
00B6:0243 B706            SARIC     3
00B6:0245 8E9096          LDOSL     L33, G22(PDJPG_Context/jpg_scvs)
00B6:0248 2014            LDI       L20
00B6:024A 44              STIXI     
00B6:024B 2A8174          LDC       Str:2BE="PDJPG_MarkerSOS: i=%d j=%d %d %d %d %d\n"
00B6:024E 8964            NEWARR    a:6
00B6:0250 2014            LDI       L20
00B6:0252 E110            CVTI2AA   
00B6:0254 E1AC00          DSTIXAC   0
00B6:0257 2015            LDI       L21
00B6:0259 E110            CVTI2AA   
00B6:025B E1AC02          DSTIXAC   1
00B6:025E 8E9093          LDOSL     L33, G19(PDJPG_Context/jpg_schsci)
00B6:0261 2014            LDI       L20
00B6:0263 40              LDIXI     
00B6:0264 E110            CVTI2AA   
00B6:0266 E1AC04          DSTIXAC   2
00B6:0269 8E9094          LDOSL     L33, G20(PDJPG_Context/jpg_scvsci)
00B6:026C 2014            LDI       L20
00B6:026E 40              LDIXI     
00B6:026F E110            CVTI2AA   
00B6:0271 E1AC06          DSTIXAC   3
00B6:0274 8E9095          LDOSL     L33, G21(PDJPG_Context/jpg_schs)
00B6:0277 2014            LDI       L20
00B6:0279 40              LDIXI     
00B6:027A E110            CVTI2AA   
00B6:027C E1AC08          DSTIXAC   4
00B6:027F 8E9096          LDOSL     L33, G22(PDJPG_Context/jpg_scvs)
00B6:0282 2014            LDI       L20
00B6:0284 40              LDIXI     
00B6:0285 E110            CVTI2AA   
00B6:0287 E1AC0A          DSTIXAC   5
00B6:028A 7000            CALLG     G0(printf)
00B6:028C 6E14            INCIL     L20
00B6:028E 37819B          JMP       0x01C3
00B6:0291 8E9085          LDOSL     L33, G5(PDJPG_Context/jpg_nc)
00B6:0294 6806            CMPIC     3
00B6:0296 3181C6          JNE       0x037C
00B6:0299 E11CA802        MVIC      L20, 1
00B6:029D 8E9093          LDOSL     L33, G19(PDJPG_Context/jpg_schsci)
00B6:02A0 E150            LDDRI     
00B6:02A2 68C20000        CMPIC     65536
00B6:02A6 30800A          JEQ       0x02AE
00B6:02A9 E11CA800        MVIC      L20, 0
00B6:02AD 7B              LABEL     
00B6:02AE 8E9094          LDOSL     L33, G20(PDJPG_Context/jpg_scvsci)
00B6:02B1 E150            LDDRI     
00B6:02B3 68C20000        CMPIC     65536
00B6:02B7 30800A          JEQ       0x02BF
00B6:02BA E11CA800        MVIC      L20, 0
00B6:02BE 7B              LABEL     
00B6:02BF 8E9093          LDOSL     L33, G19(PDJPG_Context/jpg_schsci)
00B6:02C2 5002            LDIXIC    1
00B6:02C4 68C10000        CMPIC     32768
00B6:02C8 30800A          JEQ       0x02D0
00B6:02CB E11CA800        MVIC      L20, 0
00B6:02CF 7B              LABEL     
00B6:02D0 8E9094          LDOSL     L33, G20(PDJPG_Context/jpg_scvsci)
00B6:02D3 5002            LDIXIC    1
00B6:02D5 68C10000        CMPIC     32768
00B6:02D9 30800A          JEQ       0x02E1
00B6:02DC E11CA800        MVIC      L20, 0
00B6:02E0 7B              LABEL     
00B6:02E1 8E9093          LDOSL     L33, G19(PDJPG_Context/jpg_schsci)
00B6:02E4 5004            LDIXIC    2
00B6:02E6 68C10000        CMPIC     32768
00B6:02EA 30800A          JEQ       0x02F2
00B6:02ED E11CA800        MVIC      L20, 0
00B6:02F1 7B              LABEL     
00B6:02F2 8E9094          LDOSL     L33, G20(PDJPG_Context/jpg_scvsci)
00B6:02F5 5004            LDIXIC    2
00B6:02F7 68C10000        CMPIC     32768
00B6:02FB 30800A          JEQ       0x0303
00B6:02FE E11CA800        MVIC      L20, 0
00B6:0302 7B              LABEL     
00B6:0303 2014            LDI       L20
00B6:0305 9D              CVTUB2I   
00B6:0306 8F9098          STOSL     L33, G24(PDJPG_Context/jpg_is420)
00B6:0309 E11CA802        MVIC      L20, 1
00B6:030D 8E9093          LDOSL     L33, G19(PDJPG_Context/jpg_schsci)
00B6:0310 E150            LDDRI     
00B6:0312 68C20000        CMPIC     65536
00B6:0316 30800A          JEQ       0x031E
00B6:0319 E11CA800        MVIC      L20, 0
00B6:031D 7B              LABEL     
00B6:031E 8E9094          LDOSL     L33, G20(PDJPG_Context/jpg_scvsci)
00B6:0321 E150            LDDRI     
00B6:0323 68C20000        CMPIC     65536
00B6:0327 30800A          JEQ       0x032F
00B6:032A E11CA800        MVIC      L20, 0
00B6:032E 7B              LABEL     
00B6:032F 8E9093          LDOSL     L33, G19(PDJPG_Context/jpg_schsci)
00B6:0332 5002            LDIXIC    1
00B6:0334 68C20000        CMPIC     65536
00B6:0338 30800A          JEQ       0x0340
00B6:033B E11CA800        MVIC      L20, 0
00B6:033F 7B              LABEL     
00B6:0340 8E9094          LDOSL     L33, G20(PDJPG_Context/jpg_scvsci)
00B6:0343 5002            LDIXIC    1
00B6:0345 68C20000        CMPIC     65536
00B6:0349 30800A          JEQ       0x0351
00B6:034C E11CA800        MVIC      L20, 0
00B6:0350 7B              LABEL     
00B6:0351 8E9093          LDOSL     L33, G19(PDJPG_Context/jpg_schsci)
00B6:0354 5004            LDIXIC    2
00B6:0356 68C20000        CMPIC     65536
00B6:035A 30800A          JEQ       0x0362
00B6:035D E11CA800        MVIC      L20, 0
00B6:0361 7B              LABEL     
00B6:0362 8E9094          LDOSL     L33, G20(PDJPG_Context/jpg_scvsci)
00B6:0365 5004            LDIXIC    2
00B6:0367 68C20000        CMPIC     65536
00B6:036B 30800A          JEQ       0x0373
00B6:036E E11CA800        MVIC      L20, 0
00B6:0372 7B              LABEL     
00B6:0373 2014            LDI       L20
00B6:0375 9D              CVTUB2I   
00B6:0376 8F9099          STOSL     L33, G25(PDJPG_Context/jpg_is444)
00B6:0379 378012          JMP       0x0385
00B6:037C AC              PUSHI     
00B6:037D 8F9098          STOSL     L33, G24(PDJPG_Context/jpg_is420)
00B6:0380 AC              PUSHI     
00B6:0381 8F9099          STOSL     L33, G25(PDJPG_Context/jpg_is444)
00B6:0384 7B              LABEL     
00B6:0385 8E909A          LDOSL     L33, G26(PDJPG_Context/xs)
00B6:0388 8E9091          LDOSL     L33, G17(PDJPG_Context/jpg_chm)
00B6:038B B606            SHLIC     3
00B6:038D 00              ADDI      
00B6:038E 6D              DECI      
00B6:038F 8E9091          LDOSL     L33, G17(PDJPG_Context/jpg_chm)
00B6:0392 B606            SHLIC     3
00B6:0394 E170            DIVI      
00B6:0396 241C            STI       L28
00B6:0398 8E909B          LDOSL     L33, G27(PDJPG_Context/ys)
00B6:039B 8E9092          LDOSL     L33, G18(PDJPG_Context/jpg_chn)
00B6:039E B606            SHLIC     3
00B6:03A0 00              ADDI      
00B6:03A1 6D              DECI      
00B6:03A2 8E9092          LDOSL     L33, G18(PDJPG_Context/jpg_chn)
00B6:03A5 B606            SHLIC     3
00B6:03A7 E170            DIVI      
00B6:03A9 241D            STI       L29
00B6:03AB E1EAC78E1D      MULILLL   L30, L28, L29
00B6:03B0 2821            LDA       L33
00B6:03B2 2810            LDA       L16
00B6:03B4 701C            CALLG     G28(PDJHUFF_InitStream)
00B6:03B6 A0              POPI      
00B6:03B7 E11CA800        MVIC      L20, 0
00B6:03BB 7B              LABEL     
00B6:03BC 6AC28200        CMPILC    L20, 256
00B6:03C0 358016          JGE       0x03CE
00B6:03C3 AC              PUSHI     
00B6:03C4 E1870014        STIXZLL   L0i, L20
00B6:03C8 7B              LABEL     
00B6:03C9 6E14            INCIL     L20
00B6:03CB 378023          JMP       0x03BC
00B6:03CE 2A81D4          LDC       Str:2E6="PDJPG_MarkerSOS: C\n"
00B6:03D1 AB              PUSHA     
00B6:03D2 7000            CALLG     G0(printf)
00B6:03D4 8E9085          LDOSL     L33, G5(PDJPG_Context/jpg_nc)
00B6:03D7 6802            CMPIC     1
00B6:03D9 318124          JNE       0x046E
00B6:03DC 2A81E4          LDC       Str:2FA="PDJPG_MarkerSOS: Mono\n"
00B6:03DF AB              PUSHA     
00B6:03E0 7000            CALLG     G0(printf)
00B6:03E2 E11CC40000      MVIC      L32, 0
00B6:03E7 E11CA800        MVIC      L20, 0
00B6:03EB 7B              LABEL     
00B6:03EC 6B8A1D          CMPILL    L20, L29
00B6:03EF 3580F2          JGE       0x046B
00B6:03F2 E11CAA00        MVIC      L21, 0
00B6:03F6 7B              LABEL     
00B6:03F7 6B8A9C          CMPILL    L21, L28
00B6:03FA 3580BE          JGE       0x045C
00B6:03FD 2821            LDA       L33
00B6:03FF 2800            LDA       L0
00B6:0401 E1B0            CVTA2PTR  
00B6:0403 280B            LDA       L11
00B6:0405 E159            LDDRUB    
00B6:0407 B602            SHLIC     1
00B6:0409 B000            ADDIC     0
00B6:040B 280C            LDA       L12
00B6:040D E159            LDDRUB    
00B6:040F B602            SHLIC     1
00B6:0411 6C              INCI      
00B6:0412 2805            LDA       L5
00B6:0414 E159            LDDRUB    
00B6:0416 E1CA8A1C        MULISLL   L20, L28
00B6:041A B815            ADDIL     L21
00B6:041C 201E            LDI       L30
00B6:041E 701F            CALLG     G31(PDJHUFF_DecodeBlock)
00B6:0420 2420            STI       L32
00B6:0422 6AC40000        CMPILC    L32, 0
00B6:0426 358006          JGE       0x042C
00B6:0429 378060          JMP       0x045C
00B6:042C 2800            LDA       L0
00B6:042E E1B0            CVTA2PTR  
00B6:0430 2802            LDA       L2
00B6:0432 E1B0            CVTA2PTR  
00B6:0434 2A8805          LDC       128u
00B6:0437 2020            LDI       L32
00B6:0439 7020            CALLG     G32(PDJPG_TransIDCT)
00B6:043B 2821            LDA       L33
00B6:043D 2802            LDA       L2
00B6:043F E1B0            CVTA2PTR  
00B6:0441 280E            LDA       L14
00B6:0443 E15C            LDDRA     
00B6:0445 2807            LDA       L7
00B6:0447 E150            LDDRI     
00B6:0449 2808            LDA       L8
00B6:044B E150            LDDRI     
00B6:044D E1C6AA06        SHLISLC   L21, 3
00B6:0451 E1C6A806        SHLISLC   L20, 3
00B6:0455 7021            CALLG     G33(PDJPG_CopyOutBlock8B)
00B6:0457 6E15            INCIL     L21
00B6:0459 3780C9          JMP       0x03F7
00B6:045C 6AC40000        CMPILC    L32, 0
00B6:0460 358006          JGE       0x0466
00B6:0463 37800A          JMP       0x046B
00B6:0466 6E14            INCIL     L20
00B6:0468 3780FD          JMP       0x03EC
00B6:046B 3787BA          JMP       0x084B
00B6:046E 8E9098          LDOSL     L33, G24(PDJPG_Context/jpg_is420)
00B6:0471 30858C          JEQ       0x073A
00B6:0474 2A8224          LDC       Str:311="PDJPG_MarkerSOS: Clr420\n"
00B6:0477 AB              PUSHA     
00B6:0478 7000            CALLG     G0(printf)
00B6:047A E11CC40000      MVIC      L32, 0
00B6:047F E11CA800        MVIC      L20, 0
00B6:0483 7B              LABEL     
00B6:0484 6B8A1D          CMPILL    L20, L29
00B6:0487 35855A          JGE       0x0737
00B6:048A E11CAA00        MVIC      L21, 0
00B6:048E 7B              LABEL     
00B6:048F 6B8A9C          CMPILL    L21, L28
00B6:0492 358526          JGE       0x0728
00B6:0495 E1E68C1402      SHLILLC   L24, L20, 1
00B6:049A E1E68C9502      SHLILLC   L25, L21, 1
00B6:049F E1C0B000        ADDISLC   L24, 0
00B6:04A3 2809            LDA       L9
00B6:04A5 E150            LDDRI     
00B6:04A7 02              MULI      
00B6:04A8 E1C0B200        ADDISLC   L25, 0
00B6:04AC 00              ADDI      
00B6:04AD 2416            STI       L22
00B6:04AF 2821            LDA       L33
00B6:04B1 2800            LDA       L0
00B6:04B3 E1B0            CVTA2PTR  
00B6:04B5 280B            LDA       L11
00B6:04B7 E159            LDDRUB    
00B6:04B9 B602            SHLIC     1
00B6:04BB B000            ADDIC     0
00B6:04BD 280C            LDA       L12
00B6:04BF E159            LDDRUB    
00B6:04C1 B602            SHLIC     1
00B6:04C3 6C              INCI      
00B6:04C4 2805            LDA       L5
00B6:04C6 E159            LDDRUB    
00B6:04C8 E1CA8A1C        MULISLL   L20, L28
00B6:04CC B815            ADDIL     L21
00B6:04CE 201E            LDI       L30
00B6:04D0 701F            CALLG     G31(PDJHUFF_DecodeBlock)
00B6:04D2 2420            STI       L32
00B6:04D4 6AC40000        CMPILC    L32, 0
00B6:04D8 358006          JGE       0x04DE
00B6:04DB 378494          JMP       0x0728
00B6:04DE 2800            LDA       L0
00B6:04E0 E1B0            CVTA2PTR  
00B6:04E2 2802            LDA       L2
00B6:04E4 E1B0            CVTA2PTR  
00B6:04E6 2A8805          LDC       128u
00B6:04E9 2020            LDI       L32
00B6:04EB 7020            CALLG     G32(PDJPG_TransIDCT)
00B6:04ED 2821            LDA       L33
00B6:04EF 2802            LDA       L2
00B6:04F1 E1B0            CVTA2PTR  
00B6:04F3 280E            LDA       L14
00B6:04F5 E15C            LDDRA     
00B6:04F7 2807            LDA       L7
00B6:04F9 E150            LDDRI     
00B6:04FB 2808            LDA       L8
00B6:04FD E150            LDDRI     
00B6:04FF E1C0B200        ADDISLC   L25, 0
00B6:0503 B210            MULIC     8
00B6:0505 E1C0B000        ADDISLC   L24, 0
00B6:0509 B606            SHLIC     3
00B6:050B 7021            CALLG     G33(PDJPG_CopyOutBlock8B)
00B6:050D E1C0B000        ADDISLC   L24, 0
00B6:0511 2809            LDA       L9
00B6:0513 E150            LDDRI     
00B6:0515 02              MULI      
00B6:0516 E1C0B201        ADDISLC   L25, 1
00B6:051A 00              ADDI      
00B6:051B 2416            STI       L22
00B6:051D 2821            LDA       L33
00B6:051F 2800            LDA       L0
00B6:0521 E1B0            CVTA2PTR  
00B6:0523 280B            LDA       L11
00B6:0525 E159            LDDRUB    
00B6:0527 B602            SHLIC     1
00B6:0529 B000            ADDIC     0
00B6:052B 280C            LDA       L12
00B6:052D E159            LDDRUB    
00B6:052F B602            SHLIC     1
00B6:0531 6C              INCI      
00B6:0532 2805            LDA       L5
00B6:0534 E159            LDDRUB    
00B6:0536 E1CA8A1C        MULISLL   L20, L28
00B6:053A B815            ADDIL     L21
00B6:053C 201E            LDI       L30
00B6:053E 701F            CALLG     G31(PDJHUFF_DecodeBlock)
00B6:0540 2420            STI       L32
00B6:0542 6AC40000        CMPILC    L32, 0
00B6:0546 358006          JGE       0x054C
00B6:0549 3783B8          JMP       0x0728
00B6:054C 2800            LDA       L0
00B6:054E E1B0            CVTA2PTR  
00B6:0550 2802            LDA       L2
00B6:0552 E1B0            CVTA2PTR  
00B6:0554 2A8805          LDC       128u
00B6:0557 2020            LDI       L32
00B6:0559 7020            CALLG     G32(PDJPG_TransIDCT)
00B6:055B 2821            LDA       L33
00B6:055D 2802            LDA       L2
00B6:055F E1B0            CVTA2PTR  
00B6:0561 280E            LDA       L14
00B6:0563 E15C            LDDRA     
00B6:0565 2807            LDA       L7
00B6:0567 E150            LDDRI     
00B6:0569 2808            LDA       L8
00B6:056B E150            LDDRI     
00B6:056D E1C0B201        ADDISLC   L25, 1
00B6:0571 B210            MULIC     8
00B6:0573 E1C0B000        ADDISLC   L24, 0
00B6:0577 B606            SHLIC     3
00B6:0579 7021            CALLG     G33(PDJPG_CopyOutBlock8B)
00B6:057B E1C0B001        ADDISLC   L24, 1
00B6:057F 2809            LDA       L9
00B6:0581 E150            LDDRI     
00B6:0583 02              MULI      
00B6:0584 E1C0B200        ADDISLC   L25, 0
00B6:0588 00              ADDI      
00B6:0589 2416            STI       L22
00B6:058B 2821            LDA       L33
00B6:058D 2800            LDA       L0
00B6:058F E1B0            CVTA2PTR  
00B6:0591 280B            LDA       L11
00B6:0593 E159            LDDRUB    
00B6:0595 B602            SHLIC     1
00B6:0597 B000            ADDIC     0
00B6:0599 280C            LDA       L12
00B6:059B E159            LDDRUB    
00B6:059D B602            SHLIC     1
00B6:059F 6C              INCI      
00B6:05A0 2805            LDA       L5
00B6:05A2 E159            LDDRUB    
00B6:05A4 E1CA8A1C        MULISLL   L20, L28
00B6:05A8 B815            ADDIL     L21
00B6:05AA 201E            LDI       L30
00B6:05AC 701F            CALLG     G31(PDJHUFF_DecodeBlock)
00B6:05AE 2420            STI       L32
00B6:05B0 6AC40000        CMPILC    L32, 0
00B6:05B4 358006          JGE       0x05BA
00B6:05B7 3782DC          JMP       0x0728
00B6:05BA 2800            LDA       L0
00B6:05BC E1B0            CVTA2PTR  
00B6:05BE 2802            LDA       L2
00B6:05C0 E1B0            CVTA2PTR  
00B6:05C2 2A8805          LDC       128u
00B6:05C5 2020            LDI       L32
00B6:05C7 7020            CALLG     G32(PDJPG_TransIDCT)
00B6:05C9 2821            LDA       L33
00B6:05CB 2802            LDA       L2
00B6:05CD E1B0            CVTA2PTR  
00B6:05CF 280E            LDA       L14
00B6:05D1 E15C            LDDRA     
00B6:05D3 2807            LDA       L7
00B6:05D5 E150            LDDRI     
00B6:05D7 2808            LDA       L8
00B6:05D9 E150            LDDRI     
00B6:05DB E1C0B200        ADDISLC   L25, 0
00B6:05DF B210            MULIC     8
00B6:05E1 E1C0B001        ADDISLC   L24, 1
00B6:05E5 B606            SHLIC     3
00B6:05E7 7021            CALLG     G33(PDJPG_CopyOutBlock8B)
00B6:05E9 E1C0B001        ADDISLC   L24, 1
00B6:05ED 2809            LDA       L9
00B6:05EF E150            LDDRI     
00B6:05F1 02              MULI      
00B6:05F2 E1C0B201        ADDISLC   L25, 1
00B6:05F6 00              ADDI      
00B6:05F7 2416            STI       L22
00B6:05F9 2821            LDA       L33
00B6:05FB 2800            LDA       L0
00B6:05FD E1B0            CVTA2PTR  
00B6:05FF 280B            LDA       L11
00B6:0601 E159            LDDRUB    
00B6:0603 B602            SHLIC     1
00B6:0605 B000            ADDIC     0
00B6:0607 280C            LDA       L12
00B6:0609 E159            LDDRUB    
00B6:060B B602            SHLIC     1
00B6:060D 6C              INCI      
00B6:060E 2805            LDA       L5
00B6:0610 E159            LDDRUB    
00B6:0612 E1CA8A1C        MULISLL   L20, L28
00B6:0616 B815            ADDIL     L21
00B6:0618 201E            LDI       L30
00B6:061A 701F            CALLG     G31(PDJHUFF_DecodeBlock)
00B6:061C 2420            STI       L32
00B6:061E 6AC40000        CMPILC    L32, 0
00B6:0622 358006          JGE       0x0628
00B6:0625 378200          JMP       0x0728
00B6:0628 2800            LDA       L0
00B6:062A E1B0            CVTA2PTR  
00B6:062C 2802            LDA       L2
00B6:062E E1B0            CVTA2PTR  
00B6:0630 2A8805          LDC       128u
00B6:0633 2020            LDI       L32
00B6:0635 7020            CALLG     G32(PDJPG_TransIDCT)
00B6:0637 2821            LDA       L33
00B6:0639 2802            LDA       L2
00B6:063B E1B0            CVTA2PTR  
00B6:063D 280E            LDA       L14
00B6:063F E15C            LDDRA     
00B6:0641 2807            LDA       L7
00B6:0643 E150            LDDRI     
00B6:0645 2808            LDA       L8
00B6:0647 E150            LDDRI     
00B6:0649 E1C0B201        ADDISLC   L25, 1
00B6:064D B210            MULIC     8
00B6:064F E1C0B001        ADDISLC   L24, 1
00B6:0653 B606            SHLIC     3
00B6:0655 7021            CALLG     G33(PDJPG_CopyOutBlock8B)
00B6:0657 2821            LDA       L33
00B6:0659 2800            LDA       L0
00B6:065B E1388080        LEARIC    64
00B6:065F E1B0            CVTA2PTR  
00B6:0661 E17F80B602      LDIXZLC   L11b, 1
00B6:0666 B602            SHLIC     1
00B6:0668 B000            ADDIC     0
00B6:066A E17F80C602      LDIXZLC   L12b, 1
00B6:066F B602            SHLIC     1
00B6:0671 6C              INCI      
00B6:0672 E17F5602        LDIXZLC   L5b, 1
00B6:0676 E1CA8A1C        MULISLL   L20, L28
00B6:067A B815            ADDIL     L21
00B6:067C 201E            LDI       L30
00B6:067E 701F            CALLG     G31(PDJHUFF_DecodeBlock)
00B6:0680 2420            STI       L32
00B6:0682 6AC40000        CMPILC    L32, 0
00B6:0686 358006          JGE       0x068C
00B6:0689 378138          JMP       0x0728
00B6:068C 2800            LDA       L0
00B6:068E E1388080        LEARIC    64
00B6:0692 E1B0            CVTA2PTR  
00B6:0694 2802            LDA       L2
00B6:0696 E1B0            CVTA2PTR  
00B6:0698 2A8805          LDC       128u
00B6:069B 2020            LDI       L32
00B6:069D 7020            CALLG     G32(PDJPG_TransIDCT)
00B6:069F 2821            LDA       L33
00B6:06A1 2802            LDA       L2
00B6:06A3 E1B0            CVTA2PTR  
00B6:06A5 E17F80E402      LDIXZLC   L14a, 1
00B6:06AA E17F7002        LDIXZLC   L7i, 1
00B6:06AE E17F808002      LDIXZLC   L8i, 1
00B6:06B3 E1C6AA06        SHLISLC   L21, 3
00B6:06B7 E1C6A806        SHLISLC   L20, 3
00B6:06BB 7021            CALLG     G33(PDJPG_CopyOutBlock8B)
00B6:06BD 2821            LDA       L33
00B6:06BF 2800            LDA       L0
00B6:06C1 E1388100        LEARIC    128
00B6:06C5 E1B0            CVTA2PTR  
00B6:06C7 E17F80B604      LDIXZLC   L11b, 2
00B6:06CC B602            SHLIC     1
00B6:06CE B000            ADDIC     0
00B6:06D0 E17F80C604      LDIXZLC   L12b, 2
00B6:06D5 B602            SHLIC     1
00B6:06D7 6C              INCI      
00B6:06D8 E17F5604        LDIXZLC   L5b, 2
00B6:06DC E1CA8A1C        MULISLL   L20, L28
00B6:06E0 B815            ADDIL     L21
00B6:06E2 201E            LDI       L30
00B6:06E4 701F            CALLG     G31(PDJHUFF_DecodeBlock)
00B6:06E6 2420            STI       L32
00B6:06E8 6AC40000        CMPILC    L32, 0
00B6:06EC 358006          JGE       0x06F2
00B6:06EF 37806C          JMP       0x0728
00B6:06F2 2800            LDA       L0
00B6:06F4 E1388100        LEARIC    128
00B6:06F8 E1B0            CVTA2PTR  
00B6:06FA 2802            LDA       L2
00B6:06FC E1B0            CVTA2PTR  
00B6:06FE 2A8805          LDC       128u
00B6:0701 2020            LDI       L32
00B6:0703 7020            CALLG     G32(PDJPG_TransIDCT)
00B6:0705 2821            LDA       L33
00B6:0707 2802            LDA       L2
00B6:0709 E1B0            CVTA2PTR  
00B6:070B E17F80E404      LDIXZLC   L14a, 2
00B6:0710 E17F7004        LDIXZLC   L7i, 2
00B6:0714 E17F808004      LDIXZLC   L8i, 2
00B6:0719 E1C6AA06        SHLISLC   L21, 3
00B6:071D E1C6A806        SHLISLC   L20, 3
00B6:0721 7021            CALLG     G33(PDJPG_CopyOutBlock8B)
00B6:0723 6E15            INCIL     L21
00B6:0725 378531          JMP       0x048F
00B6:0728 6AC40000        CMPILC    L32, 0
00B6:072C 358006          JGE       0x0732
00B6:072F 37800A          JMP       0x0737
00B6:0732 6E14            INCIL     L20
00B6:0734 378565          JMP       0x0484
00B6:0737 378222          JMP       0x084B
00B6:073A 2A8234          LDC       Str:32A="PDJPG_MarkerSOS: Generic\n"
00B6:073D AB              PUSHA     
00B6:073E 7000            CALLG     G0(printf)
00B6:0740 E11CC40000      MVIC      L32, 0
00B6:0745 E11CA800        MVIC      L20, 0
00B6:0749 7B              LABEL     
00B6:074A 6B8A1E          CMPILL    L20, L30
00B6:074D 3581F6          JGE       0x084B
00B6:0750 E11CAA00        MVIC      L21, 0
00B6:0754 7B              LABEL     
00B6:0755 6B8A9F          CMPILL    L21, L31
00B6:0758 3581C2          JGE       0x083C
00B6:075B E11CAC00        MVIC      L22, 0
00B6:075F 7B              LABEL     
00B6:0760 2016            LDI       L22
00B6:0762 E17E4615        LDIXZLL   L4b, L21
00B6:0766 38              CMPI      
00B6:0767 358186          JGE       0x082D
00B6:076A E11CAE00        MVIC      L23, 0
00B6:076E 7B              LABEL     
00B6:076F 2017            LDI       L23
00B6:0771 E17E3615        LDIXZLL   L3b, L21
00B6:0775 38              CMPI      
00B6:0776 35814A          JGE       0x081E
00B6:0779 6AC40000        CMPILC    L32, 0
00B6:077D 358006          JGE       0x0783
00B6:0780 378136          JMP       0x081E
00B6:0783 2014            LDI       L20
00B6:0785 E17E809015      LDIXZLL   L9i, L21
00B6:078A E17E3615        LDIXZLL   L3b, L21
00B6:078E E170            DIVI      
00B6:0790 E170            DIVI      
00B6:0792 E17E3615        LDIXZLL   L3b, L21
00B6:0796 02              MULI      
00B6:0797 2418            STI       L24
00B6:0799 2014            LDI       L20
00B6:079B E17E809015      LDIXZLL   L9i, L21
00B6:07A0 E17E3615        LDIXZLL   L3b, L21
00B6:07A4 E170            DIVI      
00B6:07A6 E172            MODI      
00B6:07A8 E17E3615        LDIXZLL   L3b, L21
00B6:07AC 02              MULI      
00B6:07AD 2419            STI       L25
00B6:07AF 2821            LDA       L33
00B6:07B1 2800            LDA       L0
00B6:07B3 E1C6AA0C        SHLISLC   L21, 6
00B6:07B7 E130            LEARI     
00B6:07B9 E1B0            CVTA2PTR  
00B6:07BB E17E80B615      LDIXZLL   L11b, L21
00B6:07C0 B602            SHLIC     1
00B6:07C2 B000            ADDIC     0
00B6:07C4 E17E80C615      LDIXZLL   L12b, L21
00B6:07C9 B602            SHLIC     1
00B6:07CB 6C              INCI      
00B6:07CC E17E5615        LDIXZLL   L5b, L21
00B6:07D0 2014            LDI       L20
00B6:07D2 201E            LDI       L30
00B6:07D4 701F            CALLG     G31(PDJHUFF_DecodeBlock)
00B6:07D6 2420            STI       L32
00B6:07D8 6AC40000        CMPILC    L32, 0
00B6:07DC 358006          JGE       0x07E2
00B6:07DF 378078          JMP       0x081E
00B6:07E2 2800            LDA       L0
00B6:07E4 E1C6AA0C        SHLISLC   L21, 6
00B6:07E8 E130            LEARI     
00B6:07EA E1B0            CVTA2PTR  
00B6:07EC 2802            LDA       L2
00B6:07EE E1B0            CVTA2PTR  
00B6:07F0 2A8805          LDC       128u
00B6:07F3 2020            LDI       L32
00B6:07F5 7020            CALLG     G32(PDJPG_TransIDCT)
00B6:07F7 2821            LDA       L33
00B6:07F9 2802            LDA       L2
00B6:07FB E1B0            CVTA2PTR  
00B6:07FD E17E80E415      LDIXZLL   L14a, L21
00B6:0802 E17E7015        LDIXZLL   L7i, L21
00B6:0806 E17E808015      LDIXZLL   L8i, L21
00B6:080B E1C88C97        ADDISLL   L25, L23
00B6:080F B210            MULIC     8
00B6:0811 E1C88C16        ADDISLL   L24, L22
00B6:0815 B606            SHLIC     3
00B6:0817 7021            CALLG     G33(PDJPG_CopyOutBlock8B)
00B6:0819 6E17            INCIL     L23
00B6:081B 37815D          JMP       0x076F
00B6:081E 6AC40000        CMPILC    L32, 0
00B6:0822 358006          JGE       0x0828
00B6:0825 37800A          JMP       0x082D
00B6:0828 6E16            INCIL     L22
00B6:082A 378199          JMP       0x0760
00B6:082D 6AC40000        CMPILC    L32, 0
00B6:0831 358006          JGE       0x0837
00B6:0834 37800A          JMP       0x083C
00B6:0837 6E15            INCIL     L21
00B6:0839 3781CD          JMP       0x0755
00B6:083C 6AC40000        CMPILC    L32, 0
00B6:0840 358006          JGE       0x0846
00B6:0843 37800A          JMP       0x084B
00B6:0846 6E14            INCIL     L20
00B6:0848 378201          JMP       0x074A
00B6:084B 7002            CALLG     G2(clock)
00B6:084D 2412            STI       L18
00B6:084F 2A8244          LDC       Str:344="PDJPG_MarkerSOS: Img Dec Dt=%d\n"
00B6:0852 8914            NEWARR    a:1
00B6:0854 E1C98911        SUBISLL   L18, L17
00B6:0858 E110            CVTI2AA   
00B6:085A E1AC00          DSTIXAC   0
00B6:085D 7000            CALLG     G0(printf)
00B6:085F 6AC40000        CMPILC    L32, 0
00B6:0863 35801A          JGE       0x0873
00B6:0866 2A8254          LDC       Str:364="PDJPG_MarkerSOS: Bad Image\n"
00B6:0869 AB              PUSHA     
00B6:086A 7000            CALLG     G0(printf)
00B6:086C 2A10            LDC       -1i
00B6:086E 37802E          JMP       0x0888
00B6:0871 61A0            NX.POPI   
00B6:0873 8E90A6          LDOSL     L33, G38(PDJPG_Context/huff_cs)
00B6:0876 2822            LDA       L34
00B6:0878 E1B406          DIFFPTR   b:0
00B6:087B 2414            STI       L20
00B6:087D 2014            LDI       L20
00B6:087F 37800C          JMP       0x0888
00B6:0882 61A0            NX.POPI   
00B6:0884 61AC            NX.PUSHI  
00B6:0886 E144            LBLCLNP   
00B6:0888 E143900000      DFXARR    i:256, L0
00B6:088D E143840001      DFXARR    i:64, L1
00B6:0892 E143840002      DFXARR    i:64, L2
00B6:0897 E1434603        DFXARR    b:4, L3
00B6:089B E1434604        DFXARR    b:4, L4
00B6:089F E1434605        DFXARR    b:4, L5
00B6:08A3 E1434606        DFXARR    b:4, L6
00B6:08A7 E1434007        DFXARR    i:4, L7
00B6:08AB E1434008        DFXARR    i:4, L8
00B6:08AF E1434009        DFXARR    i:4, L9
00B6:08B3 E143400A        DFXARR    i:4, L10
00B6:08B7 E143460B        DFXARR    b:4, L11
00B6:08BB E143460C        DFXARR    b:4, L12
00B6:08BF E143400D        DFXARR    i:4, L13
00B6:08C3 E143440E        DFXARR    a:4, L14
00B6:08C7 E143400F        DFXARR    i:4, L15
00B6:08CB 74              RETI      
	Avg B/tk=1.040665
183: PDJPG_MarkerSOF0(L123Ph)i:
00B7:0000 2809            LDA       L9
00B7:0002 8CE159          LDDRUB.P  
00B7:0005 B610            SHLIC     8
00B7:0007 2809            LDA       L9
00B7:0009 8C5902          LDIXUBC.P 1
00B7:000C 04              ORI       
00B7:000D 2405            STI       L5
00B7:000F 2809            LDA       L9
00B7:0011 8C5906          LDIXUBC.P 3
00B7:0014 B610            SHLIC     8
00B7:0016 2809            LDA       L9
00B7:0018 8C5908          LDIXUBC.P 4
00B7:001B 04              ORI       
00B7:001C 2402            STI       L2
00B7:001E 2809            LDA       L9
00B7:0020 8C590A          LDIXUBC.P 5
00B7:0023 B610            SHLIC     8
00B7:0025 2809            LDA       L9
00B7:0027 8C590C          LDIXUBC.P 6
00B7:002A 04              ORI       
00B7:002B 2403            STI       L3
00B7:002D 2003            LDI       L3
00B7:002F 8F8400          STOSL     L8, G0(PDJPG_Context/xs)
00B7:0032 2002            LDI       L2
00B7:0034 8F8401          STOSL     L8, G1(PDJPG_Context/ys)
00B7:0037 E11C60          MVIC      L6, 0
00B7:003A E11C70          MVIC      L7, 0
00B7:003D 2809            LDA       L9
00B7:003F 8C590E          LDIXUBC.P 7
00B7:0042 2404            STI       L4
00B7:0044 2809            LDA       L9
00B7:0046 8CE13D10        LEARBC.P  8
00B7:004A 2901            STA       L1
00B7:004C E11C20          MVIC      L2, 0
00B7:004F 7B              LABEL     
00B7:0050 6B24            CMPILL    L2, L4
00B7:0052 3580D2          JGE       0x00BE
00B7:0055 2801            LDA       L1
00B7:0057 8CE159          LDDRUB.P  
00B7:005A 8E8402          LDOSL     L8, G2(PDJPG_Context/jpg_cid)
00B7:005D 2002            LDI       L2
00B7:005F 4E              STIXB     
00B7:0060 2801            LDA       L1
00B7:0062 8C5902          LDIXUBC.P 1
00B7:0065 B708            SARIC     4
00B7:0067 8E8403          LDOSL     L8, G3(PDJPG_Context/jpg_ch)
00B7:006A 2002            LDI       L2
00B7:006C 4E              STIXB     
00B7:006D 2801            LDA       L1
00B7:006F 8C5902          LDIXUBC.P 1
00B7:0072 B31E            ANDIC     15
00B7:0074 9D              CVTUB2I   
00B7:0075 8E8404          LDOSL     L8, G4(PDJPG_Context/jpg_cv)
00B7:0078 2002            LDI       L2
00B7:007A 4E              STIXB     
00B7:007B 2801            LDA       L1
00B7:007D 8C5904          LDIXUBC.P 2
00B7:0080 8E8405          LDOSL     L8, G5(PDJPG_Context/jpg_qid)
00B7:0083 2002            LDI       L2
00B7:0085 4E              STIXB     
00B7:0086 8E8403          LDOSL     L8, G3(PDJPG_Context/jpg_ch)
00B7:0089 2002            LDI       L2
00B7:008B 49              LDIXUB    
00B7:008C 2006            LDI       L6
00B7:008E 38              CMPI      
00B7:008F 348012          JLE       0x009B
00B7:0092 8E8403          LDOSL     L8, G3(PDJPG_Context/jpg_ch)
00B7:0095 2002            LDI       L2
00B7:0097 49              LDIXUB    
00B7:0098 2406            STI       L6
00B7:009A 7B              LABEL     
00B7:009B 8E8404          LDOSL     L8, G4(PDJPG_Context/jpg_cv)
00B7:009E 2002            LDI       L2
00B7:00A0 49              LDIXUB    
00B7:00A1 2007            LDI       L7
00B7:00A3 38              CMPI      
00B7:00A4 348012          JLE       0x00B0
00B7:00A7 8E8404          LDOSL     L8, G4(PDJPG_Context/jpg_cv)
00B7:00AA 2002            LDI       L2
00B7:00AC 49              LDIXUB    
00B7:00AD 2407            STI       L7
00B7:00AF 7B              LABEL     
00B7:00B0 2801            LDA       L1
00B7:00B2 8CE13D06        LEARBC.P  3
00B7:00B6 2901            STA       L1
00B7:00B8 7B              LABEL     
00B7:00B9 6E02            INCIL     L2
00B7:00BB 3780DB          JMP       0x0050
00B7:00BE 2006            LDI       L6
00B7:00C0 8F8406          STOSL     L8, G6(PDJPG_Context/jpg_chm)
00B7:00C3 2007            LDI       L7
00B7:00C5 8F8407          STOSL     L8, G7(PDJPG_Context/jpg_chn)
00B7:00C8 E11C20          MVIC      L2, 0
00B7:00CB 7B              LABEL     
00B7:00CC 6B24            CMPILL    L2, L4
00B7:00CE 35805C          JGE       0x00FF
00B7:00D1 8E8403          LDOSL     L8, G3(PDJPG_Context/jpg_ch)
00B7:00D4 2002            LDI       L2
00B7:00D6 49              LDIXUB    
00B7:00D7 8E8400          LDOSL     L8, G0(PDJPG_Context/xs)
00B7:00DA 02              MULI      
00B7:00DB 2006            LDI       L6
00B7:00DD E170            DIVI      
00B7:00DF 8E8408          LDOSL     L8, G8(PDJPG_Context/jpg_cxi)
00B7:00E2 2002            LDI       L2
00B7:00E4 44              STIXI     
00B7:00E5 8E8404          LDOSL     L8, G4(PDJPG_Context/jpg_cv)
00B7:00E8 2002            LDI       L2
00B7:00EA 49              LDIXUB    
00B7:00EB 8E8401          LDOSL     L8, G1(PDJPG_Context/ys)
00B7:00EE 02              MULI      
00B7:00EF 2007            LDI       L7
00B7:00F1 E170            DIVI      
00B7:00F3 8E8409          LDOSL     L8, G9(PDJPG_Context/jpg_cyi)
00B7:00F6 2002            LDI       L2
00B7:00F8 44              STIXI     
00B7:00F9 7B              LABEL     
00B7:00FA 6E02            INCIL     L2
00B7:00FC 378065          JMP       0x00CC
00B7:00FF 2004            LDI       L4
00B7:0101 8F840A          STOSL     L8, G10(PDJPG_Context/jpg_nc)
00B7:0104 6400            RETC      0i
	Avg B/tk=0.888136
184: PDJPG_MarkerDQT(L123Ph)i:
00B8:0000 2806            LDA       L6
00B8:0002 8CE159          LDDRUB.P  
00B8:0005 B610            SHLIC     8
00B8:0007 2806            LDA       L6
00B8:0009 8C5902          LDIXUBC.P 1
00B8:000C 04              ORI       
00B8:000D 2404            STI       L4
00B8:000F 2806            LDA       L6
00B8:0011 8CE13D04        LEARBC.P  2
00B8:0015 2900            STA       L0
00B8:0017 2806            LDA       L6
00B8:0019 2004            LDI       L4
00B8:001B 8CE135          LEARB.P   
00B8:001E 2901            STA       L1
00B8:0020 7B              LABEL     
00B8:0021 2800            LDA       L0
00B8:0023 2801            LDA       L1
00B8:0025 8C3C            CMPA.P    
00B8:0027 358094          JGE       0x0074
00B8:002A 2800            LDA       L0
00B8:002C 8CE159          LDDRUB.P  
00B8:002F B708            SARIC     4
00B8:0031 B31E            ANDIC     15
00B8:0033 2402            STI       L2
00B8:0035 2002            LDI       L2
00B8:0037 308004          JEQ       0x003C
00B8:003A 6410            RETC      -1i
00B8:003C 2800            LDA       L0
00B8:003E 8CE159          LDDRUB.P  
00B8:0041 B31E            ANDIC     15
00B8:0043 2402            STI       L2
00B8:0045 E11C30          MVIC      L3, 0
00B8:0048 7B              LABEL     
00B8:0049 6A8680          CMPILC    L3, 64
00B8:004C 358032          JGE       0x0068
00B8:004F 2800            LDA       L0
00B8:0051 E1C031          ADDISLC   L3, 1
00B8:0054 8C49            LDIXUB.P  
00B8:0056 8E51            LDOSL     L5, G1(PDJPG_Context/jpg_qt)
00B8:0058 E1C62C          SHLISLC   L2, 6
00B8:005B 7E00            LDGS      G0(pdjpg_zigzag2)
00B8:005D 2003            LDI       L3
00B8:005F 40              LDIXI     
00B8:0060 00              ADDI      
00B8:0061 4E              STIXB     
00B8:0062 7B              LABEL     
00B8:0063 6E03            INCIL     L3
00B8:0065 37803D          JMP       0x0049
00B8:0068 2800            LDA       L0
00B8:006A 8CE13D8082      LEARBC.P  65
00B8:006F 2900            STA       L0
00B8:0071 3780A5          JMP       0x0021
00B8:0074 2800            LDA       L0
00B8:0076 2806            LDA       L6
00B8:0078 E1B406          DIFFPTR   b:0
00B8:007B 74              RETI      
	Avg B/tk=0.939394
185: PDJPG_MarkerDHT(L123Ph)i:
00B9:0000 2808            LDA       L8
00B9:0002 8CE159          LDDRUB.P  
00B9:0005 B610            SHLIC     8
00B9:0007 2808            LDA       L8
00B9:0009 8C5902          LDIXUBC.P 1
00B9:000C 04              ORI       
00B9:000D 2405            STI       L5
00B9:000F 2808            LDA       L8
00B9:0011 8C5904          LDIXUBC.P 2
00B9:0014 B708            SARIC     4
00B9:0016 B31E            ANDIC     15
00B9:0018 2403            STI       L3
00B9:001A 2808            LDA       L8
00B9:001C 8C5904          LDIXUBC.P 2
00B9:001F B31E            ANDIC     15
00B9:0021 2402            STI       L2
00B9:0023 2A14            LDC       Str:380="dest %d, type %d\n"
00B9:0025 8924            NEWARR    a:2
00B9:0027 2002            LDI       L2
00B9:0029 E110            CVTI2AA   
00B9:002B E1AC00          DSTIXAC   0
00B9:002E 2003            LDI       L3
00B9:0030 E110            CVTI2AA   
00B9:0032 E1AC02          DSTIXAC   1
00B9:0035 7000            CALLG     G0(printf)
00B9:0037 E1C622          SHLISLC   L2, 1
00B9:003A B803            ADDIL     L3
00B9:003C 2406            STI       L6
00B9:003E E11C20          MVIC      L2, 0
00B9:0041 7B              LABEL     
00B9:0042 6AC04200        CMPILC    L2, 256
00B9:0046 358052          JGE       0x0072
00B9:0049 AC              PUSHI     
00B9:004A 8E72            LDOSL     L7, G2(PDJPG_Context/huff_len)
00B9:004C E1C68C10        SHLISLC   L6, 8
00B9:0050 B802            ADDIL     L2
00B9:0052 8C4E            STIXB.P   
00B9:0054 2A17            LDC       -1s
00B9:0056 8E73            LDOSL     L7, G3(PDJPG_Context/huff_next)
00B9:0058 E1C68C10        SHLISLC   L6, 8
00B9:005C B802            ADDIL     L2
00B9:005E 8C4F            STIXS.P   
00B9:0060 2A17            LDC       -1s
00B9:0062 8E74            LDOSL     L7, G4(PDJPG_Context/huff_idx)
00B9:0064 E1C68C10        SHLISLC   L6, 8
00B9:0068 B802            ADDIL     L2
00B9:006A 8C4F            STIXS.P   
00B9:006C 7B              LABEL     
00B9:006D 6E02            INCIL     L2
00B9:006F 37805F          JMP       0x0042
00B9:0072 2808            LDA       L8
00B9:0074 8CE13D06        LEARBC.P  3
00B9:0078 2900            STA       L0
00B9:007A 2800            LDA       L0
00B9:007C 8CE13D20        LEARBC.P  16
00B9:0080 2901            STA       L1
00B9:0082 E11C40          MVIC      L4, 0
00B9:0085 E11C50          MVIC      L5, 0
00B9:0088 E11C20          MVIC      L2, 0
00B9:008B 7B              LABEL     
00B9:008C 6A8420          CMPILC    L2, 16
00B9:008F 3580C4          JGE       0x00F4
00B9:0092 E1E64402        SHLILLC   L4, L4, 1
00B9:0096 E11C30          MVIC      L3, 0
00B9:0099 7B              LABEL     
00B9:009A 2003            LDI       L3
00B9:009C 2800            LDA       L0
00B9:009E 2002            LDI       L2
00B9:00A0 8C49            LDIXUB.P  
00B9:00A2 38              CMPI      
00B9:00A3 358092          JGE       0x00EF
00B9:00A6 2004            LDI       L4
00B9:00A8 A4              DUPI      
00B9:00A9 6C              INCI      
00B9:00AA 2404            STI       L4
00B9:00AC 9F              CVTUS2I   
00B9:00AD 8E75            LDOSL     L7, G5(PDJPG_Context/huff_code)
00B9:00AF E1C68C10        SHLISLC   L6, 8
00B9:00B3 E1B216          LDDRPL    L1b
00B9:00B6 00              ADDI      
00B9:00B7 8C4F            STIXS.P   
00B9:00B9 E1C021          ADDISLC   L2, 1
00B9:00BC 9D              CVTUB2I   
00B9:00BD 8E72            LDOSL     L7, G2(PDJPG_Context/huff_len)
00B9:00BF E1C68C10        SHLISLC   L6, 8
00B9:00C3 E1B216          LDDRPL    L1b
00B9:00C6 00              ADDI      
00B9:00C7 8C4E            STIXB.P   
00B9:00C9 2A15            LDC       1u
00B9:00CB E1C021          ADDISLC   L2, 1
00B9:00CE 06              SHLI      
00B9:00CF 6D              DECI      
00B9:00D0 9F              CVTUS2I   
00B9:00D1 8E76            LDOSL     L7, G6(PDJPG_Context/huff_mask)
00B9:00D3 E1C68C10        SHLISLC   L6, 8
00B9:00D7 E1B216          LDDRPL    L1b
00B9:00DA 00              ADDI      
00B9:00DB 8C4F            STIXS.P   
00B9:00DD E1E05201        ADDILLC   L5, L2, 1
00B9:00E1 2801            LDA       L1
00B9:00E3 8CE13D02        LEARBC.P  1
00B9:00E7 2901            STA       L1
00B9:00E9 7B              LABEL     
00B9:00EA 6E03            INCIL     L3
00B9:00EC 3780A9          JMP       0x009A
00B9:00EF 6E02            INCIL     L2
00B9:00F1 3780CF          JMP       0x008C
00B9:00F4 2A74            LDC       Str:392="%04X %d\n"
00B9:00F6 8924            NEWARR    a:2
00B9:00F8 2004            LDI       L4
00B9:00FA E110            CVTI2AA   
00B9:00FC E1AC00          DSTIXAC   0
00B9:00FF 2005            LDI       L5
00B9:0101 E110            CVTI2AA   
00B9:0103 E1AC02          DSTIXAC   1
00B9:0106 7000            CALLG     G0(printf)
00B9:0108 E11C20          MVIC      L2, 0
00B9:010B 7B              LABEL     
00B9:010C 6AC04200        CMPILC    L2, 256
00B9:0110 35803C          JGE       0x0131
00B9:0113 2A17            LDC       -1s
00B9:0115 8E73            LDOSL     L7, G3(PDJPG_Context/huff_next)
00B9:0117 E1C68C10        SHLISLC   L6, 8
00B9:011B B802            ADDIL     L2
00B9:011D 8C4F            STIXS.P   
00B9:011F 2A17            LDC       -1s
00B9:0121 8E74            LDOSL     L7, G4(PDJPG_Context/huff_idx)
00B9:0123 E1C68C10        SHLISLC   L6, 8
00B9:0127 B802            ADDIL     L2
00B9:0129 8C4F            STIXS.P   
00B9:012B 7B              LABEL     
00B9:012C 6E02            INCIL     L2
00B9:012E 378049          JMP       0x010C
00B9:0131 E11C20          MVIC      L2, 0
00B9:0134 7B              LABEL     
00B9:0135 6AC04200        CMPILC    L2, 256
00B9:0139 35811E          JGE       0x01CB
00B9:013C 8E72            LDOSL     L7, G2(PDJPG_Context/huff_len)
00B9:013E E1C68C10        SHLISLC   L6, 8
00B9:0142 B802            ADDIL     L2
00B9:0144 8C49            LDIXUB.P  
00B9:0146 2405            STI       L5
00B9:0148 2005            LDI       L5
00B9:014A 318006          JNE       0x0150
00B9:014D 3780EC          JMP       0x01C6
00B9:0150 8E75            LDOSL     L7, G5(PDJPG_Context/huff_code)
00B9:0152 E1C68C10        SHLISLC   L6, 8
00B9:0156 B802            ADDIL     L2
00B9:0158 8C4B            LDIXUS.P  
00B9:015A 2403            STI       L3
00B9:015C 6A8A10          CMPILC    L5, 8
00B9:015F 338074          JGT       0x019C
00B9:0162 2003            LDI       L3
00B9:0164 2A8085          LDC       8u
00B9:0167 B905            SUBIL     L5
00B9:0169 06              SHLI      
00B9:016A 2403            STI       L3
00B9:016C 2A15            LDC       1u
00B9:016E 2A8085          LDC       8u
00B9:0171 B905            SUBIL     L5
00B9:0173 06              SHLI      
00B9:0174 2404            STI       L4
00B9:0176 7B              LABEL     
00B9:0177 2004            LDI       L4
00B9:0179 A4              DUPI      
00B9:017A 6D              DECI      
00B9:017B 2404            STI       L4
00B9:017D 308032          JEQ       0x0199
00B9:0180 6AC06200        CMPILC    L3, 256
00B9:0184 358024          JGE       0x0199
00B9:0187 2002            LDI       L2
00B9:0189 9E              CVTSS2I   
00B9:018A 8E74            LDOSL     L7, G4(PDJPG_Context/huff_idx)
00B9:018C E1C68C10        SHLISLC   L6, 8
00B9:0190 B803            ADDIL     L3
00B9:0192 8C4F            STIXS.P   
00B9:0194 6E03            INCIL     L3
00B9:0196 378043          JMP       0x0177
00B9:0199 378054          JMP       0x01C6
00B9:019C 2003            LDI       L3
00B9:019E E1C158          SUBISLC   L5, 8
00B9:01A1 07              SARI      
00B9:01A2 2403            STI       L3
00B9:01A4 8E74            LDOSL     L7, G4(PDJPG_Context/huff_idx)
00B9:01A6 E1C68C10        SHLISLC   L6, 8
00B9:01AA B803            ADDIL     L3
00B9:01AC 8C4A            LDIXSS.P  
00B9:01AE 8E73            LDOSL     L7, G3(PDJPG_Context/huff_next)
00B9:01B0 E1C68C10        SHLISLC   L6, 8
00B9:01B4 B802            ADDIL     L2
00B9:01B6 8C4F            STIXS.P   
00B9:01B8 2002            LDI       L2
00B9:01BA 9E              CVTSS2I   
00B9:01BB 8E74            LDOSL     L7, G4(PDJPG_Context/huff_idx)
00B9:01BD E1C68C10        SHLISLC   L6, 8
00B9:01C1 B803            ADDIL     L3
00B9:01C3 8C4F            STIXS.P   
00B9:01C5 7B              LABEL     
00B9:01C6 6E02            INCIL     L2
00B9:01C8 37812B          JMP       0x0135
00B9:01CB 2801            LDA       L1
00B9:01CD 2808            LDA       L8
00B9:01CF E1B406          DIFFPTR   b:0
00B9:01D2 74              RETI      
	Avg B/tk=0.991507
186: PDJPG_MarkerAPP0(L123Ph)i:
00BA:0000 6400            RETC      0i
	Avg B/tk=0.285714
187: PDJPG_MarkerAPP9(L123Ph)i:
00BB:0000 6400            RETC      0i
	Avg B/tk=0.200000
188: PDJPG_MarkerAPP11(L123Ph)i:
00BC:0000 2805            LDA       L5
00BC:0002 8CE13D04        LEARBC.P  2
00BC:0006 2905            STA       L5
00BC:0008 6400            RETC      0i
	Avg B/tk=0.500000
189: PDJPG_MarkerAPP12(L123Ph)i:
00BD:0000 2802            LDA       L2
00BD:0002 8CE13D04        LEARBC.P  2
00BD:0006 2902            STA       L2
00BD:0008 2802            LDA       L2
00BD:000A 8CE159          LDDRUB.P  
00BD:000D B630            SHLIC     24
00BD:000F 2802            LDA       L2
00BD:0011 8C5902          LDIXUBC.P 1
00BD:0014 B620            SHLIC     16
00BD:0016 04              ORI       
00BD:0017 2802            LDA       L2
00BD:0019 8C5904          LDIXUBC.P 2
00BD:001C B610            SHLIC     8
00BD:001E 04              ORI       
00BD:001F 2802            LDA       L2
00BD:0021 8C5906          LDIXUBC.P 3
00BD:0024 04              ORI       
00BD:0025 2400            STI       L0
00BD:0027 6400            RETC      0i
	Avg B/tk=0.854166
190: PDJPG_MarkerAPP14(L123Ph)i:
00BE:0000 2801            LDA       L1
00BE:0002 8CE13D04        LEARBC.P  2
00BE:0006 2901            STA       L1
00BE:0008 6400            RETC      0i
	Avg B/tk=0.909090
191: PDJPG_MarkerAPPN(L123Ph)i:
00BF:0000 6400            RETC      0i
	Avg B/tk=0.285714
192: PDJPG_DecodeCtxInner(L123PhiPiPi)i:
00C0:0000 2828            LDA       L40
00C0:0002 8CE159          LDDRUB.P  
00C0:0005 6881FE          CMPIC     255
00C0:0008 318016          JNE       0x0016
00C0:000B 2828            LDA       L40
00C0:000D 8C5902          LDIXUBC.P 1
00C0:0010 6881B0          CMPIC     216
00C0:0013 308004          JEQ       0x0018
00C0:0016 6410            RETC      -1i
00C0:0018 AC              PUSHI     
00C0:0019 8F9381          STOSL     L39, G1(PDJPG_Context/jpg_is420)
00C0:001C AC              PUSHI     
00C0:001D 8F9382          STOSL     L39, G2(PDJPG_Context/jpg_rdct)
00C0:0020 2A44            LDC       Str:39B="PDJPG_DecodeCtxInner: Enter\n"
00C0:0022 AB              PUSHA     
00C0:0023 7003            CALLG     G3(printf)
00C0:0025 E11CC46000      MVIC      L35, 0
00C0:002A 7B              LABEL     
00C0:002B 6B91A9          CMPILL    L35, L41
00C0:002E 3583F0          JGE       0x0229
00C0:0031 2828            LDA       L40
00C0:0033 2023            LDI       L35
00C0:0035 8C49            LDIXUB.P  
00C0:0037 6881FE          CMPIC     255
00C0:003A 308006          JEQ       0x0040
00C0:003D 3783C8          JMP       0x0224
00C0:0040 2828            LDA       L40
00C0:0042 E1C0C46001      ADDISLC   L35, 1
00C0:0047 8C49            LDIXUB.P  
00C0:0049 6800            CMPIC     0
00C0:004B 31800A          JNE       0x0053
00C0:004E 6E23            INCIL     L35
00C0:0050 3783A2          JMP       0x0224
00C0:0053 2828            LDA       L40
00C0:0055 E1C0C46001      ADDISLC   L35, 1
00C0:005A 8C49            LDIXUB.P  
00C0:005C 6881FE          CMPIC     255
00C0:005F 31800A          JNE       0x0067
00C0:0062 6E23            INCIL     L35
00C0:0064 37837A          JMP       0x0224
00C0:0067 2828            LDA       L40
00C0:0069 E1C0C46001      ADDISLC   L35, 1
00C0:006E 8C49            LDIXUB.P  
00C0:0070 6881B0          CMPIC     216
00C0:0073 31800A          JNE       0x007B
00C0:0076 6E23            INCIL     L35
00C0:0078 378352          JMP       0x0224
00C0:007B 2828            LDA       L40
00C0:007D E1C0C46001      ADDISLC   L35, 1
00C0:0082 8C49            LDIXUB.P  
00C0:0084 B180C0          SUBIC     192
00C0:0087 2424            STI       L36
00C0:0089 6AC48000        CMPILC    L36, 0
00C0:008D 35800C          JGE       0x0096
00C0:0090 E11CC4807E      MVIC      L36, 63
00C0:0095 7B              LABEL     
00C0:0096 2828            LDA       L40
00C0:0098 E1C0C46001      ADDISLC   L35, 1
00C0:009D 8C49            LDIXUB.P  
00C0:009F 6881B6          CMPIC     219
00C0:00A2 31802C          JNE       0x00BB
00C0:00A5 2A64            LDC       Str:3B8="PDJPG_DecodeCtxInner: DQT\n"
00C0:00A7 AB              PUSHA     
00C0:00A8 7003            CALLG     G3(printf)
00C0:00AA 2827            LDA       L39
00C0:00AC 2828            LDA       L40
00C0:00AE 2023            LDI       L35
00C0:00B0 8CE135          LEARB.P   
00C0:00B3 8CE13D04        LEARBC.P  2
00C0:00B7 7007            CALLG     G7(PDJPG_MarkerDQT)
00C0:00B9 A0              POPI      
00C0:00BA 7B              LABEL     
00C0:00BB 2828            LDA       L40
00C0:00BD E1C0C46001      ADDISLC   L35, 1
00C0:00C2 8C49            LDIXUB.P  
00C0:00C4 688188          CMPIC     196
00C0:00C7 31802E          JNE       0x00E1
00C0:00CA 2A8094          LDC       Str:3D3="PDJPG_DecodeCtxInner: DHT\n"
00C0:00CD AB              PUSHA     
00C0:00CE 7003            CALLG     G3(printf)
00C0:00D0 2827            LDA       L39
00C0:00D2 2828            LDA       L40
00C0:00D4 2023            LDI       L35
00C0:00D6 8CE135          LEARB.P   
00C0:00D9 8CE13D04        LEARBC.P  2
00C0:00DD 700A            CALLG     G10(PDJPG_MarkerDHT)
00C0:00DF A0              POPI      
00C0:00E0 7B              LABEL     
00C0:00E1 2828            LDA       L40
00C0:00E3 E1C0C46001      ADDISLC   L35, 1
00C0:00E8 8C49            LDIXUB.P  
00C0:00EA 688180          CMPIC     192
00C0:00ED 31802E          JNE       0x0107
00C0:00F0 2A80C4          LDC       Str:3EE="PDJPG_DecodeCtxInner: SOF0\n"
00C0:00F3 AB              PUSHA     
00C0:00F4 7003            CALLG     G3(printf)
00C0:00F6 2827            LDA       L39
00C0:00F8 2828            LDA       L40
00C0:00FA 2023            LDI       L35
00C0:00FC 8CE135          LEARB.P   
00C0:00FF 8CE13D04        LEARBC.P  2
00C0:0103 700D            CALLG     G13(PDJPG_MarkerSOF0)
00C0:0105 A0              POPI      
00C0:0106 7B              LABEL     
00C0:0107 2828            LDA       L40
00C0:0109 E1C0C46001      ADDISLC   L35, 1
00C0:010E 8C49            LDIXUB.P  
00C0:0110 6881B4          CMPIC     218
00C0:0113 31804E          JNE       0x013D
00C0:0116 2A80F4          LDC       Str:40A="PDJPG_DecodeCtxInner: SOS\n"
00C0:0119 AB              PUSHA     
00C0:011A 7003            CALLG     G3(printf)
00C0:011C 2827            LDA       L39
00C0:011E 2828            LDA       L40
00C0:0120 2023            LDI       L35
00C0:0122 8CE135          LEARB.P   
00C0:0125 8CE13D04        LEARBC.P  2
00C0:0129 7010            CALLG     G16(PDJPG_MarkerSOS)
00C0:012B 2424            STI       L36
00C0:012D 6AC48000        CMPILC    L36, 0
00C0:0131 34800C          JLE       0x013A
00C0:0134 E1E8C8D1A4      ADDILLL   L35, L35, L36
00C0:0139 7B              LABEL     
00C0:013A 3781CE          JMP       0x0224
00C0:013D 2828            LDA       L40
00C0:013F E1C0C46001      ADDISLC   L35, 1
00C0:0144 8C49            LDIXUB.P  
00C0:0146 6881C0          CMPIC     224
00C0:0149 32818C          JLT       0x0212
00C0:014C 2828            LDA       L40
00C0:014E E1C0C46001      ADDISLC   L35, 1
00C0:0153 8C49            LDIXUB.P  
00C0:0155 6881DE          CMPIC     239
00C0:0158 33816E          JGT       0x0212
00C0:015B 2A8134          LDC       Str:425="PDJPG_DecodeCtxInner: APP%d\n"
00C0:015E 8914            NEWARR    a:1
00C0:0160 2828            LDA       L40
00C0:0162 E1C0C46001      ADDISLC   L35, 1
00C0:0167 8C49            LDIXUB.P  
00C0:0169 B180E0          SUBIC     224
00C0:016C E110            CVTI2AA   
00C0:016E E1AC00          DSTIXAC   0
00C0:0171 7003            CALLG     G3(printf)
00C0:0173 2828            LDA       L40
00C0:0175 E1C0C46001      ADDISLC   L35, 1
00C0:017A 8C49            LDIXUB.P  
00C0:017C 6881C0          CMPIC     224
00C0:017F 318022          JNE       0x0193
00C0:0182 2827            LDA       L39
00C0:0184 2828            LDA       L40
00C0:0186 2023            LDI       L35
00C0:0188 8CE135          LEARB.P   
00C0:018B 8CE13D04        LEARBC.P  2
00C0:018F 7014            CALLG     G20(PDJPG_MarkerAPP0)
00C0:0191 A0              POPI      
00C0:0192 7B              LABEL     
00C0:0193 2828            LDA       L40
00C0:0195 E1C0C46001      ADDISLC   L35, 1
00C0:019A 8C49            LDIXUB.P  
00C0:019C 6881D6          CMPIC     235
00C0:019F 318022          JNE       0x01B3
00C0:01A2 2827            LDA       L39
00C0:01A4 2828            LDA       L40
00C0:01A6 2023            LDI       L35
00C0:01A8 8CE135          LEARB.P   
00C0:01AB 8CE13D04        LEARBC.P  2
00C0:01AF 7016            CALLG     G22(PDJPG_MarkerAPP11)
00C0:01B1 A0              POPI      
00C0:01B2 7B              LABEL     
00C0:01B3 2828            LDA       L40
00C0:01B5 E1C0C46001      ADDISLC   L35, 1
00C0:01BA 8C49            LDIXUB.P  
00C0:01BC 6881D8          CMPIC     236
00C0:01BF 318022          JNE       0x01D3
00C0:01C2 2827            LDA       L39
00C0:01C4 2828            LDA       L40
00C0:01C6 2023            LDI       L35
00C0:01C8 8CE135          LEARB.P   
00C0:01CB 8CE13D04        LEARBC.P  2
00C0:01CF 7018            CALLG     G24(PDJPG_MarkerAPP12)
00C0:01D1 A0              POPI      
00C0:01D2 7B              LABEL     
00C0:01D3 2828            LDA       L40
00C0:01D5 E1C0C46001      ADDISLC   L35, 1
00C0:01DA 8C49            LDIXUB.P  
00C0:01DC 6881DC          CMPIC     238
00C0:01DF 318022          JNE       0x01F3
00C0:01E2 2827            LDA       L39
00C0:01E4 2828            LDA       L40
00C0:01E6 2023            LDI       L35
00C0:01E8 8CE135          LEARB.P   
00C0:01EB 8CE13D04        LEARBC.P  2
00C0:01EF 701A            CALLG     G26(PDJPG_MarkerAPP14)
00C0:01F1 A0              POPI      
00C0:01F2 7B              LABEL     
00C0:01F3 2828            LDA       L40
00C0:01F5 E1C0C46002      ADDISLC   L35, 2
00C0:01FA 8C49            LDIXUB.P  
00C0:01FC B610            SHLIC     8
00C0:01FE 2828            LDA       L40
00C0:0200 E1C0C46003      ADDISLC   L35, 3
00C0:0205 8C49            LDIXUB.P  
00C0:0207 04              ORI       
00C0:0208 2424            STI       L36
00C0:020A E1E8C8D1A4      ADDILLL   L35, L35, L36
00C0:020F 378024          JMP       0x0224
00C0:0212 2828            LDA       L40
00C0:0214 E1C0C46001      ADDISLC   L35, 1
00C0:0219 8C49            LDIXUB.P  
00C0:021B 6881B2          CMPIC     217
00C0:021E 318006          JNE       0x0224
00C0:0221 37800A          JMP       0x0229
00C0:0224 6E23            INCIL     L35
00C0:0226 3783FB          JMP       0x002B
00C0:0229 2A81C4          LDC       Str:442="PDJPG_DecodeCtxInner: Exit\n"
00C0:022C AB              PUSHA     
00C0:022D 7003            CALLG     G3(printf)
00C0:022F 2A81D4          LDC       Str:45E="Sz=%d x %d\n"
00C0:0232 8924            NEWARR    a:2
00C0:0234 8E939E          LDOSL     L39, G30(PDJPG_Context/xs)
00C0:0237 E110            CVTI2AA   
00C0:0239 E1AC00          DSTIXAC   0
00C0:023C 8E939F          LDOSL     L39, G31(PDJPG_Context/ys)
00C0:023F E110            CVTI2AA   
00C0:0241 E1AC02          DSTIXAC   1
00C0:0244 7003            CALLG     G3(printf)
00C0:0246 8E939E          LDOSL     L39, G30(PDJPG_Context/xs)
00C0:0249 E1B382A0        STDRPL    L42i
00C0:024D 8E939F          LDOSL     L39, G31(PDJPG_Context/ys)
00C0:0250 E1B382B0        STDRPL    L43i
00C0:0254 6400            RETC      0i
	Avg B/tk=1.049123
193: PDJPG_GetImageYUVA420(L123PhPhPhPhii)i:
00C1:0000 2005            LDI       L5
00C1:0002 8E00            LDOSL     L0, G0(PDJPG_Context/xs)
00C1:0004 38              CMPI      
00C1:0005 318010          JNE       0x0010
00C1:0008 2006            LDI       L6
00C1:000A 8E01            LDOSL     L0, G1(PDJPG_Context/ys)
00C1:000C 38              CMPI      
00C1:000D 308004          JEQ       0x0012
00C1:0010 6410            RETC      -1i
00C1:0012 8E02            LDOSL     L0, G2(PDJPG_Context/jpg_is420)
00C1:0014 3080A8          JEQ       0x006B
00C1:0017 2801            LDA       L1
00C1:0019 8E04            LDOSL     L0, G4(PDJPG_Context/jpg_sibuf)
00C1:001B E15C            LDDRA     
00C1:001D E1B0            CVTA2PTR  
00C1:001F E1CA56          MULISLL   L5, L6
00C1:0022 7003            CALLG     G3(memcpy)
00C1:0024 2802            LDA       L2
00C1:0026 8E04            LDOSL     L0, G4(PDJPG_Context/jpg_sibuf)
00C1:0028 5C02            LDIXAC    1
00C1:002A E1B0            CVTA2PTR  
00C1:002C E1C752          SARISLC   L5, 1
00C1:002F E1C762          SARISLC   L6, 1
00C1:0032 02              MULI      
00C1:0033 7003            CALLG     G3(memcpy)
00C1:0035 2803            LDA       L3
00C1:0037 8E04            LDOSL     L0, G4(PDJPG_Context/jpg_sibuf)
00C1:0039 5C04            LDIXAC    2
00C1:003B E1B0            CVTA2PTR  
00C1:003D E1C752          SARISLC   L5, 1
00C1:0040 E1C762          SARISLC   L6, 1
00C1:0043 02              MULI      
00C1:0044 7003            CALLG     G3(memcpy)
00C1:0046 E19E04803C      JEQNULLL  L4, 0x0069
00C1:004B 8E05            LDOSL     L0, G5(PDJPG_Context/jpg_sabuf)
00C1:004D E19C801C        JEQNULL   0x005F
00C1:0051 2804            LDA       L4
00C1:0053 8E05            LDOSL     L0, G5(PDJPG_Context/jpg_sabuf)
00C1:0055 E1B0            CVTA2PTR  
00C1:0057 E1CA56          MULISLL   L5, L6
00C1:005A 7003            CALLG     G3(memcpy)
00C1:005C 378014          JMP       0x0069
00C1:005F 2804            LDA       L4
00C1:0061 2A8FF6          LDC       255b
00C1:0064 E1CA56          MULISLL   L5, L6
00C1:0067 7006            CALLG     G6(memset)
00C1:0069 6400            RETC      0i
00C1:006B 6410            RETC      -1i
	Avg B/tk=0.726667
194: PDJPG_GetImagePlaneYUVA420(L123Phii)i:
00C2:0000 E1EA45          MULILLL   L4, L1, L1
00C2:0003 E1C742          SARISLC   L4, 1
00C2:0006 E1C752          SARISLC   L5, 1
00C2:0009 02              MULI      
00C2:000A 2401            STI       L1
00C2:000C 2802            LDA       L2
00C2:000E 2803            LDA       L3
00C2:0010 2803            LDA       L3
00C2:0012 2000            LDI       L0
00C2:0014 8CE135          LEARB.P   
00C2:0017 2803            LDA       L3
00C2:0019 2000            LDI       L0
00C2:001B 8CE135          LEARB.P   
00C2:001E 2001            LDI       L1
00C2:0020 8CE135          LEARB.P   
00C2:0023 2803            LDA       L3
00C2:0025 2000            LDI       L0
00C2:0027 8CE135          LEARB.P   
00C2:002A 2001            LDI       L1
00C2:002C 8CE135          LEARB.P   
00C2:002F 2001            LDI       L1
00C2:0031 8CE135          LEARB.P   
00C2:0034 2004            LDI       L4
00C2:0036 2005            LDI       L5
00C2:0038 7000            CALLG     G0(PDJPG_GetImageYUVA420)
00C2:003A A0              POPI      
00C2:003B 6400            RETC      0i
	Avg B/tk=1.089286
195: PDJPG_GetImageRGBA(L123Phii)i:
00C3:0000 8E9500          LDOSL     L42, G0(PDJPG_Context/jpg_is420)
00C3:0003 308636          JEQ       0x0321
00C3:0006 2A24            LDC       Str:46A="PDJPG_GetImageRGBA: Is 420\n"
00C3:0008 AB              PUSHA     
00C3:0009 7001            CALLG     G1(printf)
00C3:000B 7003            CALLG     G3(clock)
00C3:000D 2409            STI       L9
00C3:000F 8E9504          LDOSL     L42, G4(PDJPG_Context/jpg_sibuf)
00C3:0012 E15C            LDDRA     
00C3:0014 E1B0            CVTA2PTR  
00C3:0016 2900            STA       L0
00C3:0018 8E9504          LDOSL     L42, G4(PDJPG_Context/jpg_sibuf)
00C3:001B 5C02            LDIXAC    1
00C3:001D E1B0            CVTA2PTR  
00C3:001F 2901            STA       L1
00C3:0021 8E9504          LDOSL     L42, G4(PDJPG_Context/jpg_sibuf)
00C3:0024 5C04            LDIXAC    2
00C3:0026 E1B0            CVTA2PTR  
00C3:0028 2902            STA       L2
00C3:002A E1E791AC02      SARILLC   L35, L44, 1
00C3:002F E1E7922D02      SARILLC   L36, L45, 1
00C3:0034 E11CC42000      MVIC      L33, 0
00C3:0039 7B              LABEL     
00C3:003A 6B90A4          CMPILL    L33, L36
00C3:003D 358598          JGE       0x030C
00C3:0040 E1C99221        SUBISLL   L36, L33
00C3:0044 6D              DECI      
00C3:0045 2422            STI       L34
00C3:0047 2800            LDA       L0
00C3:0049 E1C6C44002      SHLISLC   L34, 1
00C3:004E B000            ADDIC     0
00C3:0050 BA2C            MULIL     L44
00C3:0052 8CE135          LEARB.P   
00C3:0055 2904            STA       L4
00C3:0057 2800            LDA       L0
00C3:0059 E1C6C44002      SHLISLC   L34, 1
00C3:005E 6C              INCI      
00C3:005F BA2C            MULIL     L44
00C3:0061 8CE135          LEARB.P   
00C3:0064 2903            STA       L3
00C3:0066 2801            LDA       L1
00C3:0068 E1CA9123        MULISLL   L34, L35
00C3:006C 8CE135          LEARB.P   
00C3:006F 2905            STA       L5
00C3:0071 2802            LDA       L2
00C3:0073 E1CA9123        MULISLL   L34, L35
00C3:0077 8CE135          LEARB.P   
00C3:007A 2906            STA       L6
00C3:007C 282B            LDA       L43
00C3:007E E1C6C42002      SHLISLC   L33, 1
00C3:0083 B000            ADDIC     0
00C3:0085 BA2C            MULIL     L44
00C3:0087 B604            SHLIC     2
00C3:0089 8CE135          LEARB.P   
00C3:008C 2907            STA       L7
00C3:008E 282B            LDA       L43
00C3:0090 E1C6C42002      SHLISLC   L33, 1
00C3:0095 6C              INCI      
00C3:0096 BA2C            MULIL     L44
00C3:0098 B604            SHLIC     2
00C3:009A 8CE135          LEARB.P   
00C3:009D 2908            STA       L8
00C3:009F E11CC40000      MVIC      L32, 0
00C3:00A4 7B              LABEL     
00C3:00A5 6B9023          CMPILL    L32, L35
00C3:00A8 3584B8          JGE       0x0307
00C3:00AB 2803            LDA       L3
00C3:00AD 8CE159          LDDRUB.P  
00C3:00B0 240C            STI       L12
00C3:00B2 2803            LDA       L3
00C3:00B4 8C5902          LDIXUBC.P 1
00C3:00B7 240D            STI       L13
00C3:00B9 2803            LDA       L3
00C3:00BB 8CE13D04        LEARBC.P  2
00C3:00BF 2903            STA       L3
00C3:00C1 2804            LDA       L4
00C3:00C3 8CE159          LDDRUB.P  
00C3:00C6 240E            STI       L14
00C3:00C8 2804            LDA       L4
00C3:00CA 8C5902          LDIXUBC.P 1
00C3:00CD 240F            STI       L15
00C3:00CF 2804            LDA       L4
00C3:00D1 8CE13D04        LEARBC.P  2
00C3:00D5 2904            STA       L4
00C3:00D7 2805            LDA       L5
00C3:00D9 A9              DUPA      
00C3:00DA 8CE13D02        LEARBC.P  1
00C3:00DE 2905            STA       L5
00C3:00E0 8CE159          LDDRUB.P  
00C3:00E3 241C            STI       L28
00C3:00E5 2806            LDA       L6
00C3:00E7 A9              DUPA      
00C3:00E8 8CE13D02        LEARBC.P  1
00C3:00EC 2906            STA       L6
00C3:00EE 8CE159          LDDRUB.P  
00C3:00F1 241D            STI       L29
00C3:00F3 E1E18F1C8080    SUBILLC   L30, L28, 128
00C3:00F9 E1E18F9D8080    SUBILLC   L31, L29, 128
00C3:00FF E1E8C4061F      ADDILLL   L16, L12, L31
00C3:0104 2C8A0C          MVI       L20, L12
00C3:0107 E1E8C6061E      ADDILLL   L24, L12, L30
00C3:010C E1E8C4469F      ADDILLL   L17, L13, L31
00C3:0111 2C8A8D          MVI       L21, L13
00C3:0114 E1E8C6469E      ADDILLL   L25, L13, L30
00C3:0119 E1E8C4871F      ADDILLL   L18, L14, L31
00C3:011E 2C8B0E          MVI       L22, L14
00C3:0121 E1E8C6871E      ADDILLL   L26, L14, L30
00C3:0126 E1E8C4C79F      ADDILLL   L19, L15, L31
00C3:012B 2C8B8F          MVI       L23, L15
00C3:012E E1E8C6C79E      ADDILLL   L27, L15, L30
00C3:0133 E1CC8811        ORISLL    L16, L17
00C3:0137 BC12            ORIL      L18
00C3:0139 BC13            ORIL      L19
00C3:013B 2429            STI       L41
00C3:013D E1C7C52010      SARISLC   L41, 8
00C3:0142 3080B0          JEQ       0x019D
00C3:0145 6AA000          CMPILC    L16, 0
00C3:0148 35800A          JGE       0x0150
00C3:014B E11CA000        MVIC      L16, 0
00C3:014F 7B              LABEL     
00C3:0150 6AA200          CMPILC    L17, 0
00C3:0153 35800A          JGE       0x015B
00C3:0156 E11CA200        MVIC      L17, 0
00C3:015A 7B              LABEL     
00C3:015B 6AA400          CMPILC    L18, 0
00C3:015E 35800A          JGE       0x0166
00C3:0161 E11CA400        MVIC      L18, 0
00C3:0165 7B              LABEL     
00C3:0166 6AA600          CMPILC    L19, 0
00C3:0169 35800A          JGE       0x0171
00C3:016C E11CA600        MVIC      L19, 0
00C3:0170 7B              LABEL     
00C3:0171 6AA1FE          CMPILC    L16, 255
00C3:0174 34800A          JLE       0x017C
00C3:0177 E11CA1FE        MVIC      L16, 255
00C3:017B 7B              LABEL     
00C3:017C 6AA3FE          CMPILC    L17, 255
00C3:017F 34800A          JLE       0x0187
00C3:0182 E11CA3FE        MVIC      L17, 255
00C3:0186 7B              LABEL     
00C3:0187 6AA5FE          CMPILC    L18, 255
00C3:018A 34800A          JLE       0x0192
00C3:018D E11CA5FE        MVIC      L18, 255
00C3:0191 7B              LABEL     
00C3:0192 6AA7FE          CMPILC    L19, 255
00C3:0195 34800A          JLE       0x019D
00C3:0198 E11CA7FE        MVIC      L19, 255
00C3:019C 7B              LABEL     
00C3:019D E1CC8A15        ORISLL    L20, L21
00C3:01A1 BC16            ORIL      L22
00C3:01A3 BC17            ORIL      L23
00C3:01A5 2429            STI       L41
00C3:01A7 E1C7C52010      SARISLC   L41, 8
00C3:01AC 3080B0          JEQ       0x0207
00C3:01AF 6AA800          CMPILC    L20, 0
00C3:01B2 35800A          JGE       0x01BA
00C3:01B5 E11CA800        MVIC      L20, 0
00C3:01B9 7B              LABEL     
00C3:01BA 6AAA00          CMPILC    L21, 0
00C3:01BD 35800A          JGE       0x01C5
00C3:01C0 E11CAA00        MVIC      L21, 0
00C3:01C4 7B              LABEL     
00C3:01C5 6AAC00          CMPILC    L22, 0
00C3:01C8 35800A          JGE       0x01D0
00C3:01CB E11CAC00        MVIC      L22, 0
00C3:01CF 7B              LABEL     
00C3:01D0 6AAE00          CMPILC    L23, 0
00C3:01D3 35800A          JGE       0x01DB
00C3:01D6 E11CAE00        MVIC      L23, 0
00C3:01DA 7B              LABEL     
00C3:01DB 6AA9FE          CMPILC    L20, 255
00C3:01DE 34800A          JLE       0x01E6
00C3:01E1 E11CA9FE        MVIC      L20, 255
00C3:01E5 7B              LABEL     
00C3:01E6 6AABFE          CMPILC    L21, 255
00C3:01E9 34800A          JLE       0x01F1
00C3:01EC E11CABFE        MVIC      L21, 255
00C3:01F0 7B              LABEL     
00C3:01F1 6AADFE          CMPILC    L22, 255
00C3:01F4 34800A          JLE       0x01FC
00C3:01F7 E11CADFE        MVIC      L22, 255
00C3:01FB 7B              LABEL     
00C3:01FC 6AAFFE          CMPILC    L23, 255
00C3:01FF 34800A          JLE       0x0207
00C3:0202 E11CAFFE        MVIC      L23, 255
00C3:0206 7B              LABEL     
00C3:0207 E1CC8C19        ORISLL    L24, L25
00C3:020B BC1A            ORIL      L26
00C3:020D BC1B            ORIL      L27
00C3:020F 2429            STI       L41
00C3:0211 E1C7C52010      SARISLC   L41, 8
00C3:0216 3080B0          JEQ       0x0271
00C3:0219 6AB000          CMPILC    L24, 0
00C3:021C 35800A          JGE       0x0224
00C3:021F E11CB000        MVIC      L24, 0
00C3:0223 7B              LABEL     
00C3:0224 6AB200          CMPILC    L25, 0
00C3:0227 35800A          JGE       0x022F
00C3:022A E11CB200        MVIC      L25, 0
00C3:022E 7B              LABEL     
00C3:022F 6AB400          CMPILC    L26, 0
00C3:0232 35800A          JGE       0x023A
00C3:0235 E11CB400        MVIC      L26, 0
00C3:0239 7B              LABEL     
00C3:023A 6AB600          CMPILC    L27, 0
00C3:023D 35800A          JGE       0x0245
00C3:0240 E11CB600        MVIC      L27, 0
00C3:0244 7B              LABEL     
00C3:0245 6AB1FE          CMPILC    L24, 255
00C3:0248 34800A          JLE       0x0250
00C3:024B E11CB1FE        MVIC      L24, 255
00C3:024F 7B              LABEL     
00C3:0250 6AB3FE          CMPILC    L25, 255
00C3:0253 34800A          JLE       0x025B
00C3:0256 E11CB3FE        MVIC      L25, 255
00C3:025A 7B              LABEL     
00C3:025B 6AB5FE          CMPILC    L26, 255
00C3:025E 34800A          JLE       0x0266
00C3:0261 E11CB5FE        MVIC      L26, 255
00C3:0265 7B              LABEL     
00C3:0266 6AB7FE          CMPILC    L27, 255
00C3:0269 34800A          JLE       0x0271
00C3:026C E11CB7FE        MVIC      L27, 255
00C3:0270 7B              LABEL     
00C3:0271 2010            LDI       L16
00C3:0273 9D              CVTUB2I   
00C3:0274 2807            LDA       L7
00C3:0276 8CE15E          STDRB.P   
00C3:0279 2014            LDI       L20
00C3:027B 9D              CVTUB2I   
00C3:027C 2807            LDA       L7
00C3:027E 8C5E02          STIXBC.P  1
00C3:0281 2018            LDI       L24
00C3:0283 9D              CVTUB2I   
00C3:0284 2807            LDA       L7
00C3:0286 8C5E04          STIXBC.P  2
00C3:0289 2A8FF6          LDC       255b
00C3:028C 2807            LDA       L7
00C3:028E 8C5E06          STIXBC.P  3
00C3:0291 2011            LDI       L17
00C3:0293 9D              CVTUB2I   
00C3:0294 2807            LDA       L7
00C3:0296 8C5E08          STIXBC.P  4
00C3:0299 2015            LDI       L21
00C3:029B 9D              CVTUB2I   
00C3:029C 2807            LDA       L7
00C3:029E 8C5E0A          STIXBC.P  5
00C3:02A1 2019            LDI       L25
00C3:02A3 9D              CVTUB2I   
00C3:02A4 2807            LDA       L7
00C3:02A6 8C5E0C          STIXBC.P  6
00C3:02A9 2A8FF6          LDC       255b
00C3:02AC 2807            LDA       L7
00C3:02AE 8C5E0E          STIXBC.P  7
00C3:02B1 2012            LDI       L18
00C3:02B3 9D              CVTUB2I   
00C3:02B4 2808            LDA       L8
00C3:02B6 8CE15E          STDRB.P   
00C3:02B9 2016            LDI       L22
00C3:02BB 9D              CVTUB2I   
00C3:02BC 2808            LDA       L8
00C3:02BE 8C5E02          STIXBC.P  1
00C3:02C1 201A            LDI       L26
00C3:02C3 9D              CVTUB2I   
00C3:02C4 2808            LDA       L8
00C3:02C6 8C5E04          STIXBC.P  2
00C3:02C9 2A8FF6          LDC       255b
00C3:02CC 2808            LDA       L8
00C3:02CE 8C5E06          STIXBC.P  3
00C3:02D1 2013            LDI       L19
00C3:02D3 9D              CVTUB2I   
00C3:02D4 2808            LDA       L8
00C3:02D6 8C5E08          STIXBC.P  4
00C3:02D9 2017            LDI       L23
00C3:02DB 9D              CVTUB2I   
00C3:02DC 2808            LDA       L8
00C3:02DE 8C5E0A          STIXBC.P  5
00C3:02E1 201B            LDI       L27
00C3:02E3 9D              CVTUB2I   
00C3:02E4 2808            LDA       L8
00C3:02E6 8C5E0C          STIXBC.P  6
00C3:02E9 2A8FF6          LDC       255b
00C3:02EC 2808            LDA       L8
00C3:02EE 8C5E0E          STIXBC.P  7
00C3:02F1 2807            LDA       L7
00C3:02F3 8CE13D10        LEARBC.P  8
00C3:02F7 2907            STA       L7
00C3:02F9 2808            LDA       L8
00C3:02FB 8CE13D10        LEARBC.P  8
00C3:02FF 2908            STA       L8
00C3:0301 7B              LABEL     
00C3:0302 6E20            INCIL     L32
00C3:0304 3784C3          JMP       0x00A5
00C3:0307 6E21            INCIL     L33
00C3:0309 3785A3          JMP       0x003A
00C3:030C 7003            CALLG     G3(clock)
00C3:030E 240A            STI       L10
00C3:0310 2A54            LDC       Str:486="\tDt=%d\n"
00C3:0312 8914            NEWARR    a:1
00C3:0314 E1C98509        SUBISLL   L10, L9
00C3:0318 E110            CVTI2AA   
00C3:031A E1AC00          DSTIXAC   0
00C3:031D 7001            CALLG     G1(printf)
00C3:031F 6400            RETC      0i
00C3:0321 2A64            LDC       Str:48E="PDJPG_GetImageRGBA: Not 420\n"
00C3:0323 AB              PUSHA     
00C3:0324 7001            CALLG     G1(printf)
00C3:0326 6410            RETC      -1i
	Avg B/tk=0.958482
196: PDJPG_Free(Ph)v:
00C4:0000 79              RETV      
	Avg B/tk=0.499998
197: PDJPG_DecodeScanForComponentLayer(PhiCs)Ph:
00C5:0000 2A14            LDC       Str:4AB="PDJPG_DecodeScanForComponentLayer: Enter\n"
00C5:0002 AB              PUSHA     
00C5:0003 7000            CALLG     G0(printf)
00C5:0005 2B04            MVA       L0, L4
00C5:0007 2804            LDA       L4
00C5:0009 2005            LDI       L5
00C5:000B 8CE135          LEARB.P   
00C5:000E 2902            STA       L2
00C5:0010 7B              LABEL     
00C5:0011 2800            LDA       L0
00C5:0013 2802            LDA       L2
00C5:0015 8C3C            CMPA.P    
00C5:0017 358214          JGE       0x0124
00C5:001A E1B206          LDDRPL    L0b
00C5:001D 6881FE          CMPIC     255
00C5:0020 308040          JEQ       0x0043
00C5:0023 2800            LDA       L0
00C5:0025 2802            LDA       L2
00C5:0027 8C3C            CMPA.P    
00C5:0029 358028          JGE       0x0040
00C5:002C E1B206          LDDRPL    L0b
00C5:002F 6881FE          CMPIC     255
00C5:0032 308016          JEQ       0x0040
00C5:0035 2800            LDA       L0
00C5:0037 8CE13D02        LEARBC.P  1
00C5:003B 2900            STA       L0
00C5:003D 378039          JMP       0x0023
00C5:0040 378063          JMP       0x0011
00C5:0043 2800            LDA       L0
00C5:0045 8CE159          LDDRUB.P  
00C5:0048 6881FE          CMPIC     255
00C5:004B 31811C          JNE       0x00DC
00C5:004E 2800            LDA       L0
00C5:0050 8C5902          LDIXUBC.P 1
00C5:0053 6881D6          CMPIC     235
00C5:0056 318106          JNE       0x00DC
00C5:0059 2800            LDA       L0
00C5:005B 8C5904          LDIXUBC.P 2
00C5:005E B610            SHLIC     8
00C5:0060 2800            LDA       L0
00C5:0062 8C5906          LDIXUBC.P 3
00C5:0065 04              ORI       
00C5:0066 2403            STI       L3
00C5:0068 2800            LDA       L0
00C5:006A 2003            LDI       L3
00C5:006C 8CE135          LEARB.P   
00C5:006F 8CE13D04        LEARBC.P  2
00C5:0073 2901            STA       L1
00C5:0075 2800            LDA       L0
00C5:0077 8CE13D08        LEARBC.P  4
00C5:007B 2900            STA       L0
00C5:007D 2800            LDA       L0
00C5:007F E1B0            CVTA2PTR  
00C5:0081 2A44            LDC       Str:4D5="CompLayer"
00C5:0083 7003            CALLG     G3(strcmp)
00C5:0085 31808E          JNE       0x00CF
00C5:0088 2800            LDA       L0
00C5:008A 2800            LDA       L0
00C5:008C E1B0            CVTA2PTR  
00C5:008E 7005            CALLG     G5(strlen)
00C5:0090 6C              INCI      
00C5:0091 8CE135          LEARB.P   
00C5:0094 2900            STA       L0
00C5:0096 2800            LDA       L0
00C5:0098 E1B0            CVTA2PTR  
00C5:009A 2806            LDA       L6
00C5:009C E1B0            CVTA2PTR  
00C5:009E 7003            CALLG     G3(strcmp)
00C5:00A0 318036          JNE       0x00BE
00C5:00A3 2A64            LDC       Str:4DF="PDJPG_DecodeScanForComponentLayer: Found %s\n"
00C5:00A5 8914            NEWARR    a:1
00C5:00A7 2806            LDA       L6
00C5:00A9 E1AC00          DSTIXAC   0
00C5:00AC 7000            CALLG     G0(printf)
00C5:00AE 2800            LDA       L0
00C5:00B0 2800            LDA       L0
00C5:00B2 E1B0            CVTA2PTR  
00C5:00B4 7005            CALLG     G5(strlen)
00C5:00B6 6C              INCI      
00C5:00B7 8CE135          LEARB.P   
00C5:00BA 2900            STA       L0
00C5:00BC 7A14            RET2      L1a
00C5:00BE 2800            LDA       L0
00C5:00C0 2800            LDA       L0
00C5:00C2 E1B0            CVTA2PTR  
00C5:00C4 7005            CALLG     G5(strlen)
00C5:00C6 6C              INCI      
00C5:00C7 8CE135          LEARB.P   
00C5:00CA 2900            STA       L0
00C5:00CC 37817B          JMP       0x0011
00C5:00CF 2800            LDA       L0
00C5:00D1 E1C132          SUBISLC   L3, 2
00C5:00D4 8CE135          LEARB.P   
00C5:00D7 2900            STA       L0
00C5:00D9 378195          JMP       0x0011
00C5:00DC 2800            LDA       L0
00C5:00DE 8CE159          LDDRUB.P  
00C5:00E1 6881FE          CMPIC     255
00C5:00E4 318064          JNE       0x0119
00C5:00E7 2800            LDA       L0
00C5:00E9 8C5902          LDIXUBC.P 1
00C5:00EC 6881C0          CMPIC     224
00C5:00EF 32804E          JLT       0x0119
00C5:00F2 2800            LDA       L0
00C5:00F4 8C5902          LDIXUBC.P 1
00C5:00F7 6881DE          CMPIC     239
00C5:00FA 338038          JGT       0x0119
00C5:00FD 2800            LDA       L0
00C5:00FF 8C5904          LDIXUBC.P 2
00C5:0102 B610            SHLIC     8
00C5:0104 2800            LDA       L0
00C5:0106 8C5906          LDIXUBC.P 3
00C5:0109 04              ORI       
00C5:010A 2403            STI       L3
00C5:010C 2800            LDA       L0
00C5:010E E1C032          ADDISLC   L3, 2
00C5:0111 8CE135          LEARB.P   
00C5:0114 2900            STA       L0
00C5:0116 37820F          JMP       0x0011
00C5:0119 2800            LDA       L0
00C5:011B 8CE13D02        LEARBC.P  1
00C5:011F 2900            STA       L0
00C5:0121 378225          JMP       0x0011
00C5:0124 2A8094          LDC       Str:50C="PDJPG_DecodeScanForComponentLayer: Exit, No\n"
00C5:0127 AB              PUSHA     
00C5:0128 7000            CALLG     G0(printf)
00C5:012A AB              PUSHA     
00C5:012B 78              RETA      
	Avg B/tk=1.075269
198: pdjpg_hashBuffer(Phi)i:
00C6:0000 2B03            MVA       L0, L3
00C6:0002 2803            LDA       L3
00C6:0004 2004            LDI       L4
00C6:0006 8CE135          LEARB.P   
00C6:0009 2901            STA       L1
00C6:000B E11C20          MVIC      L2, 0
00C6:000E 7B              LABEL     
00C6:000F 2800            LDA       L0
00C6:0011 2801            LDA       L1
00C6:0013 8C3C            CMPA.P    
00C6:0015 358032          JGE       0x0031
00C6:0018 E1C2E021FFE2    MULISLC   L2, 65521
00C6:001E 2800            LDA       L0
00C6:0020 A9              DUPA      
00C6:0021 8CE13D02        LEARBC.P  1
00C6:0025 2900            STA       L0
00C6:0027 8CE159          LDDRUB.P  
00C6:002A 00              ADDI      
00C6:002B 6C              INCI      
00C6:002C 2402            STI       L2
00C6:002E 378043          JMP       0x000F
00C6:0031 7A20            RET2      L2i
	Avg B/tk=0.980769
199: PDJPG_DecodeBasic(L123PhiPiPi)i:
00C7:0000 E19F088004      JNENULLL  L8, 0x0007
00C7:0005 6410            RETC      -1i
00C7:0007 2809            LDA       L9
00C7:0009 200A            LDI       L10
00C7:000B 2A14            LDC       Str:539="Alpha"
00C7:000D 7000            CALLG     G0(PDJPG_DecodeScanForComponentLayer)
00C7:000F 2902            STA       L2
00C7:0011 E19E028092      JEQNULLL  L2, 0x005F
00C7:0016 2A34            LDC       Str:53F="PDJPG_DecodeBasic: Found Alpha\n"
00C7:0018 AB              PUSHA     
00C7:0019 7002            CALLG     G2(printf)
00C7:001B 200A            LDI       L10
00C7:001D 2802            LDA       L2
00C7:001F 2809            LDA       L9
00C7:0021 E1B406          DIFFPTR   b:0
00C7:0024 01              SUBI      
00C7:0025 2405            STI       L5
00C7:0027 2808            LDA       L8
00C7:0029 2802            LDA       L2
00C7:002B 2005            LDI       L5
00C7:002D 280B            LDA       L11
00C7:002F 280C            LDA       L12
00C7:0031 7004            CALLG     G4(PDJPG_DecodeLDatCtx)
00C7:0033 A0              POPI      
00C7:0034 8E8405          LDOSL     L8, G5(PDJPG_Context/xs)
00C7:0037 8E8406          LDOSL     L8, G6(PDJPG_Context/ys)
00C7:003A 02              MULI      
00C7:003B 2404            STI       L4
00C7:003D 8E8407          LDOSL     L8, G7(PDJPG_Context/jpg_sabuf)
00C7:0040 E19D8010        JNENULL   0x004C
00C7:0044 2004            LDI       L4
00C7:0046 8906            NEWARR    b:0
00C7:0048 8F8407          STOSL     L8, G7(PDJPG_Context/jpg_sabuf)
00C7:004B 7B              LABEL     
00C7:004C 8E8407          LDOSL     L8, G7(PDJPG_Context/jpg_sabuf)
00C7:004F E1B0            CVTA2PTR  
00C7:0051 8E8409          LDOSL     L8, G9(PDJPG_Context/jpg_sibuf)
00C7:0054 E15C            LDDRA     
00C7:0056 E1B0            CVTA2PTR  
00C7:0058 2004            LDI       L4
00C7:005A 7008            CALLG     G8(memcpy)
00C7:005C 378044          JMP       0x0081
00C7:005F 2A80A4          LDC       Str:55F="PDJPG_DecodeBasic: No Alpha\n"
00C7:0062 AB              PUSHA     
00C7:0063 7002            CALLG     G2(printf)
00C7:0065 8E8405          LDOSL     L8, G5(PDJPG_Context/xs)
00C7:0068 8E8406          LDOSL     L8, G6(PDJPG_Context/ys)
00C7:006B 02              MULI      
00C7:006C 2404            STI       L4
00C7:006E 8E8407          LDOSL     L8, G7(PDJPG_Context/jpg_sabuf)
00C7:0071 E19C8018        JEQNULL   0x0081
00C7:0075 8E8407          LDOSL     L8, G7(PDJPG_Context/jpg_sabuf)
00C7:0078 E1B0            CVTA2PTR  
00C7:007A 2A8FF6          LDC       255b
00C7:007D 2004            LDI       L4
00C7:007F 700B            CALLG     G11(memset)
00C7:0081 2809            LDA       L9
00C7:0083 200A            LDI       L10
00C7:0085 700C            CALLG     G12(pdjpg_hashBuffer)
00C7:0087 2406            STI       L6
00C7:0089 2A80D4          LDC       Str:57C="PDJPG_DecodeBasic: Base\n"
00C7:008C AB              PUSHA     
00C7:008D 7002            CALLG     G2(printf)
00C7:008F 2808            LDA       L8
00C7:0091 2809            LDA       L9
00C7:0093 200A            LDI       L10
00C7:0095 280B            LDA       L11
00C7:0097 280C            LDA       L12
00C7:0099 700E            CALLG     G14(PDJPG_DecodeCtxInner)
00C7:009B 2403            STI       L3
00C7:009D 2A80F4          LDC       Str:595="PDJPG_DecodeBasic: Base OK\n"
00C7:00A0 AB              PUSHA     
00C7:00A1 7002            CALLG     G2(printf)
00C7:00A3 2809            LDA       L9
00C7:00A5 200A            LDI       L10
00C7:00A7 700C            CALLG     G12(pdjpg_hashBuffer)
00C7:00A9 2407            STI       L7
00C7:00AB 2A8104          LDC       Str:5B1="Hash %08X %08X\n"
00C7:00AE 8924            NEWARR    a:2
00C7:00B0 2006            LDI       L6
00C7:00B2 E178            CVTUI2L   
00C7:00B4 E111            CVTL2AA   
00C7:00B6 E1AC00          DSTIXAC   0
00C7:00B9 2007            LDI       L7
00C7:00BB E178            CVTUI2L   
00C7:00BD E111            CVTL2AA   
00C7:00BF E1AC02          DSTIXAC   1
00C7:00C2 7002            CALLG     G2(printf)
00C7:00C4 7A30            RET2      L3i
	Avg B/tk=0.912442
200: PDJPG_EscapeDecodeBuffer(PhiPhi)i:
00C8:0000 2B04            MVA       L0, L4
00C8:0002 2804            LDA       L4
00C8:0004 2005            LDI       L5
00C8:0006 8CE135          LEARB.P   
00C8:0009 2902            STA       L2
00C8:000B 2B16            MVA       L1, L6
00C8:000D 2806            LDA       L6
00C8:000F 2007            LDI       L7
00C8:0011 8CE135          LEARB.P   
00C8:0014 2903            STA       L3
00C8:0016 7B              LABEL     
00C8:0017 2800            LDA       L0
00C8:0019 2802            LDA       L2
00C8:001B 8C3C            CMPA.P    
00C8:001D 3580A6          JGE       0x0073
00C8:0020 2801            LDA       L1
00C8:0022 2803            LDA       L3
00C8:0024 8C3C            CMPA.P    
00C8:0026 358094          JGE       0x0073
00C8:0029 2800            LDA       L0
00C8:002B 8CE159          LDDRUB.P  
00C8:002E 6881FE          CMPIC     255
00C8:0031 318048          JNE       0x0058
00C8:0034 2800            LDA       L0
00C8:0036 8C5902          LDIXUBC.P 1
00C8:0039 6800            CMPIC     0
00C8:003B 318034          JNE       0x0058
00C8:003E 2800            LDA       L0
00C8:0040 8CE13D04        LEARBC.P  2
00C8:0044 2900            STA       L0
00C8:0046 2A8FF6          LDC       255b
00C8:0049 2801            LDA       L1
00C8:004B A9              DUPA      
00C8:004C 8CE13D02        LEARBC.P  1
00C8:0050 2901            STA       L1
00C8:0052 8CE15E          STDRB.P   
00C8:0055 378081          JMP       0x0017
00C8:0058 2800            LDA       L0
00C8:005A A9              DUPA      
00C8:005B 8CE13D02        LEARBC.P  1
00C8:005F 2900            STA       L0
00C8:0061 8CE159          LDDRUB.P  
00C8:0064 2801            LDA       L1
00C8:0066 A9              DUPA      
00C8:0067 8CE13D02        LEARBC.P  1
00C8:006B 2901            STA       L1
00C8:006D 8CE15E          STDRB.P   
00C8:0070 3780B7          JMP       0x0017
00C8:0073 2801            LDA       L1
00C8:0075 2803            LDA       L3
00C8:0077 8C3C            CMPA.P    
00C8:0079 328004          JLT       0x007E
00C8:007C 6410            RETC      -1i
00C8:007E 2801            LDA       L1
00C8:0080 2806            LDA       L6
00C8:0082 E1B406          DIFFPTR   b:0
00C8:0085 74              RETI      
	Avg B/tk=1.229358
201: PDJPG_EscapeDecodeSingleBuffer(Phi)i:
00C9:0000 2B04            MVA       L0, L4
00C9:0002 2804            LDA       L4
00C9:0004 2005            LDI       L5
00C9:0006 8CE135          LEARB.P   
00C9:0009 2902            STA       L2
00C9:000B 2B14            MVA       L1, L4
00C9:000D 2804            LDA       L4
00C9:000F 2005            LDI       L5
00C9:0011 8CE135          LEARB.P   
00C9:0014 2903            STA       L3
00C9:0016 7B              LABEL     
00C9:0017 2800            LDA       L0
00C9:0019 2802            LDA       L2
00C9:001B 8C3C            CMPA.P    
00C9:001D 3580A6          JGE       0x0073
00C9:0020 2801            LDA       L1
00C9:0022 2803            LDA       L3
00C9:0024 8C3C            CMPA.P    
00C9:0026 358094          JGE       0x0073
00C9:0029 2800            LDA       L0
00C9:002B 8CE159          LDDRUB.P  
00C9:002E 6881FE          CMPIC     255
00C9:0031 318048          JNE       0x0058
00C9:0034 2800            LDA       L0
00C9:0036 8C5902          LDIXUBC.P 1
00C9:0039 6800            CMPIC     0
00C9:003B 318034          JNE       0x0058
00C9:003E 2800            LDA       L0
00C9:0040 8CE13D04        LEARBC.P  2
00C9:0044 2900            STA       L0
00C9:0046 2A8FF6          LDC       255b
00C9:0049 2801            LDA       L1
00C9:004B A9              DUPA      
00C9:004C 8CE13D02        LEARBC.P  1
00C9:0050 2901            STA       L1
00C9:0052 8CE15E          STDRB.P   
00C9:0055 378081          JMP       0x0017
00C9:0058 2800            LDA       L0
00C9:005A A9              DUPA      
00C9:005B 8CE13D02        LEARBC.P  1
00C9:005F 2900            STA       L0
00C9:0061 8CE159          LDDRUB.P  
00C9:0064 2801            LDA       L1
00C9:0066 A9              DUPA      
00C9:0067 8CE13D02        LEARBC.P  1
00C9:006B 2901            STA       L1
00C9:006D 8CE15E          STDRB.P   
00C9:0070 3780B7          JMP       0x0017
00C9:0073 2801            LDA       L1
00C9:0075 2803            LDA       L3
00C9:0077 8C3C            CMPA.P    
00C9:0079 328004          JLT       0x007E
00C9:007C 6410            RETC      -1i
00C9:007E 2801            LDA       L1
00C9:0080 2804            LDA       L4
00C9:0082 E1B406          DIFFPTR   b:0
00C9:0085 74              RETI      
	Avg B/tk=1.229358
202: PDJPG_DecodeLDatCtx(L123PhiPiPi)i:
00CA:0000 280A            LDA       L10
00CA:0002 8CE159          LDDRUB.P  
00CA:0005 6881FE          CMPIC     255
00CA:0008 31806E          JNE       0x0042
00CA:000B 280A            LDA       L10
00CA:000D 8C5902          LDIXUBC.P 1
00CA:0010 6881D8          CMPIC     236
00CA:0013 318058          JNE       0x0042
00CA:0016 280A            LDA       L10
00CA:0018 8C5908          LDIXUBC.P 4
00CA:001B 688098          CMPIC     76
00CA:001E 318042          JNE       0x0042
00CA:0021 280A            LDA       L10
00CA:0023 8C590A          LDIXUBC.P 5
00CA:0026 688088          CMPIC     68
00CA:0029 31802C          JNE       0x0042
00CA:002C 280A            LDA       L10
00CA:002E 8C590C          LDIXUBC.P 6
00CA:0031 688082          CMPIC     65
00CA:0034 318016          JNE       0x0042
00CA:0037 280A            LDA       L10
00CA:0039 8C590E          LDIXUBC.P 7
00CA:003C 6880A8          CMPIC     84
00CA:003F 308022          JEQ       0x0053
00CA:0042 2809            LDA       L9
00CA:0044 280A            LDA       L10
00CA:0046 200B            LDI       L11
00CA:0048 280C            LDA       L12
00CA:004A 280D            LDA       L13
00CA:004C 7001            CALLG     G1(PDJPG_DecodeCtxInner)
00CA:004E 2408            STI       L8
00CA:0050 7A8080          RET2      L8i
00CA:0053 2B3A            MVA       L3, L10
00CA:0055 E11C50          MVIC      L5, 0
00CA:0058 7B              LABEL     
00CA:0059 2803            LDA       L3
00CA:005B 8CE159          LDDRUB.P  
00CA:005E 6881FE          CMPIC     255
00CA:0061 3180AE          JNE       0x00BB
00CA:0064 2803            LDA       L3
00CA:0066 8C5902          LDIXUBC.P 1
00CA:0069 6881D8          CMPIC     236
00CA:006C 318098          JNE       0x00BB
00CA:006F 2803            LDA       L3
00CA:0071 8C5908          LDIXUBC.P 4
00CA:0074 688098          CMPIC     76
00CA:0077 318082          JNE       0x00BB
00CA:007A 2803            LDA       L3
00CA:007C 8C590A          LDIXUBC.P 5
00CA:007F 688088          CMPIC     68
00CA:0082 31806C          JNE       0x00BB
00CA:0085 2803            LDA       L3
00CA:0087 8C590C          LDIXUBC.P 6
00CA:008A 688082          CMPIC     65
00CA:008D 318056          JNE       0x00BB
00CA:0090 2803            LDA       L3
00CA:0092 8C590E          LDIXUBC.P 7
00CA:0095 6880A8          CMPIC     84
00CA:0098 318040          JNE       0x00BB
00CA:009B 2803            LDA       L3
00CA:009D 8C5904          LDIXUBC.P 2
00CA:00A0 B610            SHLIC     8
00CA:00A2 2803            LDA       L3
00CA:00A4 8C5906          LDIXUBC.P 3
00CA:00A7 04              ORI       
00CA:00A8 2406            STI       L6
00CA:00AA E1E88A56        ADDILLL   L5, L5, L6
00CA:00AE 2803            LDA       L3
00CA:00B0 E1C062          ADDISLC   L6, 2
00CA:00B3 8CE135          LEARB.P   
00CA:00B6 2903            STA       L3
00CA:00B8 3780C3          JMP       0x0059
00CA:00BB 2005            LDI       L5
00CA:00BD 8906            NEWARR    b:0
00CA:00BF 2900            STA       L0
00CA:00C1 2800            LDA       L0
00CA:00C3 E1B0            CVTA2PTR  
00CA:00C5 2901            STA       L1
00CA:00C7 2B3A            MVA       L3, L10
00CA:00C9 2B41            MVA       L4, L1
00CA:00CB 7B              LABEL     
00CA:00CC 2803            LDA       L3
00CA:00CE 8CE159          LDDRUB.P  
00CA:00D1 6881FE          CMPIC     255
00CA:00D4 3180D4          JNE       0x0141
00CA:00D7 2803            LDA       L3
00CA:00D9 8C5902          LDIXUBC.P 1
00CA:00DC 6881D8          CMPIC     236
00CA:00DF 3180BE          JNE       0x0141
00CA:00E2 2803            LDA       L3
00CA:00E4 8C5908          LDIXUBC.P 4
00CA:00E7 688098          CMPIC     76
00CA:00EA 3180A8          JNE       0x0141
00CA:00ED 2803            LDA       L3
00CA:00EF 8C590A          LDIXUBC.P 5
00CA:00F2 688088          CMPIC     68
00CA:00F5 318092          JNE       0x0141
00CA:00F8 2803            LDA       L3
00CA:00FA 8C590C          LDIXUBC.P 6
00CA:00FD 688082          CMPIC     65
00CA:0100 31807C          JNE       0x0141
00CA:0103 2803            LDA       L3
00CA:0105 8C590E          LDIXUBC.P 7
00CA:0108 6880A8          CMPIC     84
00CA:010B 318066          JNE       0x0141
00CA:010E 2803            LDA       L3
00CA:0110 8C5904          LDIXUBC.P 2
00CA:0113 B610            SHLIC     8
00CA:0115 2803            LDA       L3
00CA:0117 8C5906          LDIXUBC.P 3
00CA:011A 04              ORI       
00CA:011B 2406            STI       L6
00CA:011D 2804            LDA       L4
00CA:011F 2803            LDA       L3
00CA:0121 8CE13D10        LEARBC.P  8
00CA:0125 E1C166          SUBISLC   L6, 6
00CA:0128 7002            CALLG     G2(memcpy)
00CA:012A 2803            LDA       L3
00CA:012C E1C062          ADDISLC   L6, 2
00CA:012F 8CE135          LEARB.P   
00CA:0132 2903            STA       L3
00CA:0134 2804            LDA       L4
00CA:0136 E1C166          SUBISLC   L6, 6
00CA:0139 8CE135          LEARB.P   
00CA:013C 2904            STA       L4
00CA:013E 3780E9          JMP       0x00CC
00CA:0141 2804            LDA       L4
00CA:0143 2801            LDA       L1
00CA:0145 E1B406          DIFFPTR   b:0
00CA:0148 2406            STI       L6
00CA:014A 2801            LDA       L1
00CA:014C 2006            LDI       L6
00CA:014E 7003            CALLG     G3(PDJPG_EscapeDecodeSingleBuffer)
00CA:0150 2406            STI       L6
00CA:0152 2809            LDA       L9
00CA:0154 2801            LDA       L1
00CA:0156 2006            LDI       L6
00CA:0158 280C            LDA       L12
00CA:015A 280D            LDA       L13
00CA:015C 7001            CALLG     G1(PDJPG_DecodeCtxInner)
00CA:015E 2408            STI       L8
00CA:0160 2800            LDA       L0
00CA:0162 8A              DELOBJ    
00CA:0163 7A8080          RET2      L8i
	Avg B/tk=0.994444
203: PDJPG_FlattenTGA(PhPhii)i:
00CB:0000 2B05            MVA       L0, L5
00CB:0002 AC              PUSHI     
00CB:0003 2800            LDA       L0
00CB:0005 8CE15E          STDRB.P   
00CB:0008 AC              PUSHI     
00CB:0009 2800            LDA       L0
00CB:000B 8C5E02          STIXBC.P  1
00CB:000E 2A26            LDC       2b
00CB:0010 2800            LDA       L0
00CB:0012 8C5E04          STIXBC.P  2
00CB:0015 AC              PUSHI     
00CB:0016 2800            LDA       L0
00CB:0018 8C5E06          STIXBC.P  3
00CB:001B AC              PUSHI     
00CB:001C 2800            LDA       L0
00CB:001E 8C5E08          STIXBC.P  4
00CB:0021 AC              PUSHI     
00CB:0022 2800            LDA       L0
00CB:0024 8C5E0A          STIXBC.P  5
00CB:0027 AC              PUSHI     
00CB:0028 2800            LDA       L0
00CB:002A 8C5E0C          STIXBC.P  6
00CB:002D AC              PUSHI     
00CB:002E 2800            LDA       L0
00CB:0030 8C5E0E          STIXBC.P  7
00CB:0033 AC              PUSHI     
00CB:0034 2800            LDA       L0
00CB:0036 8C5E10          STIXBC.P  8
00CB:0039 AC              PUSHI     
00CB:003A 2800            LDA       L0
00CB:003C 8C5E12          STIXBC.P  9
00CB:003F AC              PUSHI     
00CB:0040 2800            LDA       L0
00CB:0042 8C5E14          STIXBC.P  10
00CB:0045 AC              PUSHI     
00CB:0046 2800            LDA       L0
00CB:0048 8C5E16          STIXBC.P  11
00CB:004B 2007            LDI       L7
00CB:004D 9D              CVTUB2I   
00CB:004E 2800            LDA       L0
00CB:0050 8C5E18          STIXBC.P  12
00CB:0053 E1C78E10        SARISLC   L7, 8
00CB:0057 9D              CVTUB2I   
00CB:0058 2800            LDA       L0
00CB:005A 8C5E1A          STIXBC.P  13
00CB:005D 2008            LDI       L8
00CB:005F 9D              CVTUB2I   
00CB:0060 2800            LDA       L0
00CB:0062 8C5E1C          STIXBC.P  14
00CB:0065 E1C79010        SARISLC   L8, 8
00CB:0069 9D              CVTUB2I   
00CB:006A 2800            LDA       L0
00CB:006C 8C5E1E          STIXBC.P  15
00CB:006F 2A8186          LDC       24b
00CB:0072 2800            LDA       L0
00CB:0074 8C5E20          STIXBC.P  16
00CB:0077 AC              PUSHI     
00CB:0078 2800            LDA       L0
00CB:007A 8C5E22          STIXBC.P  17
00CB:007D 2A14            LDC       Str:5C1="PDJPG_FlattenTGA: %d x %d\n"
00CB:007F 8924            NEWARR    a:2
00CB:0081 2007            LDI       L7
00CB:0083 E110            CVTI2AA   
00CB:0085 E1AC00          DSTIXAC   0
00CB:0088 2008            LDI       L8
00CB:008A E110            CVTI2AA   
00CB:008C E1AC02          DSTIXAC   1
00CB:008F 7000            CALLG     G0(printf)
00CB:0091 E1EA8878        MULILLL   L4, L7, L8
00CB:0095 E11C10          MVIC      L1, 0
00CB:0098 7B              LABEL     
00CB:0099 6B14            CMPILL    L1, L4
00CB:009B 358076          JGE       0x00D9
00CB:009E E1E22108        MULILLC   L2, L1, 4
00CB:00A2 E1C216          MULISLC   L1, 3
00CB:00A5 B012            ADDIC     18
00CB:00A7 2403            STI       L3
00CB:00A9 2806            LDA       L6
00CB:00AB E1C022          ADDISLC   L2, 2
00CB:00AE 8C49            LDIXUB.P  
00CB:00B0 2805            LDA       L5
00CB:00B2 E1C030          ADDISLC   L3, 0
00CB:00B5 8C4E            STIXB.P   
00CB:00B7 2806            LDA       L6
00CB:00B9 E1C021          ADDISLC   L2, 1
00CB:00BC 8C49            LDIXUB.P  
00CB:00BE 2805            LDA       L5
00CB:00C0 E1C031          ADDISLC   L3, 1
00CB:00C3 8C4E            STIXB.P   
00CB:00C5 2806            LDA       L6
00CB:00C7 E1C020          ADDISLC   L2, 0
00CB:00CA 8C49            LDIXUB.P  
00CB:00CC 2805            LDA       L5
00CB:00CE E1C032          ADDISLC   L3, 2
00CB:00D1 8C4E            STIXB.P   
00CB:00D3 7B              LABEL     
00CB:00D4 6E01            INCIL     L1
00CB:00D6 37807F          JMP       0x0099
00CB:00D9 E1C246          MULISLC   L4, 3
00CB:00DC B012            ADDIC     18
00CB:00DE 74              RETI      
	Avg B/tk=0.913934
204: PDJPG_StoreTGA(CsQhii)i:
00CC:0000 E1CA56          MULISLL   L5, L6
00CC:0003 B604            SHLIC     2
00CC:0005 B040            ADDIC     64
00CC:0007 8906            NEWARR    b:0
00CC:0009 2901            STA       L1
00CC:000B 2801            LDA       L1
00CC:000D E1B0            CVTA2PTR  
00CC:000F 2804            LDA       L4
00CC:0011 E1B0            CVTA2PTR  
00CC:0013 2005            LDI       L5
00CC:0015 2006            LDI       L6
00CC:0017 7000            CALLG     G0(PDJPG_FlattenTGA)
00CC:0019 2402            STI       L2
00CC:001B 2803            LDA       L3
00CC:001D 2A24            LDC       Str:5DC="wb"
00CC:001F 7001            CALLG     G1(fopen)
00CC:0021 2900            STA       L0
00CC:0023 2801            LDA       L1
00CC:0025 E1B0            CVTA2PTR  
00CC:0027 2A15            LDC       1u
00CC:0029 2002            LDI       L2
00CC:002B 2800            LDA       L0
00CC:002D 7003            CALLG     G3(fwrite)
00CC:002F A0              POPI      
00CC:0030 2800            LDA       L0
00CC:0032 7004            CALLG     G4(fclose)
00CC:0034 A0              POPI      
00CC:0035 6400            RETC      0i
	Avg B/tk=0.774648
205: $GS$4D1062E1_0001()i:
00CD:0000 8400            LDLX      L0i
00CD:0002 8410            LDLX      L1i
00CD:0004 00              ADDI      
00CD:0005 74              RETI      
	Avg B/tk=1.199998
206: $GS$4D1062E1_0002()i:
00CE:0000 8600            LDDRLX    L0i
00CE:0002 8610            LDDRLX    L1i
00CE:0004 00              ADDI      
00CE:0005 74              RETI      
	Avg B/tk=1.199998
207: (null) ?
208: (null) ?
209: (null) ?
210: PDJPG_Init/init:00000000(i)
[bits 64]
basm_cpuinfo:
push rbx
xor eax, eax; cpuid
mov r8, basm_cpuid_str
mov [r8+0], ebx
mov [r8+4], edx
mov [r8+8], ecx
xor eax, eax; inc eax; cpuid
mov r8, basm_cpuid_std
mov [r8+0], eax
mov [r8+4], ebx
mov [r8+8], ecx
mov [r8+12], edx
pop rbx; ret
basm_getbp: mov rax, rbp; ret

[section .text]
/* main 000000 */
CdOecUJgirXnBKTKdC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, BXptSIGxrrsePwtorn
call BSVM2_Op_IFXOBJ /* OP:0140-0000 */
mov rcx, rdi
mov rdx, NEKfcCQliVVtPrBRWl
call BSVM2_Op_IFXX /* OP:0408-0000 */
mov rcx, rdi
mov rdx, KAvtiQHrDOVxGvXhaU
call BSVM2_Op_IFXX /* OP:0408-0000 */
mov rcx, rdi
mov rdx, OICxHGNTboOCDpuqqt
call BSVM2_Op_IFXX /* OP:0408-0000 */
mov rax, 0x008D01DF1853C09C
mov [rsi+184], rax
mov rcx, rdi
mov rdx, JIAFhIFTTaeQCHjeBS
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r13, 0x9002487E80000000
mov [rsi+200], r13
mov rcx, rdi
mov rdx, JkJncBCWXxtxDXDKhm
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, CBPmbrOQVdfuOkBKXC
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BXptSIGxrrsePwtorn:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17764170
	dd 0x000001DF
	dq 0
NEKfcCQliVVtPrBRWl:
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KAvtiQHrDOVxGvXhaU:
	dd 0x00000007
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OICxHGNTboOCDpuqqt:
	dd 0x00000008
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JIAFhIFTTaeQCHjeBS:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JkJncBCWXxtxDXDKhm:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CBPmbrOQVdfuOkBKXC:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq JkcRkuCeNTsfFwPNFK
	dq JkcRkuCeNTsfFwPNFK
	dq 0
EcEXLvALAWIPExdteX:
	dq CdOecUJgirXnBKTKdC
	dq CBPmbrOQVdfuOkBKXC
	dq JkcRkuCeNTsfFwPNFK
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00001C */
GAFFelDWkWrtOHIFWd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r14d, 0x00000008
mov r12, 0x00000000DECAF000
mov [rsi+72], r12d
mov r12d, [rsi+72]
mov r13d, 0x00000008
mov eax, r12d
mov ecx, r13d
shr eax, cl
mov r12d, eax
mov [rsi+80], r12d
mov [rsi+184], r12
mov [rsi+192], r13
mov [rsi+128], r14
mov rcx, rdi
mov rdx, FELrrcERqpaDETLMfK
call BSVM2_Op_SHLI_LLL /* OP:01CE-0000 */
mov r12, [rsi+184]
or r12d, [rsi+80]
mov [rsi+88], r12d
mov r12d, [rsi+88]
mov r13d, 0x00000008
mov eax, r12d
mov ecx, r13d
shr eax, cl
mov r12d, eax
and r12d, 15
mov [rsi+136], r12d
mov rax, 0x008D01DF1853C0A8
mov [rsi+184], rax
mov [rsi+192], r13
mov rcx, rdi
mov rdx, IolKPhQesgkLCuIDuR
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+72]
mov eax, r12d
mov r12, rax
mov [rsi+200], r12
mov rcx, rdi
mov rdx, HUuRNmLuFduKCMPihC
call BSVM2_Op_CVTL2AA /* OP:0111-0000 */
mov rcx, rdi
mov rdx, DJHFuAIcmTfsPHBevc
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+80]
mov eax, r12d
mov r12, rax
mov [rsi+200], r12
mov rcx, rdi
mov rdx, EmSqhUKUmXwTKTuCIC
call BSVM2_Op_CVTL2AA /* OP:0111-0000 */
mov rcx, rdi
mov rdx, CcnjKdLXeNEUOiKwBd
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+88]
mov eax, r12d
mov r12, rax
mov [rsi+200], r12
mov rcx, rdi
mov rdx, InMCWWBGwBRaAWTFhj
call BSVM2_Op_CVTL2AA /* OP:0111-0000 */
mov rcx, rdi
mov rdx, FFnXtqHqgtFTFnuSqc
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+136]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, DoFtJsHcJorWKdwMra
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, FiKIBgGahIKuBDeWIP
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, KRisErCQNcINKapoLt
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FELrrcERqpaDETLMfK:
	dd 0x00090017
	dd 0x00000010
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IolKPhQesgkLCuIDuR:
	dd 0x00040004
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HUuRNmLuFduKCMPihC:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DJHFuAIcmTfsPHBevc:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EmSqhUKUmXwTKTuCIC:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CcnjKdLXeNEUOiKwBd:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
InMCWWBGwBRaAWTFhj:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FFnXtqHqgtFTFnuSqc:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
DoFtJsHcJorWKdwMra:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FiKIBgGahIKuBDeWIP:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
KRisErCQNcINKapoLt:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq FlKdCMEafUGFBgUtuJ
	dq FlKdCMEafUGFBgUtuJ
	dq 0
JkcRkuCeNTsfFwPNFK:
	dq GAFFelDWkWrtOHIFWd
	dq KRisErCQNcINKapoLt
	dq FlKdCMEafUGFBgUtuJ
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00006E */
NwLbPwOJFsJhBmgPaE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, 0xFFFFFFFF
mov [rsi+136], r12
mov eax, r12d
mov ecx, 0
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+184], eax
mov ecx, [rsi+184]
mov rax, GEdicMItmHhXHeHNVl
cmp ecx, 0
mov r10, ItMVjMOXDSQeNaVBof
cmovg rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
FlKdCMEafUGFBgUtuJ:
	dq NwLbPwOJFsJhBmgPaE
	dq 0
	dq ItMVjMOXDSQeNaVBof
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000078 */
HjgJHvFLajAWAJFnvl:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C0C3
mov [rsi+184], rax
xor rax, rax
mov [rsi+192], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FRkucpAgKoIVINfikV
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FRkucpAgKoIVINfikV:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq AgwQSlFoWErELrJOAG
	dq AgwQSlFoWErELrJOAG
	dq 0
GEdicMItmHhXHeHNVl:
	dq HjgJHvFLajAWAJFnvl
	dq FRkucpAgKoIVINfikV
	dq AgwQSlFoWErELrJOAG
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00007D */
QfemFCEJEbbXBVhDME:
mov rdx, MWiMHtLkuhuIMaFANr
mov rax, [rdx+0]
jmp rax
align 8
AgwQSlFoWErELrJOAG:
	dq QfemFCEJEbbXBVhDME
	dq 0
	dq MWiMHtLkuhuIMaFANr
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000080 */
LJdqGjJlgkWuGhFWIs:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C0CE
mov [rsi+184], rax
xor rax, rax
mov [rsi+192], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DkQDUBIMevgJEteEAl
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DkQDUBIMevgJEteEAl:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq MWiMHtLkuhuIMaFANr
	dq MWiMHtLkuhuIMaFANr
	dq 0
ItMVjMOXDSQeNaVBof:
	dq LJdqGjJlgkWuGhFWIs
	dq DkQDUBIMevgJEteEAl
	dq MWiMHtLkuhuIMaFANr
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000085 */
ARSJhtObCBfnJwjjsA:
mov rdx, NtwPoAIldueXLBxLaX
jmp BSVM2_TrOp_NatCallG0
align 8
NtwPoAIldueXLBxLaX:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq KTWbENQEPWjxGpLlAX
	dq KTWbENQEPWjxGpLlAX
	dq 0
MWiMHtLkuhuIMaFANr:
	dq ARSJhtObCBfnJwjjsA
	dq NtwPoAIldueXLBxLaX
	dq KTWbENQEPWjxGpLlAX
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000087 */
ChOFJpQJieQCLttpMu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+144], r12d
mov rax, 0x008D01DF1853C0D9
mov [rsi+184], rax
mov rcx, rdi
mov rdx, LJfnHUMcipreALIXqC
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov eax, 0x00000026
mov [rsi+200], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PRCehOMXmtitHwiApx
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
LJfnHUMcipreALIXqC:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PRCehOMXmtitHwiApx:
	dd 0x00000000
	dd 0x00020002
	dd 0x177652B0
	dd 0x000001DF
	dq GdmmarNFmNgXQNhNvO
	dq GdmmarNFmNgXQNhNvO
	dq 0
KTWbENQEPWjxGpLlAX:
	dq ChOFJpQJieQCLttpMu
	dq PRCehOMXmtitHwiApx
	dq GdmmarNFmNgXQNhNvO
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000092 */
FHLeUpKBNBLFGfOBtX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, BOlawKJjpPQeOEKjbq
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, AaTUgJHmoeVnIjSQnE
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, JICgxlCuAdnxMGRqdU
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BOlawKJjpPQeOEKjbq:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AaTUgJHmoeVnIjSQnE:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JICgxlCuAdnxMGRqdU:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq JEscsEDQOKJfJpIBAh
	dq JEscsEDQOKJfJpIBAh
	dq 0
GdmmarNFmNgXQNhNvO:
	dq FHLeUpKBNBLFGfOBtX
	dq JICgxlCuAdnxMGRqdU
	dq JEscsEDQOKJfJpIBAh
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000099 */
GWBgoJOvOqXdGJENBu:
mov rdx, KsoElnIaPnvACQsVMO
jmp BSVM2_TrOp_NatCallG0
align 8
KsoElnIaPnvACQsVMO:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq KbIsibFFMloRGQbgKn
	dq KbIsibFFMloRGQbgKn
	dq 0
JEscsEDQOKJfJpIBAh:
	dq GWBgoJOvOqXdGJENBu
	dq KsoElnIaPnvACQsVMO
	dq KbIsibFFMloRGQbgKn
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00009B */
PBuciTHIquHuMwlGvd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+152], r12d
mov rax, 0x008D01DF1853C0EC
mov [rsi+184], rax
mov rcx, rdi
mov rdx, PvEmmNBjifuuGObBIs
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+152]
sub r12d, [rsi+144]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, CnjfnTFCgosANCpVMW
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, POksiiJDdaghJcKdwD
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, IetgiNQqqfcIPOhEKR
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
PvEmmNBjifuuGObBIs:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CnjfnTFCgosANCpVMW:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
POksiiJDdaghJcKdwD:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IetgiNQqqfcIPOhEKR:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq EaFKmMChTFbNKBgHIA
	dq EaFKmMChTFbNKBgHIA
	dq 0
KbIsibFFMloRGQbgKn:
	dq PBuciTHIquHuMwlGvd
	dq IetgiNQqqfcIPOhEKR
	dq EaFKmMChTFbNKBgHIA
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000AD */
BbwKApGiKVXJAdGdhu:
mov rdx, MMirTxPgKGdlCFQFAw
jmp BSVM2_TrOp_NatCallG0
align 8
MMirTxPgKGdlCFQFAw:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq EAFTHPHhAGQlKOqUnJ
	dq EAFTHPHhAGQlKOqUnJ
	dq 0
EaFKmMChTFbNKBgHIA:
	dq BbwKApGiKVXJAdGdhu
	dq MMirTxPgKGdlCFQFAw
	dq EAFTHPHhAGQlKOqUnJ
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000AF */
GRTLSFPNAppAEQVNuI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+144], r12d
mov rax, 0x008D01DF1853C0FE
mov [rsi+184], rax
mov rcx, rdi
mov rdx, CubkgvMoLCFIPPhdJv
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov eax, 0x00000026
mov [rsi+200], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, ILLjKLHqoXdIJsWiRX
add rsp, 504
jmp BSVM2_TrOp_NatCallG0
align 8
CubkgvMoLCFIPPhdJv:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ILLjKLHqoXdIJsWiRX:
	dd 0x00240000
	dd 0x00020002
	dd 0xC16A54DE
	dd 0x00007FFE
	dq GBTJrUFURadCBvJfpr
	dq GBTJrUFURadCBvJfpr
	dq 0
EAFTHPHhAGQlKOqUnJ:
	dq GRTLSFPNAppAEQVNuI
	dq ILLjKLHqoXdIJsWiRX
	dq GBTJrUFURadCBvJfpr
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000BB */
JToTcnMSQExdMRbufL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, ESCdMgErOSVLNQafuR
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, OkdgjCKVONggCrsggQ
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, BmWUSoFvjMqfACfhMP
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
ESCdMgErOSVLNQafuR:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OkdgjCKVONggCrsggQ:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BmWUSoFvjMqfACfhMP:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq AClLHNHqFnaxCECHch
	dq AClLHNHqFnaxCECHch
	dq 0
GBTJrUFURadCBvJfpr:
	dq JToTcnMSQExdMRbufL
	dq BmWUSoFvjMqfACfhMP
	dq AClLHNHqFnaxCECHch
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000C2 */
EHMFEpIcRMoACXaBvO:
mov rdx, NfVJauIbMikCAhpHAw
jmp BSVM2_TrOp_NatCallG0
align 8
NfVJauIbMikCAhpHAw:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq HoFAqCCDHmvnDKvBRO
	dq HoFAqCCDHmvnDKvBRO
	dq 0
AClLHNHqFnaxCECHch:
	dq EHMFEpIcRMoACXaBvO
	dq NfVJauIbMikCAhpHAw
	dq HoFAqCCDHmvnDKvBRO
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000C4 */
PsSoCVNaHvICDASckM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+152], r12d
mov rax, 0x008D01DF1853C111
mov [rsi+184], rax
mov rcx, rdi
mov rdx, IqfVFaOXAfEWEsuxhF
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+152]
sub r12d, [rsi+144]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, CEPdKGATacciMdLxLQ
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, CjOOVTQnExTVFprUDu
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, HDBcuCPoAULQMiLeJx
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
IqfVFaOXAfEWEsuxhF:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CEPdKGATacciMdLxLQ:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CjOOVTQnExTVFprUDu:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HDBcuCPoAULQMiLeJx:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq MLHgUnBupwxdQgJEmr
	dq MLHgUnBupwxdQgJEmr
	dq 0
HoFAqCCDHmvnDKvBRO:
	dq PsSoCVNaHvICDASckM
	dq HDBcuCPoAULQMiLeJx
	dq MLHgUnBupwxdQgJEmr
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000D6 */
IBBhiBQjiCldCdkfqU:
mov rdx, MqNMMjNVdKPdKeDoaa
jmp BSVM2_TrOp_NatCallG0
align 8
MqNMMjNVdKPdKeDoaa:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq NXmAdOPIMgbbBoCgkF
	dq NXmAdOPIMgbbBoCgkF
	dq 0
MLHgUnBupwxdQgJEmr:
	dq IBBhiBQjiCldCdkfqU
	dq MqNMMjNVdKPdKeDoaa
	dq NXmAdOPIMgbbBoCgkF
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000D8 */
FEPDWOKrEKhaLiaJQw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+144], r12d
mov eax, 0x00002000
mov [rsi+184], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IWECSDCHnlslGIMjuF
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
IWECSDCHnlslGIMjuF:
	dd 0x00000000
	dd 0x00000000
	dd 0x17765590
	dd 0x000001DF
	dq HFkwkgIRHeapNxumQO
	dq HFkwkgIRHeapNxumQO
	dq 0
NXmAdOPIMgbbBoCgkF:
	dq FEPDWOKrEKhaLiaJQw
	dq IWECSDCHnlslGIMjuF
	dq HFkwkgIRHeapNxumQO
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000E0 */
FTLlJEAtQmvFDTPacU:
mov rdx, BegvpGEIogOXHRdHgH
jmp BSVM2_TrOp_NatCallG0
align 8
BegvpGEIogOXHRdHgH:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq BniVsvOxCdPlNGDulH
	dq BniVsvOxCdPlNGDulH
	dq 0
HFkwkgIRHeapNxumQO:
	dq FTLlJEAtQmvFDTPacU
	dq BegvpGEIogOXHRdHgH
	dq BniVsvOxCdPlNGDulH
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000E2 */
BAdEbjMDoBCKDbRSLD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+152], r12d
mov rax, 0x008D01DF1853C123
mov [rsi+184], rax
mov rcx, rdi
mov rdx, HoLPEqNiCmUbQdtaBP
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+152]
sub r12d, [rsi+144]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, EKXlgbQqssqrBlefVB
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, LKPleROfIcNWDDVXHS
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, DLaxIHEGguOEGtnVmF
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HoLPEqNiCmUbQdtaBP:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EKXlgbQqssqrBlefVB:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LKPleROfIcNWDDVXHS:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DLaxIHEGguOEGtnVmF:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq CluUmEOxdfsTQnhuUQ
	dq CluUmEOxdfsTQnhuUQ
	dq 0
BniVsvOxCdPlNGDulH:
	dq BAdEbjMDoBCKDbRSLD
	dq DLaxIHEGguOEGtnVmF
	dq CluUmEOxdfsTQnhuUQ
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000F4 */
IEiAGFNdmCNDOEkNKk:
mov rdx, CvhalxITeGChAcxrNH
jmp BSVM2_TrOp_NatCallG0
align 8
CvhalxITeGChAcxrNH:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq GWmutRHLKkqwMmWslQ
	dq GWmutRHLKkqwMmWslQ
	dq 0
CluUmEOxdfsTQnhuUQ:
	dq IEiAGFNdmCNDOEkNKk
	dq CvhalxITeGChAcxrNH
	dq GWmutRHLKkqwMmWslQ
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000F6 */
ARNlFfBTkEPQCEHimx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+144], r12d
mov eax, 0x00002000
mov [rsi+184], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IHqkbJHmndgoDLApWe
add rsp, 504
jmp BSVM2_TrOp_NatCallG0
align 8
IHqkbJHmndgoDLApWe:
	dd 0x00240000
	dd 0x00000000
	dd 0xC16A4B65
	dd 0x00007FFE
	dq PMLqxNKRgLtfGRjokP
	dq PMLqxNKRgLtfGRjokP
	dq 0
GWmutRHLKkqwMmWslQ:
	dq ARNlFfBTkEPQCEHimx
	dq IHqkbJHmndgoDLApWe
	dq PMLqxNKRgLtfGRjokP
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0000FE */
EMQianLAgLOmHBkIdQ:
mov rdx, CaROsMKJVrfDQqxilQ
jmp BSVM2_TrOp_NatCallG0
align 8
CaROsMKJVrfDQqxilQ:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq FtCILxOVistQLBtuFa
	dq FtCILxOVistQLBtuFa
	dq 0
PMLqxNKRgLtfGRjokP:
	dq EMQianLAgLOmHBkIdQ
	dq CaROsMKJVrfDQqxilQ
	dq FtCILxOVistQLBtuFa
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000100 */
LJvVtOHNBcDXMTGWOu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+152], r12d
mov rax, 0x008D01DF1853C13D
mov [rsi+184], rax
mov rcx, rdi
mov rdx, MkBdcLOxspeJCwLpLD
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+152]
sub r12d, [rsi+144]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, QaVHMrKlNfLsNmXfJf
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, LgsCmjPgnHBDERdepx
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, HGgDdPGECgHHHQErcE
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MkBdcLOxspeJCwLpLD:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QaVHMrKlNfLsNmXfJf:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LgsCmjPgnHBDERdepx:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HGgDdPGECgHHHQErcE:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq LeibtjKRPXWRKLgiFE
	dq LeibtjKRPXWRKLgiFE
	dq 0
FtCILxOVistQLBtuFa:
	dq LJvVtOHNBcDXMTGWOu
	dq HGgDdPGECgHHHQErcE
	dq LeibtjKRPXWRKLgiFE
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000112 */
LqSQQRJkOTBuMoqbVL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, PIKnFDLbxdMvHxxrnT
call BSVM2_Op_NEWOBJ /* OP:0088-0000 */
mov rax, [rsi+184]
mov [rsi+192], rax
mov eax, 0x00000001
mov [rsi+200], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IkNhKeMlfxQvPtbCne
add rsp, 504
jmp BSVM2_TrOp_CALLV
align 8
PIKnFDLbxdMvHxxrnT:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x17764880
	dd 0x000001DF
	dq 0
IkNhKeMlfxQvPtbCne:
	dd 0x00000000
	dd 0x00020001
	dd 0x17764F20
	dd 0x000001DF
	dq BvLUdGGlTlOdKAimKI
	dq BvLUdGGlTlOdKAimKI
	dq 0
LeibtjKRPXWRKLgiFE:
	dq LqSQQRJkOTBuMoqbVL
	dq IkNhKeMlfxQvPtbCne
	dq BvLUdGGlTlOdKAimKI
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000119 */
JgcUCLORvWnOGoAUvt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+16], r12
mov r12d, 0x00000003
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+8], edx
mov r12d, 0x00000004
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+12], edx
mov r12, 0x4014000000000000
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, r12
mov [rax+16], rdx
mov rax, 0x008D01DF1853C157
mov [rsi+184], rax
xor rax, rax
mov [rsi+192], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PgXlHoEEbHtKEokBeA
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
PgXlHoEEbHtKEokBeA:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq IgLVFpMLJRABIiFpOw
	dq IgLVFpMLJRABIiFpOw
	dq 0
BvLUdGGlTlOdKAimKI:
	dq JgcUCLORvWnOGoAUvt
	dq PgXlHoEEbHtKEokBeA
	dq IgLVFpMLJRABIiFpOw
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000131 */
MqJfePGkmguJFCKmMN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C165
mov [rsi+184], rax
mov rcx, rdi
mov rdx, GpLDPNOrSKoXQdwSJA
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+8]
mov r12d, edx
mov [rsi+200], r12
mov rcx, rdi
mov rdx, HobiasIJnXsVMTsJuE
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, BXUCCSQhTKCvKpiraP
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, MUBFnNKBeXLxDCTPEP
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GpLDPNOrSKoXQdwSJA:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HobiasIJnXsVMTsJuE:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BXUCCSQhTKCvKpiraP:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MUBFnNKBeXLxDCTPEP:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq BdlvpkCLgSolQhoQvV
	dq BdlvpkCLgSolQhoQvV
	dq 0
IgLVFpMLJRABIiFpOw:
	dq MqJfePGkmguJFCKmMN
	dq MUBFnNKBeXLxDCTPEP
	dq BdlvpkCLgSolQhoQvV
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000140 */
AIfFlNOdsSnAKuRWPI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C175
mov [rsi+184], rax
mov rcx, rdi
mov rdx, ACELrvDxLgreCUCrtl
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+12]
mov r12d, edx
mov [rsi+200], r12
mov rcx, rdi
mov rdx, FElVBuPEESrTPiVKpo
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, MhmpXxPiFqdbQhGNdK
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, ChCiEFARpjRGCWjHst
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
ACELrvDxLgreCUCrtl:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FElVBuPEESrTPiVKpo:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MhmpXxPiFqdbQhGNdK:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ChCiEFARpjRGCWjHst:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq JOLUVAOgKMnlLMIVim
	dq JOLUVAOgKMnlLMIVim
	dq 0
BdlvpkCLgSolQhoQvV:
	dq AIfFlNOdsSnAKuRWPI
	dq ChCiEFARpjRGCWjHst
	dq JOLUVAOgKMnlLMIVim
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00014F */
MVfEUOKGdSoEMxrdpe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C185
mov [rsi+184], rax
mov rcx, rdi
mov rdx, OdQRhfCHmbROOPkDgI
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+16]
mov r12, rdx
mov [rsi+200], r12
mov rcx, rdi
mov rdx, KOncXoJkLBtVOQIKbh
call BSVM2_Op_CVTD2AA /* OP:0113-0000 */
mov rcx, rdi
mov rdx, NrrSarJSpklAPoFHAd
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, McgKuMMRNugACshroq
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
OdQRhfCHmbROOPkDgI:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KOncXoJkLBtVOQIKbh:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NrrSarJSpklAPoFHAd:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
McgKuMMRNugACshroq:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq LPQioVOtqMBcPKdMAX
	dq LPQioVOtqMBcPKdMAX
	dq 0
JOLUVAOgKMnlLMIVim:
	dq MVfEUOKGdSoEMxrdpe
	dq McgKuMMRNugACshroq
	dq LPQioVOtqMBcPKdMAX
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00015E */
IafHFENKUKSvLotmnX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C197
mov [rsi+184], rax
mov rcx, rdi
mov rdx, ELGnTpCSbjBhGNvDGs
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rax, [rsi+16]
mov [rsi+200], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, QhiNlaIkkINgIWFNnW
add rsp, 504
jmp BSVM2_TrOp_CALLV
align 8
ELGnTpCSbjBhGNvDGs:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QhiNlaIkkINgIWFNnW:
	dd 0x00000000
	dd 0x00030002
	dd 0x17765120
	dd 0x000001DF
	dq HkdQrmHiKWacEuVWtw
	dq HkdQrmHiKWacEuVWtw
	dq 0
LPQioVOtqMBcPKdMAX:
	dq IafHFENKUKSvLotmnX
	dq QhiNlaIkkINgIWFNnW
	dq HkdQrmHiKWacEuVWtw
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000167 */
LaiIXENrBTppBbtlrm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, NCehEEJwDFQHDdSpub
call BSVM2_Op_CVTD2AA /* OP:0113-0000 */
mov rcx, rdi
mov rdx, GLqkTxGpigUXMiBjmc
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, PHOkkoLvrKKBHnGjSD
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NCehEEJwDFQHDdSpub:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GLqkTxGpigUXMiBjmc:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PHOkkoLvrKKBHnGjSD:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq ClvkPcOeWbdVIbAqFQ
	dq ClvkPcOeWbdVIbAqFQ
	dq 0
HkdQrmHiKWacEuVWtw:
	dq LaiIXENrBTppBbtlrm
	dq PHOkkoLvrKKBHnGjSD
	dq ClvkPcOeWbdVIbAqFQ
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00016E */
BdQvKtKONjWUCGpMVb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+16]
mov [rsi+184], r12
mov rcx, rdi
mov rdx, KWIBlmIjgMukJPuVlm
call BSVM2_Op_DELOBJ /* OP:008A-0000 */
mov r12, 0x0000000040000000
mov r13, 0x0000000040400000
mov [rsi+184], r12
mov [rsi+192], r13
mov rcx, rdi
mov rdx, FSTsunLEOXPQQkoaVr
call BSVM2_Op_MKV2F /* OP:0431-0000 */
mov r12, [rsi+184]
mov [rsi+24], r12
mov r12, 0x0000000040800000
mov r13, 0x0000000040A00000
mov [rsi+184], r12
mov [rsi+192], r13
mov rcx, rdi
mov rdx, CqUKhVLnAEEwCqHcJr
call BSVM2_Op_MKV2F /* OP:0431-0000 */
mov r12, [rsi+184]
mov [rsi+32], r12
mov r12, [rsi+24]
mov r13, [rsi+32]
mov [rsi+184], r12
mov [rsi+192], r13
mov rcx, rdi
mov rdx, IPIBnsDpdWePOGBNVA
call BSVM2_Op_BINOPX_ADD_V2F /* OP:040E-0000 */
mov r12, [rsi+184]
mov [rsi+40], r12
mov rax, 0x008D01DF1853C1B6
mov [rsi+184], rax
mov rcx, rdi
mov rdx, LTOpSdKPPIBdCBTwoS
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12, [rsi+40]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, GnLMKpHFDkGGCpsJwg
call BSVM2_Op_LDV2FA_V2F /* OP:0442-0000 */
mov rcx, rdi
mov rdx, QDOhoBJqfrDqPKPOnH
call BSVM2_Op_CVTF2AA /* OP:0112-0000 */
mov rcx, rdi
mov rdx, CNmupgKmRXrmFrecRH
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12, [rsi+40]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, HRcNTGBuekIHBBPrwM
call BSVM2_Op_LDV2FB_V2F /* OP:0443-0000 */
mov rcx, rdi
mov rdx, FOLEkLCJiNpTGUPXrG
call BSVM2_Op_CVTF2AA /* OP:0112-0000 */
mov rcx, rdi
mov rdx, EdcvFcJOcDVGPRMhJL
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, FKuhluBVADjQLgwpvK
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
KWIBlmIjgMukJPuVlm:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FSTsunLEOXPQQkoaVr:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CqUKhVLnAEEwCqHcJr:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IPIBnsDpdWePOGBNVA:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LTOpSdKPPIBdCBTwoS:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GnLMKpHFDkGGCpsJwg:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QDOhoBJqfrDqPKPOnH:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CNmupgKmRXrmFrecRH:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HRcNTGBuekIHBBPrwM:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FOLEkLCJiNpTGUPXrG:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EdcvFcJOcDVGPRMhJL:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
FKuhluBVADjQLgwpvK:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq QoPttpAHkmVEPVbIdt
	dq QoPttpAHkmVEPVbIdt
	dq 0
ClvkPcOeWbdVIbAqFQ:
	dq BdQvKtKONjWUCGpMVb
	dq FKuhluBVADjQLgwpvK
	dq QoPttpAHkmVEPVbIdt
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0001A5 */
AQNcvuBmVJsQKAMoBi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, 0x000000003F800000
xor r14, r14
xor r12, r12
xor r15, r15
mov [rsi+200], r12
mov [rsi+184], r13
mov [rsi+192], r14
mov [rsi+208], r15
mov rcx, rdi
mov rdx, ORCQTRFURqwSERSfuX
call BSVM2_Op_MKX4F /* OP:0402-0000 */
mov rcx, rdi
mov rdx, PIKFXOPAeIOkJIKRDJ
call BSVM2_Op_STXL /* OP:0407-0000 */
xor r13, r13
mov r14, 0x000000003F800000
xor r12, r12
xor r15, r15
mov [rsi+200], r12
mov [rsi+184], r13
mov [rsi+192], r14
mov [rsi+208], r15
mov rcx, rdi
mov rdx, GDLTOxDCTuTQBaApdu
call BSVM2_Op_MKX4F /* OP:0402-0000 */
mov rcx, rdi
mov rdx, EbkVkJLxUDibMrLjNk
call BSVM2_Op_STXL /* OP:0407-0000 */
mov rcx, rdi
mov rdx, CHWGakPiwXTsCAULxv
call BSVM2_Op_LDXL /* OP:0406-0000 */
mov rcx, rdi
mov rdx, QluBfGGgNRSGJvCFNM
call BSVM2_Op_LDXL /* OP:0406-0000 */
mov rcx, rdi
mov rdx, DMOmqPInavLhOUTxAg
call BSVM2_Op_BINOPX_CROSS_V3F /* OP:040E-0000 */
mov rcx, rdi
mov rdx, AtEOPkMSTHelPPucIl
call BSVM2_Op_STXL /* OP:0407-0000 */
mov rax, 0x008D01DF1853C1D1
mov [rsi+184], rax
mov rcx, rdi
mov rdx, KWwrrPGrIhXlMkSUMV
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, PvtFdXDkpKctFdUWDD
call BSVM2_Op_LDXL /* OP:0406-0000 */
mov rcx, rdi
mov rdx, BffqAGBgeHGoPooIOk
call BSVM2_Op_LDX4FA_X4F /* OP:044C-0000 */
mov rcx, rdi
mov rdx, MNmgXaErppJIKihmkb
call BSVM2_Op_CVTF2AA /* OP:0112-0000 */
mov rcx, rdi
mov rdx, DJFmCTDqexLFHxGoRc
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdx, BffuwRQjNKiUNDSPMk
call BSVM2_Op_LDXL /* OP:0406-0000 */
mov rcx, rdi
mov rdx, NPRgATMoCWbDKdlCop
call BSVM2_Op_LDX4FB_X4F /* OP:044D-0000 */
mov rcx, rdi
mov rdx, MPqDJiMKtfGFIJBJPH
call BSVM2_Op_CVTF2AA /* OP:0112-0000 */
mov rcx, rdi
mov rdx, MVBAJtOXbgtcEDKMkI
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdx, IUbPbUJqqitFBHXlTd
call BSVM2_Op_LDXL /* OP:0406-0000 */
mov rcx, rdi
mov rdx, OKkurAFClBNFPjhWdG
call BSVM2_Op_LDX4FC_X4F /* OP:044E-0000 */
mov rcx, rdi
mov rdx, LDnKhQCXidQSLRMxut
call BSVM2_Op_CVTF2AA /* OP:0112-0000 */
mov rcx, rdi
mov rdx, CvPMUaIISIKLPrmpMU
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, KFMPxNOenNrSGaEbnH
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
ORCQTRFURqwSERSfuX:
	dd 0x00000000
	dd 0x00000000
	dd 0x00030002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PIKFXOPAeIOkJIKRDJ:
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GDLTOxDCTuTQBaApdu:
	dd 0x00000000
	dd 0x00000000
	dd 0x00030002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EbkVkJLxUDibMrLjNk:
	dd 0x00000007
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CHWGakPiwXTsCAULxv:
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QluBfGGgNRSGJvCFNM:
	dd 0x00000007
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DMOmqPInavLhOUTxAg:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AtEOPkMSTHelPPucIl:
	dd 0x00000008
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KWwrrPGrIhXlMkSUMV:
	dd 0x00040003
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PvtFdXDkpKctFdUWDD:
	dd 0x00000008
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BffqAGBgeHGoPooIOk:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MNmgXaErppJIKihmkb:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DJFmCTDqexLFHxGoRc:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BffuwRQjNKiUNDSPMk:
	dd 0x00000008
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NPRgATMoCWbDKdlCop:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MPqDJiMKtfGFIJBJPH:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MVBAJtOXbgtcEDKMkI:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
IUbPbUJqqitFBHXlTd:
	dd 0x00000008
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OKkurAFClBNFPjhWdG:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LDnKhQCXidQSLRMxut:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CvPMUaIISIKLPrmpMU:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
KFMPxNOenNrSGaEbnH:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq PntORDQoeixaGINJBp
	dq PntORDQoeixaGINJBp
	dq 0
QoPttpAHkmVEPVbIdt:
	dq AQNcvuBmVJsQKAMoBi
	dq KFMPxNOenNrSGaEbnH
	dq PntORDQoeixaGINJBp
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0001EA */
KHHLhXCtOJstDHnVPs:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+128]
mov [rsi+184], eax
mov ecx, [rsi+184]
mov rax, GVmOmjAFuWbuObCqoB
cmp ecx, 0
mov r10, AIpaBeMxDTEeLfdCjg
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
PntORDQoeixaGINJBp:
	dq KHHLhXCtOJstDHnVPs
	dq 0
	dq AIpaBeMxDTEeLfdCjg
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0001EF */
DJKFWeKgHBSQNjGdvT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+136]
mov [rsi+184], eax
mov ecx, [rsi+184]
mov rax, HdgDRXAhbdLtCNaaBa
cmp ecx, 0
mov r10, AIpaBeMxDTEeLfdCjg
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
GVmOmjAFuWbuObCqoB:
	dq DJKFWeKgHBSQNjGdvT
	dq 0
	dq AIpaBeMxDTEeLfdCjg
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0001F4 */
IodFKWEXXaEnQlHLpw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C0C3
mov [rsi+184], rax
xor rax, rax
mov [rsi+192], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LGxskOIhIfCCEskdom
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
LGxskOIhIfCCEskdom:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq AIpaBeMxDTEeLfdCjg
	dq AIpaBeMxDTEeLfdCjg
	dq 0
HdgDRXAhbdLtCNaaBa:
	dq IodFKWEXXaEnQlHLpw
	dq LGxskOIhIfCCEskdom
	dq AIpaBeMxDTEeLfdCjg
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0001F9 */
ObEtxkNtphxdEGmOPC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, CcOvgMJmdurAKNShDH
call BSVM2_Op_NEWARR_IC /* OP:0089-0000 */
mov r12, [rsi+184]
mov [rsi+96], r12
mov r12, [rsi+96]
mov [rsi+184], r12
mov rcx, rdi
mov rdx, JUometFPsRQEMHOeGS
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov r12, [rsi+184]
mov [rsi+104], r12
mov r12d, 0x00000045
mov r13, [rsi+104]
mov [rsi+184], r12
mov [rsi+192], r13
mov rcx, rdi
mov rdx, BCHsRcMwaekTKEtlNL
call BSVM2_Op_RSTIXIC /* OP:0154-0000 */
mov rax, 0x008D01DF1853C1F1
mov [rsi+184], rax
mov rcx, rdi
mov rdx, HlmxReGkOXltNWfLeN
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, QoIGIPAbxTpACbkvTE
call BSVM2_Op_LDIXILC /* OP:017F-0000 */
mov rcx, rdi
mov rdx, PaiOuXNwSUvgCuUtuR
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, KalqjQIpBbnGMhsFoP
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, BdCbmTCjshsCPgowSQ
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CcOvgMJmdurAKNShDH:
	dd 0x00000040
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JUometFPsRQEMHOeGS:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000020
	dd 0x00000000
	dq 0
BCHsRcMwaekTKEtlNL:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HlmxReGkOXltNWfLeN:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QoIGIPAbxTpACbkvTE:
	dd 0x0000000C
	dd 0x00020000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000020
	dd 0x00000000
	dq 0
PaiOuXNwSUvgCuUtuR:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KalqjQIpBbnGMhsFoP:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BdCbmTCjshsCPgowSQ:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq KnAnBmArDHUNFmsdBf
	dq KnAnBmArDHUNFmsdBf
	dq 0
AIpaBeMxDTEeLfdCjg:
	dq ObEtxkNtphxdEGmOPC
	dq BdCbmTCjshsCPgowSQ
	dq KnAnBmArDHUNFmsdBf
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00021D */
HhXoaHPHFOahLcPiPx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+96]
mov [rsi+184], r12
mov rcx, rdi
mov rdx, NmjaemETFkopLQRsdF
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+184]
mov [rsi+112], r12
mov r12, [rsi+112]
lea r12, [r12+128]
mov [rsi+120], r12
mov rax, 0x008D01DF1853C201
mov [rsi+184], rax
mov rcx, rdi
mov rdx, FvKKffDeVqKgBsPSik
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rax, [rsi+120]
mov edx, [rax]
mov r13d, edx
mov [rsi+200], r13
mov rcx, rdi
mov rdx, IcwgNiAWlBrAEBpmnk
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, DhOeaSOvFtIiHGcxTH
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NmjaemETFkopLQRsdF:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FvKKffDeVqKgBsPSik:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IcwgNiAWlBrAEBpmnk:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DhOeaSOvFtIiHGcxTH:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq QbRVthOuvJgdHHWLhA
	dq QbRVthOuvJgdHHWLhA
	dq 0
KnAnBmArDHUNFmsdBf:
	dq HhXoaHPHFOahLcPiPx
	dq DhOeaSOvFtIiHGcxTH
	dq QbRVthOuvJgdHHWLhA
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000239 */
ObVfgLBWvQtaAoCRVi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+120]
mov r13, [rsi+112]
mov rax, r12
mov rcx, r13
sub rax, rcx
sar rax, 2
mov r12, rax
mov [rsi+128], r12d
mov rax, 0x008D01DF1853C211
mov [rsi+184], rax
mov [rsi+192], r13
mov rcx, rdi
mov rdx, JOeGulGdKUmONgrdSC
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+128]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, NvRCoTLOlGnjLKgidp
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, GJeWVMEqngAkNFuORU
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, ImJHoVNdeOmsEVAWTX
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
JOeGulGdKUmONgrdSC:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NvRCoTLOlGnjLKgidp:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GJeWVMEqngAkNFuORU:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ImJHoVNdeOmsEVAWTX:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq HNLtKPGXCBfeDVUtfx
	dq HNLtKPGXCBfeDVUtfx
	dq 0
QbRVthOuvJgdHHWLhA:
	dq ObVfgLBWvQtaAoCRVi
	dq ImJHoVNdeOmsEVAWTX
	dq HNLtKPGXCBfeDVUtfx
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000250 */
AQtgGSKGREfQNtivKE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000003
mov [rsi+128], eax
mov eax, 0x00000004
mov [rsi+136], eax
mov rax, 0x008D01DF1853C222
mov [rsi+184], rax
mov rcx, rdi
mov rdx, CbVDtbCwgeBEITliVo
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+128]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, JLgwjKIfUtuXNDCgta
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, BXElgrDwQFfENreBNt
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+136]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, GLgQGgDXgftcKGmKwQ
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, BwNNoxDdIPHIBpXvKA
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, AFbOcqIUifmLFWbtaV
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CbVDtbCwgeBEITliVo:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JLgwjKIfUtuXNDCgta:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BXElgrDwQFfENreBNt:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GLgQGgDXgftcKGmKwQ:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BwNNoxDdIPHIBpXvKA:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
AFbOcqIUifmLFWbtaV:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq PcGkWcFVTAxLHvNhBC
	dq PcGkWcFVTAxLHvNhBC
	dq 0
HNLtKPGXCBfeDVUtfx:
	dq AQtgGSKGREfQNtivKE
	dq AFbOcqIUifmLFWbtaV
	dq PcGkWcFVTAxLHvNhBC
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00026D */
MVrEXVCHodXSGpBiJr:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, HnJUDUIEqEJmInwGSM
call BSVM2_Op_LDRL /* OP:0080-0000 */
mov rcx, rdi
mov rdx, KsBRiSKlumIVOdeQQf
call BSVM2_Op_LDRL /* OP:0080-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OKDpNvGvgucmIeIdst
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HnJUDUIEqEJmInwGSM:
	dd 0x00000010
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KsBRiSKlumIVOdeQQf:
	dd 0x00000011
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OKDpNvGvgucmIeIdst:
	dd 0x00000000
	dd 0x00000000
	dd 0x17765F00
	dd 0x000001DF
	dq KOIJKeKWSgfLDSlFUt
	dq KOIJKeKWSgfLDSlFUt
	dq 0
PcGkWcFVTAxLHvNhBC:
	dq MVrEXVCHodXSGpBiJr
	dq OKDpNvGvgucmIeIdst
	dq KOIJKeKWSgfLDSlFUt
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 000275 */
MNtsSbEBQRpOLUpnOi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C23A
mov [rsi+184], rax
mov rcx, rdi
mov rdx, HdvHRUHIuxCHAuEHfe
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+128]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, KwoqhNCiKDkkPKTHhg
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, NpobKBBWThSIERxRvx
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+136]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, PNBdSuBidJXEHHJLsn
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, QVbnUoCTxTqLNDESdH
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, DJkhqeERguNgQNbVlI
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HdvHRUHIuxCHAuEHfe:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KwoqhNCiKDkkPKTHhg:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NpobKBBWThSIERxRvx:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PNBdSuBidJXEHHJLsn:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QVbnUoCTxTqLNDESdH:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
DJkhqeERguNgQNbVlI:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq PwnlRtGHkcEXKOejMW
	dq PwnlRtGHkcEXKOejMW
	dq 0
KOIJKeKWSgfLDSlFUt:
	dq MNtsSbEBQRpOLUpnOi
	dq DJkhqeERguNgQNbVlI
	dq PwnlRtGHkcEXKOejMW
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00028B */
DvrfDsLjgOaFPlikdm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+128]
mov [rsi+184], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CGcarxMSFugiENakkU
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CGcarxMSFugiENakkU:
	dd 0x00000000
	dd 0x00000000
	dd 0x17765D00
	dd 0x000001DF
	dq MmsPKlCXjCNQAJnaBF
	dq MmsPKlCXjCNQAJnaBF
	dq 0
PwnlRtGHkcEXKOejMW:
	dq DvrfDsLjgOaFPlikdm
	dq CGcarxMSFugiENakkU
	dq MmsPKlCXjCNQAJnaBF
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 00028F */
LWgQeAOvNgITFQPbVE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+184]
mov [rsi+136], r12d
mov rax, 0x008D01DF1853C252
mov [rsi+184], rax
mov rcx, rdi
mov rdx, KVntSMBiXnTWFbuJSx
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+128]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, CtHHOIFidgtAHHXJuS
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, IcNGPQHGGwxWNHnMAf
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+136]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, AlwVOHLKkxNDMCcVsS
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, EaOAbIHlQSIqITSjsq
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, NiWlhHQOpTTUGQSjLl
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
KVntSMBiXnTWFbuJSx:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CtHHOIFidgtAHHXJuS:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IcNGPQHGGwxWNHnMAf:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AlwVOHLKkxNDMCcVsS:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EaOAbIHlQSIqITSjsq:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
NiWlhHQOpTTUGQSjLl:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq KdNxOFImxjgeOLNvra
	dq KdNxOFImxjgeOLNvra
	dq 0
MmsPKlCXjCNQAJnaBF:
	dq LWgQeAOvNgITFQPbVE
	dq NiWlhHQOpTTUGQSjLl
	dq KdNxOFImxjgeOLNvra
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0002A6 */
AoJcVJQQOTJFAXefpH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+128]
mov r12d, r12d
add r12d, 2
mov [rsi+128], r12
mov eax, r12d
imul eax, [rsi+136]
mov [rsi+136], eax
mov rax, 0x008D01DF1853C269
mov [rsi+184], rax
mov rcx, rdi
mov rdx, GErIKuLuOWDBMoqfAB
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+128]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, FAbbguHOBWDKNXaCmd
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, LesHGaPIDElNAwcruj
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+136]
mov [rsi+200], r12
mov rcx, rdi
mov rdx, BMbEriDTtjUGAsBWtK
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, BPQmjPCrIPMtOcjesI
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, NdmwGBQKtQubATPDQl
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GErIKuLuOWDBMoqfAB:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FAbbguHOBWDKNXaCmd:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LesHGaPIDElNAwcruj:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BMbEriDTtjUGAsBWtK:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BPQmjPCrIPMtOcjesI:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
NdmwGBQKtQubATPDQl:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq GOqVqeDOTkJNPQNNpX
	dq GOqVqeDOTkJNPQNNpX
	dq 0
KdNxOFImxjgeOLNvra:
	dq AoJcVJQQOTJFAXefpH
	dq NdmwGBQKtQubATPDQl
	dq GOqVqeDOTkJNPQNNpX
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0002C5 */
JMrNPWIhEwbdJGHjKF:
mov rdx, PTPooxCJxKwEHCoHou
jmp BSVM2_TrOp_CALLG
align 8
PTPooxCJxKwEHCoHou:
	dd 0x00000000
	dd 0x00000000
	dd 0x17766100
	dd 0x000001DF
	dq NMvpgTIwFpmaCUohMr
	dq NMvpgTIwFpmaCUohMr
	dq 0
GOqVqeDOTkJNPQNNpX:
	dq JMrNPWIhEwbdJGHjKF
	dq PTPooxCJxKwEHCoHou
	dq NMvpgTIwFpmaCUohMr
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0002C7 */
DCdOQhADRualDNjaCx:
mov rdx, NPNrgTOmLtmOLPoWVl
jmp BSVM2_TrOp_CALLG
align 8
NPNrgTOmLtmOLPoWVl:
	dd 0x00000000
	dd 0x00000000
	dd 0x17766300
	dd 0x000001DF
	dq IvSNNWDSJTnsQGiTTC
	dq IvSNNWDSJTnsQGiTTC
	dq 0
NMvpgTIwFpmaCUohMr:
	dq DCdOQhADRualDNjaCx
	dq NPNrgTOmLtmOLPoWVl
	dq IvSNNWDSJTnsQGiTTC
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0002C9 */
QfHMmhPiEMhFGnsePK:
mov rdx, OuOdHHMfgVQiIPrfeL
jmp BSVM2_TrOp_CALLG
align 8
OuOdHHMfgVQiIPrfeL:
	dd 0x00000000
	dd 0x00000000
	dd 0x17766900
	dd 0x000001DF
	dq GptKKVNSjxwEJTimmi
	dq GptKKVNSjxwEJTimmi
	dq 0
IvSNNWDSJTnsQGiTTC:
	dq QfHMmhPiEMhFGnsePK
	dq OuOdHHMfgVQiIPrfeL
	dq GptKKVNSjxwEJTimmi
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0002CB */
CfXgqaEKjqaEFDWviu:
mov rdx, KDQTJjAehtvbPCQoNc
jmp BSVM2_TrOp_CALLG
align 8
KDQTJjAehtvbPCQoNc:
	dd 0x00000000
	dd 0x00000000
	dd 0x17766700
	dd 0x000001DF
	dq IGoRCNGAppQXHhbqlJ
	dq IGoRCNGAppQXHhbqlJ
	dq 0
GptKKVNSjxwEJTimmi:
	dq CfXgqaEKjqaEFDWviu
	dq KDQTJjAehtvbPCQoNc
	dq IGoRCNGAppQXHhbqlJ
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0002CD */
BkOOdkEBqmDVPCtbht:
mov rdx, GaraXOGvaLKIMCfOaL
jmp BSVM2_TrOp_CALLG
align 8
GaraXOGvaLKIMCfOaL:
	dd 0x00000000
	dd 0x00000000
	dd 0x17766B00
	dd 0x000001DF
	dq LtuHDPQaVfWpOqddho
	dq LtuHDPQaVfWpOqddho
	dq 0
IGoRCNGAppQXHhbqlJ:
	dq BkOOdkEBqmDVPCtbht
	dq GaraXOGvaLKIMCfOaL
	dq LtuHDPQaVfWpOqddho
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0002CF */
MbRXoIAnuNptLPUpKP:
mov rdx, MxEFpkEJELcSHXteNl
mov rax, [rdx+0]
jmp rax
align 8
LtuHDPQaVfWpOqddho:
	dq MbRXoIAnuNptLPUpKP
	dq 0
	dq MxEFpkEJELcSHXteNl
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* main 0002D1 */
QdoAtxMSGbtwGtLupq:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, NBsabxMdvnVGMsTtAv
call BSVM2_Op_DFXOBJ /* OP:0142-0000 */
mov rcx, rdi
mov rdx, NTiDiMOVnScnDBjTLT
call BSVM2_Op_DFXX /* OP:0409-0000 */
mov rcx, rdi
mov rdx, LgtjqmKfUWhLONbjSx
call BSVM2_Op_DFXX /* OP:0409-0000 */
mov rcx, rdi
mov rdx, QLHheOBNtIPwPtvgUa
call BSVM2_Op_DFXX /* OP:0409-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, OBftBbOqubAEOdwbOv
add rsp, 504
jmp BSVM2_TrOp_RETV
align 8
NBsabxMdvnVGMsTtAv:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17764170
	dd 0x000001DF
	dq 0
NTiDiMOVnScnDBjTLT:
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LgtjqmKfUWhLONbjSx:
	dd 0x00000007
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QLHheOBNtIPwPtvgUa:
	dd 0x00000008
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OBftBbOqubAEOdwbOv:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq MxEFpkEJELcSHXteNl
	dq 0
MxEFpkEJELcSHXteNl:
	dq QdoAtxMSGbtwGtLupq
	dq OBftBbOqubAEOdwbOv
	dq MxEFpkEJELcSHXteNl
	dq 0x000001DF17766E30
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* (null) 000000 */
MRUeLIBWkeKoKkjUxh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
mov [rsi+16], rax
mov rax, [rsi+8]
mov [rsi+24], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BsdMpaEPTeqKPFWhPH
add rsp, 504
jmp BSVM2_TrOp_NatCallG0
align 8
BsdMpaEPTeqKPFWhPH:
	dd 0x01840000
	dd 0x00000000
	dd 0xC16A32BA
	dd 0x00007FFE
	dq DWLLNfOQTfTAITTcOs
	dq DWLLNfOQTfTAITTcOs
	dq 0
NCRttRDEJtdDKGdJJs:
	dq MRUeLIBWkeKoKkjUxh
	dq BsdMpaEPTeqKPFWhPH
	dq DWLLNfOQTfTAITTcOs
	dq 0x000001DF17770540
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* (null) 000006 */
CvEDSoLsdrqvLnSoVq:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, PDVRxKDqaFLRLDucBN
call BSVM2_Op_DROPAA /* OP:0161-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LfBGWfPGuRtlCOLofx
add rsp, 504
jmp BSVM2_TrOp_RETV
align 8
PDVRxKDqaFLRLDucBN:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LfBGWfPGuRtlCOLofx:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq DWLLNfOQTfTAITTcOs
	dq 0
DWLLNfOQTfTAITTcOs:
	dq CvEDSoLsdrqvLnSoVq
	dq LfBGWfPGuRtlCOLofx
	dq DWLLNfOQTfTAITTcOs
	dq 0x000001DF17770540
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* fib 000000 */
NOVnJVElWiWKGmPIMI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+0]
mov ecx, 2
sub eax, ecx
sub ecx, [rsi+0]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+8], eax
mov ecx, [rsi+8]
mov rax, IASOokCTRJfVPjSkMQ
cmp ecx, 0
mov r10, HunJndNejdCLBCfjiF
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
PjnUtnLupFfvGsBAvV:
	dq NOVnJVElWiWKGmPIMI
	dq 0
	dq HunJndNejdCLBCfjiF
	dq 0x000001DF17765390
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* fib 000004 */
EQPkxdJTiQcIBrjJxR:
mov rdx, COFVSKFkEDRrGbcbkV
jmp BSVM2_TrOp_RETIC
align 8
COFVSKFkEDRrGbcbkV:
	dd 0x00050000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq HunJndNejdCLBCfjiF
	dq HunJndNejdCLBCfjiF
	dq 0
IASOokCTRJfVPjSkMQ:
	dq EQPkxdJTiQcIBrjJxR
	dq COFVSKFkEDRrGbcbkV
	dq HunJndNejdCLBCfjiF
	dq 0x000001DF17765390
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* fib 000006 */
BwJgpvClQcwCDEkOwE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+0]
sub eax, 1
mov [rsi+8], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, OcKGsCEKIcfbEohAfw
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
OcKGsCEKIcfbEohAfw:
	dd 0x00000000
	dd 0x00000000
	dd 0x177652B0
	dd 0x000001DF
	dq ISjKhFIQQithKNHQMc
	dq ISjKhFIQQithKNHQMc
	dq 0
HunJndNejdCLBCfjiF:
	dq BwJgpvClQcwCDEkOwE
	dq OcKGsCEKIcfbEohAfw
	dq ISjKhFIQQithKNHQMc
	dq 0x000001DF17765390
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* fib 00000B */
HedQrEJfCjRWOxUkhS:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+0]
sub eax, 2
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, NltaobIgKFsVNgxHJg
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NltaobIgKFsVNgxHJg:
	dd 0x00000000
	dd 0x00010001
	dd 0x177652B0
	dd 0x000001DF
	dq DxHFdUIWhushAUUpao
	dq DxHFdUIWhushAUUpao
	dq 0
ISjKhFIQQithKNHQMc:
	dq HedQrEJfCjRWOxUkhS
	dq NltaobIgKFsVNgxHJg
	dq DxHFdUIWhushAUUpao
	dq 0x000001DF17765390
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* fib 000010 */
BgBEhPPuhMeOKGmicg:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+8]
add r12d, [rsi+16]
mov [rsi+8], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, BCVxOrQHGALqEFgmOG
add rsp, 504
jmp BSVM2_TrOp_RETI
align 8
BCVxOrQHGALqEFgmOG:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq DxHFdUIWhushAUUpao
	dq 0
DxHFdUIWhushAUUpao:
	dq BgBEhPPuhMeOKGmicg
	dq BCVxOrQHGALqEFgmOG
	dq DxHFdUIWhushAUUpao
	dq 0x000001DF17765390
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* sorttst 000000 */
MMVJmqGbHDJaEkMWgg:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+16]
mov [rsi+24], r12
mov rcx, rdi
mov rdx, JOhRffKPvpVdNrPesQ
call BSVM2_Op_NEWARR_I /* OP:0089-0000 */
mov rax, [rsi+24]
mov [rsi+0], rax
mov eax, 0x00000000
mov [rsi+8], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, HrWpnfGaeDANGWeLUs
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JOhRffKPvpVdNrPesQ:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NLkUXLMIFLaRMeGwVC:
	dq MMVJmqGbHDJaEkMWgg
	dq 0
	dq HrWpnfGaeDANGWeLUs
	dq 0x000001DF17765670
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* sorttst 00000A */
PfRrWBJgGpRdDVOWWX:
mov rdx, OXRgDpNsfBmpHuQixc
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
OXRgDpNsfBmpHuQixc:
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq NLTNTvEpgDwePBIBcr
	dq AtrfHuInBxTAQRJBQg
	dq 0
HrWpnfGaeDANGWeLUs:
	dq PfRrWBJgGpRdDVOWWX
	dq OXRgDpNsfBmpHuQixc
	dq AtrfHuInBxTAQRJBQg
	dq 0x000001DF17765670
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* sorttst 00000F */
QEMhNICWdAVrCtMOlg:
mov rdx, OnApdaJiQDkEQbHVnB
jmp BSVM2_TrOp_NatCallG0
align 8
OnApdaJiQDkEQbHVnB:
	dd 0x00060000
	dd 0x00000000
	dd 0x036A0130
	dd 0x00007FFF
	dq CUqerwMhnHOvBQBnIv
	dq CUqerwMhnHOvBQBnIv
	dq 0
NLTNTvEpgDwePBIBcr:
	dq QEMhNICWdAVrCtMOlg
	dq OnApdaJiQDkEQbHVnB
	dq CUqerwMhnHOvBQBnIv
	dq 0x000001DF17765670
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* sorttst 000011 */
BtarATGgghxcQpPGfM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, MiCcHDHhXAAdFmrPlI
call BSVM2_Op_STIXILL /* OP:0187-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, OKBpWwHmhSGjJbTFMI
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
MiCcHDHhXAAdFmrPlI:
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CUqerwMhnHOvBQBnIv:
	dq BtarATGgghxcQpPGfM
	dq 0
	dq OKBpWwHmhSGjJbTFMI
	dq 0x000001DF17765670
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* sorttst 000016 */
BQEGQDCpFuqjADtxdX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+8]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, HrWpnfGaeDANGWeLUs
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OKBpWwHmhSGjJbTFMI:
	dq BQEGQDCpFuqjADtxdX
	dq 0
	dq HrWpnfGaeDANGWeLUs
	dq 0x000001DF17765670
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* sorttst 00001B */
OLbCxqLsTkGGKRBiiw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
mov [rsi+24], rax
mov eax, [rsi+16]
mov [rsi+32], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, ASLCwXKfmWUfDuVOGa
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
ASLCwXKfmWUfDuVOGa:
	dd 0x00000000
	dd 0x00000000
	dd 0x17765420
	dd 0x000001DF
	dq ADiaBfLqBLqgCXXeNI
	dq ADiaBfLqBLqgCXXeNI
	dq 0
AtrfHuInBxTAQRJBQg:
	dq OLbCxqLsTkGGKRBiiw
	dq ASLCwXKfmWUfDuVOGa
	dq ADiaBfLqBLqgCXXeNI
	dq 0x000001DF17765670
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* sorttst 000021 */
KwrQjlCVWXxoNVRqIg:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JaTaSjBQbwOGHjcRIN
add rsp, 504
jmp BSVM2_TrOp_RETV
align 8
JaTaSjBQbwOGHjcRIN:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq ADiaBfLqBLqgCXXeNI
	dq 0
ADiaBfLqBLqgCXXeNI:
	dq KwrQjlCVWXxoNVRqIg
	dq JaTaSjBQbwOGHjcRIN
	dq ADiaBfLqBLqgCXXeNI
	dq 0x000001DF17765670
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* selsort 000000 */
HphSEtAPdRPSKkegkI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+32]
mov [rsi+48], r12
mov rcx, rdi
mov rdx, LaObUsGMOKKVOahGQr
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rax, [rsi+48]
mov [rsi+0], rax
mov eax, 0x00000000
mov [rsi+8], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BkMEmVEcHgjmGvVAnX
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LaObUsGMOKKVOahGQr:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QcqBWrMgqnwFJJSxNC:
	dq HphSEtAPdRPSKkegkI
	dq 0
	dq BkMEmVEcHgjmGvVAnX
	dq 0x000001DF17765500
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* selsort 00000A */
PAWDTNJcueCaBxPfSC:
mov rdx, OPXehlAmewvkBBCsID
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
OPXehlAmewvkBBCsID:
	dd 0x00050001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq OJoKlOBwEJtIAHmGWq
	dq GLwMQbMxpFsLAqxoCA
	dq 0
BkMEmVEcHgjmGvVAnX:
	dq PAWDTNJcueCaBxPfSC
	dq OPXehlAmewvkBBCsID
	dq GLwMQbMxpFsLAqxoCA
	dq 0x000001DF17765500
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* selsort 00000F */
QnlktPMEGPsEKebfLF:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+8]
add eax, 1
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, GUCsoSIiePhFLninQj
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OJoKlOBwEJtIAHmGWq:
	dq QnlktPMEGPsEKebfLF
	dq 0
	dq GUCsoSIiePhFLninQj
	dq 0x000001DF17765500
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* selsort 000014 */
CqFXLFNJRivWPtpIqG:
mov rdx, AnoLIrBPukCOEqMuAB
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
AnoLIrBPukCOEqMuAB:
	dd 0x00050002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq ErdtjOAkncHnEKUqxA
	dq BEwukLBCCESCCSvQWG
	dq 0
GUCsoSIiePhFLninQj:
	dq CqFXLFNJRivWPtpIqG
	dq AnoLIrBPukCOEqMuAB
	dq BEwukLBCCESCCSvQWG
	dq 0x000001DF17765500
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* selsort 000019 */
HxthUOJRKXlUKdLSEt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, [rsi+0]
mov r12d, [rsi+16]
mov [rsi+48], r13
mov rax, r13
movsxd rcx, r12d
mov edx, [rax+rcx*4]
mov [rsi+48], edx
mov r12, [rsi+0]
mov r13d, [rsi+8]
mov [rsi+56], r12
mov [rsi+64], r13
mov rax, r12
movsxd rcx, r13d
mov edx, [rax+rcx*4]
mov [rsi+56], edx
mov ecx, [rsi+48]
mov rax, CNdjKpDXcjxrBokcqe
cmp ecx, [rsi+56]
mov r10, ExGRGBECaephECntTJ
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
ErdtjOAkncHnEKUqxA:
	dq HxthUOJRKXlUKdLSEt
	dq 0
	dq ExGRGBECaephECntTJ
	dq 0x000001DF17765500
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* selsort 000029 */
JWtkVlNOIfBOJdcORG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r13d, [rsi+8]
movsxd rcx, r13d
mov r12d, [r12+rcx*4]
mov [rsi+24], r12d
mov r12, [rsi+0]
mov r13d, [rsi+16]
movsxd rcx, r13d
mov r12d, [r12+rcx*4]
mov r13, [rsi+0]
mov r14d, [rsi+8]
movsxd rcx, r14d
mov [r13+rcx*4], r12d
mov r12d, [rsi+24]
mov r13, [rsi+0]
mov r14d, [rsi+16]
mov [rsi+56], r13
mov [rsi+64], r14
mov [rsi+48], r12
movsxd rcx, r14d
mov [r13+rcx*4], r12d
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, ExGRGBECaephECntTJ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CNdjKpDXcjxrBokcqe:
	dq JWtkVlNOIfBOJdcORG
	dq 0
	dq ExGRGBECaephECntTJ
	dq 0x000001DF17765500
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* selsort 000046 */
FljPqAJHPRhwHXLced:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, GUCsoSIiePhFLninQj
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
ExGRGBECaephECntTJ:
	dq FljPqAJHPRhwHXLced
	dq 0
	dq GUCsoSIiePhFLninQj
	dq 0x000001DF17765500
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* selsort 00004B */
CPufQeDeLbeTJkOIrB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+8]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, BkMEmVEcHgjmGvVAnX
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
BEwukLBCCESCCSvQWG:
	dq CPufQeDeLbeTJkOIrB
	dq 0
	dq BkMEmVEcHgjmGvVAnX
	dq 0x000001DF17765500
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* selsort 000050 */
BhCKWLFDeQCeHOgnLO:
mov rdx, NcQpgFQJbhkjCJkRFm
jmp BSVM2_TrOp_RETIC
align 8
NcQpgFQJbhkjCJkRFm:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq GLwMQbMxpFsLAqxoCA
	dq 0
GLwMQbMxpFsLAqxoCA:
	dq BhCKWLFDeQCeHOgnLO
	dq NcQpgFQJbhkjCJkRFm
	dq GLwMQbMxpFsLAqxoCA
	dq 0x000001DF17765500
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* $CTOR$ 000000 */
HTGwUgLPVKlGJEkauP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C281
mov [rsi+8], rax
mov rcx, rdi
mov rdx, FgTQHPAtGvpiOqbwXK
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r13, 0x1C00000200000004
mov [rsi+24], r13
mov rcx, rdi
mov rdx, EgKOdiPEElwBNCeOqK
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, AsRIRKJhwiKmETmvUM
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FgTQHPAtGvpiOqbwXK:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EgKOdiPEElwBNCeOqK:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AsRIRKJhwiKmETmvUM:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq LnHgLrPQDhiiFjrBBM
	dq LnHgLrPQDhiiFjrBBM
	dq 0
EpGSrTNFMfWWLXaxFt:
	dq HTGwUgLPVKlGJEkauP
	dq AsRIRKJhwiKmETmvUM
	dq LnHgLrPQDhiiFjrBBM
	dq 0x000001DF17765000
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* $CTOR$ 00000C */
FEMvVgAeStmUQkPRqL:
mov rdx, FqCURTPnPFAhFRhpNJ
jmp BSVM2_TrOp_RETV
align 8
FqCURTPnPFAhFRhpNJ:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq LnHgLrPQDhiiFjrBBM
	dq 0
LnHgLrPQDhiiFjrBBM:
	dq FEMvVgAeStmUQkPRqL
	dq FqCURTPnPFAhFRhpNJ
	dq LnHgLrPQDhiiFjrBBM
	dq 0x000001DF17765000
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* method0 000000 */
GPnVwpMqoKdJQGUkJC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, AlCLeBFCKWCpCACcjT
call BSVM2_Op_LDTHISI /* OP:0120-0000 */
mov rcx, rdi
mov rdx, OOwlCSMHBlugIEXHxN
call BSVM2_Op_LDTHISI /* OP:0120-0000 */
mov r12, [rsi+0]
mov r13, [rsi+8]
add r12d, r13d
mov [rsi+0], r12
mov eax, r12d
cvtsi2sd xmm0, eax
movsd [rsi+0], xmm0
mov rcx, rdi
mov rdx, ORwEkpMPPuxTPtLvXm
call BSVM2_Op_LDTHISD /* OP:0120-0000 */
mov rcx, rdi
mov rdx, IbIIWaESRicFIMArFE
call BSVM2_Op_ADDD /* OP:0014-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, FmbLLXQovulfCDXvFw
add rsp, 504
jmp BSVM2_TrOp_RETD
align 8
AlCLeBFCKWCpCACcjT:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x17764AD0
	dd 0x000001DF
	dq 0
OOwlCSMHBlugIEXHxN:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x17764C40
	dd 0x000001DF
	dq 0
ORwEkpMPPuxTPtLvXm:
	dd 0x00030000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x17764DB0
	dd 0x000001DF
	dq 0
IbIIWaESRicFIMArFE:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FmbLLXQovulfCDXvFw:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq HpWQCHDrEgjeJTuGNS
	dq 0
HpWQCHDrEgjeJTuGNS:
	dq GPnVwpMqoKdJQGUkJC
	dq FmbLLXQovulfCDXvFw
	dq HpWQCHDrEgjeJTuGNS
	dq 0x000001DF17765200
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* tst_ref 000000 */
NtxUJvMnpafGDhTkKu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
mov edx, [rax]
mov r12d, edx
mov rax, [rsi+8]
mov edx, [rax]
mov r13d, edx
mov [rsi+24], r13
add r12d, r13d
mov rax, [rsi+0]
mov edx, r12d
mov [rax], edx
mov rax, [rsi+8]
mov edx, [rax]
mov [rsi+16], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, BGQoVOIOqrcIHvSDqR
add rsp, 504
jmp BSVM2_TrOp_RETI
align 8
BGQoVOIOqrcIHvSDqR:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq DMuBKbJugiWKHXtUDL
	dq 0
DMuBKbJugiWKHXtUDL:
	dq NtxUJvMnpafGDhTkKu
	dq BGQoVOIOqrcIHvSDqR
	dq DMuBKbJugiWKHXtUDL
	dq 0x000001DF17765FE0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* tst_switch 000000 */
CrvdPABWlXXCHqOpOF:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+8]
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DHeCqWEWvvQqIsfKEc
add rsp, 504
jmp BSVM2_TrOp_JCMP_GEIC
align 8
DHeCqWEWvvQqIsfKEc:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000006
	dd 0x00000000
	dq CtqgACECwhUlCJIpRO
	dq AsakgwNonRfgDeTAwa
	dq 0
QUlwVANMoxFxFVLpbW:
	dq CrvdPABWlXXCHqOpOF
	dq DHeCqWEWvvQqIsfKEc
	dq AsakgwNonRfgDeTAwa
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000007 */
GUhfDaBIGiQOKvsFlg:
mov rdx, EHSECUJFRQEvNsJbnd
jmp BSVM2_TrOp_JCMP_GEIC
align 8
EHSECUJFRQEvNsJbnd:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq KdcQQtMJfRULExQktE
	dq DDntCxFqpDWJBGjjHr
	dq 0
CtqgACECwhUlCJIpRO:
	dq GUhfDaBIGiQOKvsFlg
	dq EHSECUJFRQEvNsJbnd
	dq DDntCxFqpDWJBGjjHr
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 00000C */
FRaSbmBJDLCHBmJwUD:
mov rdx, DbsVOVQVKxDmGjlehH
jmp BSVM2_TrOp_JCMP_GEIC
align 8
DbsVOVQVKxDmGjlehH:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq DtTpLcHWrDlOBUMdoK
	dq EefLmoINHUrXArhaev
	dq 0
KdcQQtMJfRULExQktE:
	dq FRaSbmBJDLCHBmJwUD
	dq DbsVOVQVKxDmGjlehH
	dq EefLmoINHUrXArhaev
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000011 */
EDThbKJvjeloFixWGc:
mov rdx, HsQcLkKnpqDwJlDCkP
mov rax, [rdx+0]
jmp rax
align 8
DtTpLcHWrDlOBUMdoK:
	dq EDThbKJvjeloFixWGc
	dq 0
	dq HsQcLkKnpqDwJlDCkP
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000014 */
OiSJNXGDJafXDxDwNi:
mov rdx, ETnqAECsqAvqFIXOxh
jmp BSVM2_TrOp_JCMP_EQIC
align 8
ETnqAECsqAvqFIXOxh:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq HwqgfDLvgcMVNXeLGi
	dq BUGMtVOlrUocDLbJag
	dq 0
EefLmoINHUrXArhaev:
	dq OiSJNXGDJafXDxDwNi
	dq ETnqAECsqAvqFIXOxh
	dq BUGMtVOlrUocDLbJag
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000019 */
FXferrHolFTvCTTuLI:
mov rdx, EnsATHNgPkmmPrxgdp
mov rax, [rdx+0]
jmp rax
align 8
HwqgfDLvgcMVNXeLGi:
	dq FXferrHolFTvCTTuLI
	dq 0
	dq EnsATHNgPkmmPrxgdp
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 00001C */
BmrHwrPKVoNNNrgcAr:
mov rdx, MhIGhCICJMvMAtMFuo
jmp BSVM2_TrOp_JCMP_GEIC
align 8
MhIGhCICJMvMAtMFuo:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000004
	dd 0x00000000
	dq KELeomCAGcEEDKvEUX
	dq ClRvwtODXvKSQNbQrf
	dq 0
DDntCxFqpDWJBGjjHr:
	dq BmrHwrPKVoNNNrgcAr
	dq MhIGhCICJMvMAtMFuo
	dq ClRvwtODXvKSQNbQrf
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000021 */
NKEexBQmomSGCQttdr:
mov rdx, JVuVrDISEkcRIqpUbs
mov rax, [rdx+0]
jmp rax
align 8
KELeomCAGcEEDKvEUX:
	dq NKEexBQmomSGCQttdr
	dq 0
	dq JVuVrDISEkcRIqpUbs
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000024 */
AkGAmBLmsJoTAqQKRS:
mov rdx, LXdWKLDSKWjoCureKa
jmp BSVM2_TrOp_JCMP_EQIC
align 8
LXdWKLDSKWjoCureKa:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000004
	dd 0x00000000
	dq QPlFdOFsgaboKUquTF
	dq HFsOCoINPvDiQgjXHT
	dq 0
ClRvwtODXvKSQNbQrf:
	dq AkGAmBLmsJoTAqQKRS
	dq LXdWKLDSKWjoCureKa
	dq HFsOCoINPvDiQgjXHT
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000029 */
MIiuBBANpRqWIOGpkg:
mov rdx, HNSEwiDjWuEQGCBAWB
mov rax, [rdx+0]
jmp rax
align 8
QPlFdOFsgaboKUquTF:
	dq MIiuBBANpRqWIOGpkg
	dq 0
	dq HNSEwiDjWuEQGCBAWB
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 00002C */
QKUSQjCfAlLaHjxfJG:
mov rdx, OWQBiTHXVVbVKDSOFl
jmp BSVM2_TrOp_JCMP_GEIC
align 8
OWQBiTHXVVbVKDSOFl:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000009
	dd 0x00000000
	dq NlaximDsTGQwQXdotI
	dq QCgHDKAVACRmELsCXE
	dq 0
AsakgwNonRfgDeTAwa:
	dq QKUSQjCfAlLaHjxfJG
	dq OWQBiTHXVVbVKDSOFl
	dq QCgHDKAVACRmELsCXE
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000031 */
LElnQOOAOCRFLmnDck:
mov rdx, JAPafPFkOrVBCoAaTJ
jmp BSVM2_TrOp_JCMP_GEIC
align 8
JAPafPFkOrVBCoAaTJ:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000007
	dd 0x00000000
	dq HosLPUAQfIqALMInbJ
	dq JDKASgAFxmEFFqeKbI
	dq 0
NlaximDsTGQwQXdotI:
	dq LElnQOOAOCRFLmnDck
	dq JAPafPFkOrVBCoAaTJ
	dq JDKASgAFxmEFFqeKbI
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000036 */
GavsQvElIoKfQDuXgP:
mov rdx, OTSBLaFMMQFAKgXmVS
mov rax, [rdx+0]
jmp rax
align 8
HosLPUAQfIqALMInbJ:
	dq GavsQvElIoKfQDuXgP
	dq 0
	dq OTSBLaFMMQFAKgXmVS
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000039 */
BAioWVGlWbBKEJnIDB:
mov rdx, NuiwQEOLjkPeLHQpsc
jmp BSVM2_TrOp_JCMP_EQIC
align 8
NuiwQEOLjkPeLHQpsc:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000007
	dd 0x00000000
	dq HWMkTFEfOSDCNaQtlo
	dq QEsnLmDRenccLgQcIi
	dq 0
JDKASgAFxmEFFqeKbI:
	dq BAioWVGlWbBKEJnIDB
	dq NuiwQEOLjkPeLHQpsc
	dq QEsnLmDRenccLgQcIi
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 00003E */
EohFdRNBvPixEFXRaK:
mov rdx, FDFBANGlLDloLnxkfd
mov rax, [rdx+0]
jmp rax
align 8
HWMkTFEfOSDCNaQtlo:
	dq EohFdRNBvPixEFXRaK
	dq 0
	dq FDFBANGlLDloLnxkfd
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000041 */
KVCJLNPkTtDOHgUkku:
mov rdx, FtwxLrHcReXVGKpaLo
jmp BSVM2_TrOp_JCMP_GEIC
align 8
FtwxLrHcReXVGKpaLo:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000000A
	dd 0x00000000
	dq BGibIjFVOPDvHRlSQC
	dq QpotEjKmTIdEKOxqaA
	dq 0
QCgHDKAVACRmELsCXE:
	dq KVCJLNPkTtDOHgUkku
	dq FtwxLrHcReXVGKpaLo
	dq QpotEjKmTIdEKOxqaA
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000046 */
IlNkirMnInboDRXvuG:
mov rdx, LFCDHXKHIPFgKjiLAj
mov rax, [rdx+0]
jmp rax
align 8
BGibIjFVOPDvHRlSQC:
	dq IlNkirMnInboDRXvuG
	dq 0
	dq LFCDHXKHIPFgKjiLAj
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000049 */
MOfIquGjquJOEbNcrB:
mov rdx, EsctClKNbEBIGERntD
jmp BSVM2_TrOp_JCMP_EQIC
align 8
EsctClKNbEBIGERntD:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000000A
	dd 0x00000000
	dq AgRceNIiLJJqKFkDQi
	dq DTjTBrDhelsSIDVMUm
	dq 0
QpotEjKmTIdEKOxqaA:
	dq MOfIquGjquJOEbNcrB
	dq EsctClKNbEBIGERntD
	dq DTjTBrDhelsSIDVMUm
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 00004E */
HRhRfSNdfKClQpusfG:
mov rdx, EJnItPDMHEfDHRrpum
jmp BSVM2_TrOp_JCMP_EQIC
align 8
EJnItPDMHEfDHRrpum:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000000B
	dd 0x00000000
	dq GRjedcGuQahlPkTeAA
	dq FqEeXMKSdDRSAjbxst
	dq 0
AgRceNIiLJJqKFkDQi:
	dq HRhRfSNdfKClQpusfG
	dq EJnItPDMHEfDHRrpum
	dq FqEeXMKSdDRSAjbxst
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000053 */
OJpjbBEMxQeUGbsrOX:
mov rdx, KJIKFPEoVSVmPrJkGI
mov rax, [rdx+0]
jmp rax
align 8
GRjedcGuQahlPkTeAA:
	dq OJpjbBEMxQeUGbsrOX
	dq 0
	dq KJIKFPEoVSVmPrJkGI
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000056 */
LrFXivHqWhXDGAToBK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000001
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HsQcLkKnpqDwJlDCkP:
	dq LrFXivHqWhXDGAToBK
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 00005F */
HoPTTQCvTCiiFBxvbe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000004
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
BUGMtVOlrUocDLbJag:
	dq HoPTTQCvTCiiFBxvbe
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000068 */
GvSicJPWDshOJgBlWa:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000009
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
EnsATHNgPkmmPrxgdp:
	dq GvSicJPWDshOJgBlWa
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000072 */
QnePkWBUWWWeEemQFb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000010
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JVuVrDISEkcRIqpUbs:
	dq QnePkWBUWWWeEemQFb
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 00007C */
JlPMxaEEFVnVIiXuGq:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000019
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HFsOCoINPvDiQgjXHT:
	dq JlPMxaEEFVnVIiXuGq
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000086 */
QGjBSdNNjvrqJRikNF:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000024
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HNSEwiDjWuEQGCBAWB:
	dq QGjBSdNNjvrqJRikNF
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 000090 */
IQjxklNnsNUUIRmwhx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000031
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OTSBLaFMMQFAKgXmVS:
	dq IQjxklNnsNUUIRmwhx
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 00009A */
JnojKVMfpkIjAQtKjA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000040
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QEsnLmDRenccLgQcIi:
	dq JnojKVMfpkIjAQtKjA
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 0000A4 */
OjsaUmNCBWJfEFNmac:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000051
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FDFBANGlLDloLnxkfd:
	dq OjsaUmNCBWJfEFNmac
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 0000AE */
HCSOPTAtiqfaEMBtSE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000064
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LFCDHXKHIPFgKjiLAj:
	dq HCSOPTAtiqfaEMBtSE
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 0000B8 */
OqbWALFAgpPrMJLTKN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000079
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DTjTBrDhelsSIDVMUm:
	dq OqbWALFAgpPrMJLTKN
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 0000C2 */
ImwpMnBGvkQXLaHBWH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000090
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FqEeXMKSdDRSAjbxst:
	dq ImwpMnBGvkQXLaHBWH
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 0000CC */
QDVKaeJtKsueBUjTWw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0xFFFFFFFF
mov [rsi+0], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OBRhQMGkbwVcMaQhiv
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
KJIKFPEoVSVmPrJkGI:
	dq QDVKaeJtKsueBUjTWw
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_switch 0000D3 */
EkUHdKKAuVRLPgRqOU:
mov rdx, NNLJLmEfSqLFPiJprE
jmp BSVM2_TrOp_RETIL
align 8
NNLJLmEfSqLFPiJprE:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq OBRhQMGkbwVcMaQhiv
	dq 0
OBRhQMGkbwVcMaQhiv:
	dq EkUHdKKAuVRLPgRqOU
	dq NNLJLmEfSqLFPiJprE
	dq OBRhQMGkbwVcMaQhiv
	dq 0x000001DF17765DE0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* tst_func 000000 */
NDchxGKmtghxObMWAo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r13d, 0x00000002
mov r14d, 0x00000003
mov [rsi+8], r13
mov [rsi+16], r14
mov rcx, rdi
mov rdx, CCBmdBPnnOCtDuRCkB
call BSVM2_Op_MKLFCN /* OP:01BC-0000 */
mov rcx, rdi
mov rdx, AXLqULFLwicPOXmkEX
call BSVM2_Op_DSTIXUZL_I /* OP:01BE-0000 */
mov rcx, rdi
mov rdx, DKjDhwDRwwiXElQxML
call BSVM2_Op_DSTIXUZL_I /* OP:01BE-0000 */
mov rax, [rsi+32]
mov [rsi+0], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, PnEsqNFhHVImIdafhU
add rsp, 504
jmp BSVM2_TrOp_CALLL
align 8
CCBmdBPnnOCtDuRCkB:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x1777EC50
	dd 0x000001DF
	dq 0
AXLqULFLwicPOXmkEX:
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DKjDhwDRwwiXElQxML:
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PnEsqNFhHVImIdafhU:
	dd 0x00000000
	dd 0x00000000
	dd 0x17763B60
	dd 0x000001DF
	dq LbowiTAewNDsOSRBec
	dq LbowiTAewNDsOSRBec
	dq 0
LKlXOvIBfEukFgkLUS:
	dq NDchxGKmtghxObMWAo
	dq PnEsqNFhHVImIdafhU
	dq LbowiTAewNDsOSRBec
	dq 0x000001DF177661E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_func 000015 */
KoxoMPLpWXDfEHpejE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+32]
mov [rsi+24], r12d
mov rax, 0x008D01DF1853C297
mov [rsi+32], rax
mov rcx, rdi
mov rdx, KpnSchQFfOLpEwCcuG
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+8]
mov [rsi+48], r12
mov rcx, rdi
mov rdx, EOcfFUPLvbCpMENjoM
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, KuuGJrCfgKORQqTKjW
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+16]
mov [rsi+48], r12
mov rcx, rdi
mov rdx, NkddtDDsJetiPadQfm
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, LebGfWLiNkLuLhxBsp
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+24]
mov [rsi+48], r12
mov rcx, rdi
mov rdx, FNggDwQhJAaNLteJnC
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, FRTCTMImtXKNEaVSEt
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, JcvcDFMNsxawEaURoc
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
KpnSchQFfOLpEwCcuG:
	dd 0x00040003
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EOcfFUPLvbCpMENjoM:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KuuGJrCfgKORQqTKjW:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NkddtDDsJetiPadQfm:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LebGfWLiNkLuLhxBsp:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
FNggDwQhJAaNLteJnC:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FRTCTMImtXKNEaVSEt:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
JcvcDFMNsxawEaURoc:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq HmtbEWCWsGKQDAeAan
	dq HmtbEWCWsGKQDAeAan
	dq 0
LbowiTAewNDsOSRBec:
	dq KoxoMPLpWXDfEHpejE
	dq JcvcDFMNsxawEaURoc
	dq HmtbEWCWsGKQDAeAan
	dq 0x000001DF177661E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_func 000032 */
OGDUxvNIJeLFBpmmVm:
mov rdx, EGrOeQLNlDSUPhGrJJ
jmp BSVM2_TrOp_RETV
align 8
EGrOeQLNlDSUPhGrJJ:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq HmtbEWCWsGKQDAeAan
	dq 0
HmtbEWCWsGKQDAeAan:
	dq OGDUxvNIJeLFBpmmVm
	dq EGrOeQLNlDSUPhGrJJ
	dq HmtbEWCWsGKQDAeAan
	dq 0x000001DF177661E0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* (null) 000000 */
OGQlHwLnegFAPlxFCi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, MUQmwqJPNxcDPdlEbv
call BSVM2_Op_LDLXI /* OP:0084-0000 */
mov rcx, rdi
mov rdx, BXtCHKCCoSSJIDdRfO
call BSVM2_Op_LDLXI /* OP:0084-0000 */
mov r12, [rsi+0]
add r12d, [rsi+8]
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, IekiCiDxntblJTkrPt
add rsp, 504
jmp BSVM2_TrOp_RETI
align 8
MUQmwqJPNxcDPdlEbv:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BXtCHKCCoSSJIDdRfO:
	dd 0x00000001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IekiCiDxntblJTkrPt:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq PcSmFcQBJgxGGEMbwe
	dq 0
PcSmFcQBJgxGGEMbwe:
	dq OGQlHwLnegFAPlxFCi
	dq IekiCiDxntblJTkrPt
	dq PcSmFcQBJgxGGEMbwe
	dq 0x000001DF1777ED30
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* tst_func2 000000 */
MpPQbcPeEEJPDVVrxr:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, KTSmeBCIlEQePgRfWh
call BSVM2_Op_IFXLFCN /* OP:01BA-0000 */
mov r12, [rsi+32]
mov [rsi+40], r12
mov rcx, rdi
mov rdx, ImiuwkGuJbiMEMnfBd
call BSVM2_Op_DSTIXUZRL_A /* OP:01BF-0000 */
mov rcx, rdi
mov rdx, BvBolVJCaOKbJmTHXH
call BSVM2_Op_DSTIXUZRL_A /* OP:01BF-0000 */
mov eax, 0x00000003
mov [rsi+8], eax
mov eax, 0x00000004
mov [rsi+16], eax
mov r12, [rsi+32]
mov [rsi+40], r12
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, JawNETDTeJRCPdLjaB
add rsp, 504
jmp BSVM2_TrOp_CALLL
align 8
KTSmeBCIlEQePgRfWh:
	dd 0x00000004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x1777F810
	dd 0x000001DF
	dq 0
ImiuwkGuJbiMEMnfBd:
	dd 0x00010000
	dd 0x00000004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BvBolVJCaOKbJmTHXH:
	dd 0x00020001
	dd 0x00000004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JawNETDTeJRCPdLjaB:
	dd 0x00000000
	dd 0x00000000
	dd 0x17763B60
	dd 0x000001DF
	dq HUmDhVGwwOBaQeNqfB
	dq HUmDhVGwwOBaQeNqfB
	dq 0
DLXQLkCHGRAvOdDskn:
	dq MpPQbcPeEEJPDVVrxr
	dq JawNETDTeJRCPdLjaB
	dq HUmDhVGwwOBaQeNqfB
	dq 0x000001DF177663E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_func2 00001A */
CDcKfxFBFHqFGETsGd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+40]
mov [rsi+24], r12d
mov rax, 0x008D01DF1853C2B3
mov [rsi+40], rax
mov rcx, rdi
mov rdx, EMxsnTQIvQkbGdVhnR
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+8]
mov [rsi+56], r12
mov rcx, rdi
mov rdx, HHchBXQnMGvvCpIPMq
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, IcadVQAsnadgMkFRxu
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+16]
mov [rsi+56], r12
mov rcx, rdi
mov rdx, NcTqbDFlkldiAfHCgR
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, EmJsdLHxjwxxFkEjhM
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+24]
mov [rsi+56], r12
mov rcx, rdi
mov rdx, HqtCXXIqMsxHEXOMqW
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, KqWxwvBPdhgGEWHPOp
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, ESUnfPGrrrMbETdDQP
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
EMxsnTQIvQkbGdVhnR:
	dd 0x00040003
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HHchBXQnMGvvCpIPMq:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IcadVQAsnadgMkFRxu:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NcTqbDFlkldiAfHCgR:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EmJsdLHxjwxxFkEjhM:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
HqtCXXIqMsxHEXOMqW:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KqWxwvBPdhgGEWHPOp:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
ESUnfPGrrrMbETdDQP:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq QOooHIHoXEUcNMBNhf
	dq QOooHIHoXEUcNMBNhf
	dq 0
HUmDhVGwwOBaQeNqfB:
	dq CDcKfxFBFHqFGETsGd
	dq ESUnfPGrrrMbETdDQP
	dq QOooHIHoXEUcNMBNhf
	dq 0x000001DF177663E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_func2 000037 */
JuEGogCuJiomFjTlLr:
mov rdx, GRqCwoJNsbpNPWNxcC
mov rax, [rdx+0]
jmp rax
align 8
QOooHIHoXEUcNMBNhf:
	dq JuEGogCuJiomFjTlLr
	dq 0
	dq GRqCwoJNsbpNPWNxcC
	dq 0x000001DF177663E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_func2 000039 */
MreCQvDQgaQMIAvphe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, AbRkacAMsbKHPrSWOE
call BSVM2_Op_DFXLFCN /* OP:01BB-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, JjTILROTkPHmDWgDtc
add rsp, 504
jmp BSVM2_TrOp_RETV
align 8
AbRkacAMsbKHPrSWOE:
	dd 0x00000004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x1777F810
	dd 0x000001DF
	dq 0
JjTILROTkPHmDWgDtc:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq GRqCwoJNsbpNPWNxcC
	dq 0
GRqCwoJNsbpNPWNxcC:
	dq MreCQvDQgaQMIAvphe
	dq JjTILROTkPHmDWgDtc
	dq GRqCwoJNsbpNPWNxcC
	dq 0x000001DF177663E0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* (null) 000000 */
DTPwfALKQDOgJqjeCk:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, EJaBfUMNOdthKwchBp
call BSVM2_Op_LDDRLXI /* OP:0086-0000 */
mov rcx, rdi
mov rdx, CVGPpgAVbDTdPxWoex
call BSVM2_Op_LDDRLXI /* OP:0086-0000 */
mov r12, [rsi+0]
add r12d, [rsi+8]
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, CqjMWvInwnjQNeokKp
add rsp, 504
jmp BSVM2_TrOp_RETI
align 8
EJaBfUMNOdthKwchBp:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CVGPpgAVbDTdPxWoex:
	dd 0x00000001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CqjMWvInwnjQNeokKp:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq AtHstxGumGRbJmUQXx
	dq 0
AtHstxGumGRbJmUQXx:
	dq DTPwfALKQDOgJqjeCk
	dq CqjMWvInwnjQNeokKp
	dq AtHstxGumGRbJmUQXx
	dq 0x000001DF1777F8F0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* tst_letlec 000000 */
LrxjDjIlfXhmEohJHb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C2D0
mov [rsi+8], rax
xor rax, rax
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LSvqxfLhWlJiDsQrDC
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
LSvqxfLhWlJiDsQrDC:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq KSCnLOEjmImrQPtsxj
	dq KSCnLOEjmImrQPtsxj
	dq 0
DwLMOaQdEmWFBVITIX:
	dq LrxjDjIlfXhmEohJHb
	dq LSvqxfLhWlJiDsQrDC
	dq KSCnLOEjmImrQPtsxj
	dq 0x000001DF177669E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_letlec 000005 */
GSLgHrJhHrwvGRcfwK:
mov rdx, AmDvimOePhpOOQNipN
jmp BSVM2_TrOp_BEGLEC
align 8
AmDvimOePhpOOQNipN:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq AsdHIUIBeaetFrliGa
	dq LcFlBVOXVhaBKAngPc
	dq 0
KSCnLOEjmImrQPtsxj:
	dq GSLgHrJhHrwvGRcfwK
	dq AmDvimOePhpOOQNipN
	dq LcFlBVOXVhaBKAngPc
	dq 0x000001DF177669E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_letlec 00000A */
EPkVeIHcWSpjMxhxkm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C2E2
mov [rsi+8], rax
xor rax, rax
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NWOVAJMuILpBIiusFU
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NWOVAJMuILpBIiusFU:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq OSdhvjKCjfqKNSGnTg
	dq OSdhvjKCjfqKNSGnTg
	dq 0
AsdHIUIBeaetFrliGa:
	dq EPkVeIHcWSpjMxhxkm
	dq NWOVAJMuILpBIiusFU
	dq OSdhvjKCjfqKNSGnTg
	dq 0x000001DF177669E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_letlec 00000F */
EOiNHmGvFbviLHxPMH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
mov [rsi+8], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DEgeiEJlDtuIJrkLxV
add rsp, 504
jmp BSVM2_TrOp_THROW
align 8
DEgeiEJlDtuIJrkLxV:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq HvVgdjFMaHsAJpurJn
	dq HvVgdjFMaHsAJpurJn
	dq 0
OSdhvjKCjfqKNSGnTg:
	dq EOiNHmGvFbviLHxPMH
	dq DEgeiEJlDtuIJrkLxV
	dq HvVgdjFMaHsAJpurJn
	dq 0x000001DF177669E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_letlec 000013 */
NmqVniKkFJEmHHixOJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C2F4
mov [rsi+8], rax
xor rax, rax
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BWAEviBErqsmCpLfPx
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BWAEviBErqsmCpLfPx:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq LcFlBVOXVhaBKAngPc
	dq LcFlBVOXVhaBKAngPc
	dq 0
HvVgdjFMaHsAJpurJn:
	dq NmqVniKkFJEmHHixOJ
	dq BWAEviBErqsmCpLfPx
	dq LcFlBVOXVhaBKAngPc
	dq 0x000001DF177669E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_letlec 000018 */
BVsUrUPtXNtJAxoDnS:
mov rdx, FPprKEEcDQXcOLOxQx
jmp BSVM2_TrOp_ENDLEC
align 8
FPprKEEcDQXcOLOxQx:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq OrwkCRLbSIMhHuFqel
	dq OrwkCRLbSIMhHuFqel
	dq 0
LcFlBVOXVhaBKAngPc:
	dq BVsUrUPtXNtJAxoDnS
	dq FPprKEEcDQXcOLOxQx
	dq OrwkCRLbSIMhHuFqel
	dq 0x000001DF177669E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_letlec 00001B */
MhLlHeMpoSkiEmOXsU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C306
mov [rsi+8], rax
xor rax, rax
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KArIACBOtecaQCpSgd
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
KArIACBOtecaQCpSgd:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq ONNqJqPJPxVcIAjQkg
	dq ONNqJqPJPxVcIAjQkg
	dq 0
OrwkCRLbSIMhHuFqel:
	dq MhLlHeMpoSkiEmOXsU
	dq KArIACBOtecaQCpSgd
	dq ONNqJqPJPxVcIAjQkg
	dq 0x000001DF177669E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_letlec 000020 */
GSgXKHFSRIkbIcPaUl:
mov rdx, AcGshdIqoWGtHPgDsJ
jmp BSVM2_TrOp_RETV
align 8
AcGshdIqoWGtHPgDsJ:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq ONNqJqPJPxVcIAjQkg
	dq 0
ONNqJqPJPxVcIAjQkg:
	dq GSgXKHFSRIkbIcPaUl
	dq AcGshdIqoWGtHPgDsJ
	dq ONNqJqPJPxVcIAjQkg
	dq 0x000001DF177669E0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* tst_tryex 000000 */
MNgeugEjJMtpFlxFcN:
mov rdx, OjGnxjCuSsGhCSXrrG
jmp BSVM2_TrOp_BEGTRY
align 8
OjGnxjCuSsGhCSXrrG:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq GQKearMiaJokMMGNJA
	dq JguskfHQdgEGCMnUhN
	dq 0
KqTLQtCcJvhKHBaxPn:
	dq MNgeugEjJMtpFlxFcN
	dq OjGnxjCuSsGhCSXrrG
	dq JguskfHQdgEGCMnUhN
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 000004 */
LNrIqnCXFQQNDfWlAF:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C318
mov [rsi+8], rax
xor rax, rax
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, EcLHlQMEqiwrDVMPpR
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
EcLHlQMEqiwrDVMPpR:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq HMNXiOGDkAGGQBUntW
	dq HMNXiOGDkAGGQBUntW
	dq 0
GQKearMiaJokMMGNJA:
	dq LNrIqnCXFQQNDfWlAF
	dq EcLHlQMEqiwrDVMPpR
	dq HMNXiOGDkAGGQBUntW
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 000009 */
MIRCefCLLlDsEvrsuX:
mov rdx, PvdtBNFRDSelBOArMb
jmp BSVM2_TrOp_CALLG
align 8
PvdtBNFRDSelBOArMb:
	dd 0x00000000
	dd 0x00000000
	dd 0x17766500
	dd 0x000001DF
	dq EEkhlSFJsiMIQeLtQi
	dq EEkhlSFJsiMIQeLtQi
	dq 0
HMNXiOGDkAGGQBUntW:
	dq MIRCefCLLlDsEvrsuX
	dq PvdtBNFRDSelBOArMb
	dq EEkhlSFJsiMIQeLtQi
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 00000B */
HHEuKjOljiCpKgXTXD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C327
mov [rsi+8], rax
xor rax, rax
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PKGnbMDWwhCgNIHbfe
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
PKGnbMDWwhCgNIHbfe:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq JguskfHQdgEGCMnUhN
	dq JguskfHQdgEGCMnUhN
	dq 0
EEkhlSFJsiMIQeLtQi:
	dq HHEuKjOljiCpKgXTXD
	dq PKGnbMDWwhCgNIHbfe
	dq JguskfHQdgEGCMnUhN
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 000010 */
OkNwdVJkfJqfJkdHpw:
mov rdx, QTpUjWBPFDpdIBnCED
jmp BSVM2_TrOp_ENDTRY
align 8
QTpUjWBPFDpdIBnCED:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq FJLrmcLwbonkJMNVGn
	dq GwgRAjGWLThAEwAQXB
	dq 0
JguskfHQdgEGCMnUhN:
	dq OkNwdVJkfJqfJkdHpw
	dq QTpUjWBPFDpdIBnCED
	dq GwgRAjGWLThAEwAQXB
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 000014 */
FJaMaLABAcHWCDSpKh:
mov rdx, CbTJnDNNKnmOEJbIcb
jmp BSVM2_TrOp_CATCH
align 8
CbTJnDNNKnmOEJbIcb:
	dd 0x00000000
	dd 0x00000000
	dd 0x17763C40
	dd 0x000001DF
	dq LsUCSBOJIrXkOFfJNs
	dq GwgRAjGWLThAEwAQXB
	dq 0
FJLrmcLwbonkJMNVGn:
	dq FJaMaLABAcHWCDSpKh
	dq CbTJnDNNKnmOEJbIcb
	dq GwgRAjGWLThAEwAQXB
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 000019 */
EQveRVDpjdjSMBPGbU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+8]
mov [rsi+0], r12
mov rax, 0x008D01DF1853C336
mov [rsi+8], rax
xor rax, rax
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FeoTOxDeWxDeHrFEuQ
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FeoTOxDeWxDeHrFEuQ:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq HHEWOqDifExdOSPeiA
	dq HHEWOqDifExdOSPeiA
	dq 0
LsUCSBOJIrXkOFfJNs:
	dq EQveRVDpjdjSMBPGbU
	dq FeoTOxDeWxDeHrFEuQ
	dq HHEWOqDifExdOSPeiA
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 000020 */
HMudrxDEPIHPHdFnDS:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
xor rax, rax
mov [rsi+8], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GwgRAjGWLThAEwAQXB
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HHEWOqDifExdOSPeiA:
	dq HMudrxDEPIHPHdFnDS
	dq 0
	dq GwgRAjGWLThAEwAQXB
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 000024 */
MboGXePvKasNAGeHsF:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C345
mov [rsi+16], rax
xor rax, rax
mov [rsi+24], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JNiQOKLSvULUFrWqwe
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
JNiQOKLSvULUFrWqwe:
	dd 0x00000000
	dd 0x00010001
	dd 0x17770460
	dd 0x000001DF
	dq AUQrpaFVCaruHLpPRw
	dq AUQrpaFVCaruHLpPRw
	dq 0
GwgRAjGWLThAEwAQXB:
	dq MboGXePvKasNAGeHsF
	dq JNiQOKLSvULUFrWqwe
	dq AUQrpaFVCaruHLpPRw
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 000029 */
ENpPgjPiKdcEMurPpT:
mov rdx, PAOFNHNqueXbBsfjAh
jmp BSVM2_TrOp_RETHROW
align 8
PAOFNHNqueXbBsfjAh:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq MMQkPECcGFvCILVroo
	dq MMQkPECcGFvCILVroo
	dq 0
AUQrpaFVCaruHLpPRw:
	dq ENpPgjPiKdcEMurPpT
	dq PAOFNHNqueXbBsfjAh
	dq MMQkPECcGFvCILVroo
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex 00002B */
CSqDCfAIvTJsElaPpa:
mov rdx, MnxHsjDjRoUeIgbNAA
jmp BSVM2_TrOp_RETV
align 8
MnxHsjDjRoUeIgbNAA:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq MMQkPECcGFvCILVroo
	dq 0
MMQkPECcGFvCILVroo:
	dq CSqDCfAIvTJsElaPpa
	dq MnxHsjDjRoUeIgbNAA
	dq MMQkPECcGFvCILVroo
	dq 0x000001DF177667E0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* tst_tryex2 000000 */
DGfBNqMirRtCCENAPR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, BNTPFcFvRDqVFVrCTH
call BSVM2_Op_NEWOBJ /* OP:0088-0000 */
mov rax, [rsi+0]
mov [rsi+8], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CAhpwgLiweMPDcxswr
add rsp, 504
jmp BSVM2_TrOp_CALLV
align 8
BNTPFcFvRDqVFVrCTH:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x17763C40
	dd 0x000001DF
	dq 0
CAhpwgLiweMPDcxswr:
	dd 0x00000000
	dd 0x00020001
	dd 0x17763FE0
	dd 0x000001DF
	dq LlveFaNDDiPUJLlDiH
	dq LlveFaNDDiPUJLlDiH
	dq 0
NUEktGMFlnpoJMNVXR:
	dq DGfBNqMirRtCCENAPR
	dq CAhpwgLiweMPDcxswr
	dq LlveFaNDDiPUJLlDiH
	dq 0x000001DF177665E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex2 000005 */
CHXXmAGlDXLBBdsWLK:
mov rdx, EXpTQdKqgOjiFThIAM
jmp BSVM2_TrOp_THROW
align 8
EXpTQdKqgOjiFThIAM:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq BUXILUMkNMChCReMNR
	dq BUXILUMkNMChCReMNR
	dq 0
LlveFaNDDiPUJLlDiH:
	dq CHXXmAGlDXLBBdsWLK
	dq EXpTQdKqgOjiFThIAM
	dq BUXILUMkNMChCReMNR
	dq 0x000001DF177665E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_tryex2 000007 */
IKdEbsMSUwUeEMKgOq:
mov rdx, MShoGqImHiujMawLPj
jmp BSVM2_TrOp_RETV
align 8
MShoGqImHiujMawLPj:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq BUXILUMkNMChCReMNR
	dq 0
BUXILUMkNMChCReMNR:
	dq IKdEbsMSUwUeEMKgOq
	dq MShoGqImHiujMawLPj
	dq BUXILUMkNMChCReMNR
	dq 0x000001DF177665E0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* $CTOR$ 000000 */
OPlXevJXlXUmEAmtEm:
mov rdx, IXLRXlDDKkEnLOtLsV
jmp BSVM2_TrOp_RETV
align 8
IXLRXlDDKkEnLOtLsV:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq QAQSdGEoqqUOFlTuHS
	dq 0
QAQSdGEoqqUOFlTuHS:
	dq OPlXevJXlXUmEAmtEm
	dq IXLRXlDDKkEnLOtLsV
	dq QAQSdGEoqqUOFlTuHS
	dq 0x000001DF177640C0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* tst_decjpg 000000 */
KfmUWqOAhmjeFGDLWd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C356
mov [rsi+120], rax
mov rcx, rdi
mov rdx, OAoUKHDKuhUNOuXxQS
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, FbttgmCODJcbLfgjXl
call BSVM2_Op_LDGSA /* OP:007E-0000 */
mov rcx, rdi
mov rdx, LmXXCvBADBHnMKjhdU
call BSVM2_Op_LDIXIC /* OP:0050-0000 */
mov rcx, rdi
mov rdx, FcshaSDFvMNuHPffUf
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, MsqvxgFsVLchOKlACR
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, QXwEHdDNMualENaibJ
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
OAoUKHDKuhUNOuXxQS:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FbttgmCODJcbLfgjXl:
	dd 0x00040000
	dd 0x00020000
	dd 0x00000001
	dd 0x00000000
	dd 0x17782530
	dd 0x000001DF
	dq 0
LmXXCvBADBHnMKjhdU:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000017
	dd 0x00000000
	dq 0
FcshaSDFvMNuHPffUf:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MsqvxgFsVLchOKlACR:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QXwEHdDNMualENaibJ:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq JuKNXTEIhTntNHgJOg
	dq JuKNXTEIhTntNHgJOg
	dq 0
LCUpxpIUbuEnKfvKAF:
	dq KfmUWqOAhmjeFGDLWd
	dq QXwEHdDNMualENaibJ
	dq JuKNXTEIhTntNHgJOg
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 00000F */
DPtLWMEOurvgLUCASv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C367
mov [rsi+120], rax
mov rcx, rdi
mov rdx, FnmnlbErHevAGnHbev
call BSVM2_Op_LDRL /* OP:0080-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JNvVGdExCCeNNLjiHw
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FnmnlbErHevAGnHbev:
	dd 0x00000008
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JNvVGdExCCeNNLjiHw:
	dd 0x00000000
	dd 0x00000000
	dd 0x177674E0
	dd 0x000001DF
	dq HcPvgPOdTCEOLITwpr
	dq HcPvgPOdTCEOLITwpr
	dq 0
JuKNXTEIhTntNHgJOg:
	dq DPtLWMEOurvgLUCASv
	dq JNvVGdExCCeNNLjiHw
	dq HcPvgPOdTCEOLITwpr
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 000016 */
GXHmTbMXBddqCeiiJv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+120]
mov [rsi+16], r12
mov rax, 0x008D01DF1853C37F
mov [rsi+120], rax
mov rcx, rdi
mov rdx, JtlMUiJBHurLBXuPMA
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12, [rsi+16]
mov [rsi+136], r12
mov rcx, rdi
mov rdx, MeBuSQNtbTaNEcCRHr
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov rcx, rdi
mov rdx, LDpntNGomIuhNkWUQX
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, KfdlaRQddWtEImRSbm
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdx, KSEqqlLsnfoeOPKlsR
call BSVM2_Op_LDIXUBLC /* OP:017F-0000 */
mov rcx, rdi
mov rdx, EmUexDKUrLQxOMvOjU
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, NtbHkwCAieLmLnoOHO
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+64]
mov [rsi+136], r12
mov rcx, rdi
mov rdx, OsaWGrEqOlpTLRlkRw
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, HTPvaQBEmQsgEtQHFL
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, DjdNOaPdmXfJLJKASG
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
JtlMUiJBHurLBXuPMA:
	dd 0x00040003
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MeBuSQNtbTaNEcCRHr:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LDpntNGomIuhNkWUQX:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KfdlaRQddWtEImRSbm:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KSEqqlLsnfoeOPKlsR:
	dd 0x00000002
	dd 0x00020006
	dd 0x00000001
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
EmUexDKUrLQxOMvOjU:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NtbHkwCAieLmLnoOHO:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
OsaWGrEqOlpTLRlkRw:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HTPvaQBEmQsgEtQHFL:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
DjdNOaPdmXfJLJKASG:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq OxFNoQODsIXQGOetCp
	dq OxFNoQODsIXQGOetCp
	dq 0
HcPvgPOdTCEOLITwpr:
	dq GXHmTbMXBddqCeiiJv
	dq DjdNOaPdmXfJLJKASG
	dq OxFNoQODsIXQGOetCp
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 000037 */
HjxnnXFQGgVfOtEjPT:
mov rdx, KwpEOnQITsiKEMHJRL
jmp BSVM2_TrOp_CALLG
align 8
KwpEOnQITsiKEMHJRL:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776B700
	dd 0x000001DF
	dq AhrihTNRwvamEOGoPC
	dq AhrihTNRwvamEOGoPC
	dq 0
OxFNoQODsIXQGOetCp:
	dq HjxnnXFQGgVfOtEjPT
	dq KwpEOnQITsiKEMHJRL
	dq AhrihTNRwvamEOGoPC
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 000039 */
MpAbbTDqbceQAvfdtt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+120]
mov [rsi+0], r12
mov r12, [rsi+16]
mov [rsi+120], r12
mov rcx, rdi
mov rdx, HaJOdbLhVaLIHTTCPI
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+120]
mov [rsi+24], r12
mov r12, [rsi+24]
lea r12, [r12+1]
mov [rsi+120], r12
mov [rsi+24], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, MGoCVVCNDNfpFSePQh
add rsp, 504
jmp BSVM2_TrOp_NatCallG0
align 8
HaJOdbLhVaLIHTTCPI:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MGoCVVCNDNfpFSePQh:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq JofbLDDMEKCoOcIlPG
	dq JofbLDDMEKCoOcIlPG
	dq 0
AhrihTNRwvamEOGoPC:
	dq MpAbbTDqbceQAvfdtt
	dq MGoCVVCNDNfpFSePQh
	dq JofbLDDMEKCoOcIlPG
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 00004B */
EQPMjaAxNUPiCqqGxf:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+120]
mov [rsi+32], r12d
mov rax, [rsi+0]
mov [rsi+120], rax
mov r12, [rsi+16]
mov [rsi+128], r12
mov rcx, rdi
mov rdx, CfHAcuBLISTmBaReCU
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, [rsi+64]
mov [rsi+136], eax
mov rcx, rdi
mov rdx, EpeDljHGhKkvJaeQcX
call BSVM2_Op_LDRL /* OP:0080-0000 */
mov rcx, rdi
mov rdx, QLjAEXINKPUaHlUrHG
call BSVM2_Op_LDRL /* OP:0080-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CiLOkQQjRPEoDEPjqm
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CfHAcuBLISTmBaReCU:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EpeDljHGhKkvJaeQcX:
	dd 0x00000009
	dd 0x00030000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QLjAEXINKPUaHlUrHG:
	dd 0x0000000A
	dd 0x00040000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CiLOkQQjRPEoDEPjqm:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776E700
	dd 0x000001DF
	dq FAndsRHtXroBPjhsXR
	dq FAndsRHtXroBPjhsXR
	dq 0
JofbLDDMEKCoOcIlPG:
	dq EQPMjaAxNUPiCqqGxf
	dq CiLOkQQjRPEoDEPjqm
	dq FAndsRHtXroBPjhsXR
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 00005D */
DHHUbOHkaANUPLcrON:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DSOjtNHCULAcQdvNuJ
add rsp, 504
jmp BSVM2_TrOp_NatCallG0
align 8
DSOjtNHCULAcQdvNuJ:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq FWRmlhIfujEUOJrxUK
	dq FWRmlhIfujEUOJrxUK
	dq 0
FAndsRHtXroBPjhsXR:
	dq DHHUbOHkaANUPLcrON
	dq DSOjtNHCULAcQdvNuJ
	dq FWRmlhIfujEUOJrxUK
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 000060 */
LVXRLtJCCWmwJAawex:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+120]
mov [rsi+40], r12d
mov eax, [rsi+40]
sub eax, [rsi+32]
mov [rsi+48], eax
mov rax, 0x008D01DF1853C39C
mov [rsi+120], rax
mov rcx, rdi
mov rdx, IbSRldOTiEedIbfGqq
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+48]
mov [rsi+136], r12
mov rcx, rdi
mov rdx, LrpGbwLhmBJFLBOIWN
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, FcRwoaEdhhesPPJmcg
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, BvOLJaLBvqLfJTVlpE
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
IbSRldOTiEedIbfGqq:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LrpGbwLhmBJFLBOIWN:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FcRwoaEdhhesPPJmcg:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BvOLJaLBvqLfJTVlpE:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq KwlUBVNnoPjLBGDLGX
	dq KwlUBVNnoPjLBGDLGX
	dq 0
FWRmlhIfujEUOJrxUK:
	dq LVXRLtJCCWmwJAawex
	dq BvOLJaLBvqLfJTVlpE
	dq KwlUBVNnoPjLBGDLGX
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 000074 */
HbXCsAAuKAOfQEvBmV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C3AF
mov [rsi+120], rax
mov rcx, rdi
mov rdx, DAfdNwGSqEjbCeiOIA
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+72]
mov [rsi+136], r12
mov rcx, rdi
mov rdx, QekkiIMUQgFcDOOpHF
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, BwnRWaNsEgHIPDkmBQ
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+80]
mov [rsi+136], r12
mov rcx, rdi
mov rdx, OJwDcrDWjxviEtHoRu
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, QLOwBbMRGGdPIdWIHl
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, GeCneGKpQnooEopkbK
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DAfdNwGSqEjbCeiOIA:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QekkiIMUQgFcDOOpHF:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BwnRWaNsEgHIPDkmBQ:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OJwDcrDWjxviEtHoRu:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QLOwBbMRGGdPIdWIHl:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
GeCneGKpQnooEopkbK:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq PMdpVgEtKpTWMtGran
	dq PMdpVgEtKpTWMtGran
	dq 0
KwlUBVNnoPjLBGDLGX:
	dq HbXCsAAuKAOfQEvBmV
	dq GeCneGKpQnooEopkbK
	dq PMdpVgEtKpTWMtGran
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 000089 */
EPPrQDMclupGKPHtpH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+72]
imul r12d, [rsi+80]
shl r12d, 2
mov [rsi+120], r12
mov rcx, rdi
mov rdx, FJphQWEQAMEkGeFEAG
call BSVM2_Op_NEWARR_UB /* OP:0089-0000 */
mov r12, [rsi+120]
mov [rsi+8], r12
mov rax, [rsi+0]
mov [rsi+120], rax
mov r12, [rsi+8]
mov [rsi+128], r12
mov rcx, rdi
mov rdx, LRUsbgQVdGisPcoPHW
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, [rsi+72]
mov [rsi+136], eax
mov eax, [rsi+80]
mov [rsi+144], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, EKvhpBMlkcRKFNsSDD
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FJphQWEQAMEkGeFEAG:
	dd 0x00060000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LRUsbgQVdGisPcoPHW:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EKvhpBMlkcRKFNsSDD:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776E270
	dd 0x000001DF
	dq LPmKOkCOgercKJfOFK
	dq LPmKOkCOgercKJfOFK
	dq 0
PMdpVgEtKpTWMtGran:
	dq EPPrQDMclupGKPHtpH
	dq EKvhpBMlkcRKFNsSDD
	dq LPmKOkCOgercKJfOFK
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 00009F */
CaDsftPTKVenGIPjAh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C3CA
mov [rsi+120], rax
mov rax, [rsi+8]
mov [rsi+128], rax
mov eax, [rsi+72]
mov [rsi+136], eax
mov eax, [rsi+80]
mov [rsi+144], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, QplhpLIhNxxBAeSuDM
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
QplhpLIhNxxBAeSuDM:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776EE90
	dd 0x000001DF
	dq IvsAUjMjQCOrNspSjX
	dq IvsAUjMjQCOrNspSjX
	dq 0
LPmKOkCOgercKJfOFK:
	dq CaDsftPTKVenGIPjAh
	dq QplhpLIhNxxBAeSuDM
	dq IvsAUjMjQCOrNspSjX
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* tst_decjpg 0000AB */
IBsJfuMeQErNPcwvfj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NQWfITIsRoDvOsjibC
add rsp, 504
jmp BSVM2_TrOp_RETV
align 8
NQWfITIsRoDvOsjibC:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq IvsAUjMjQCOrNspSjX
	dq 0
IvsAUjMjQCOrNspSjX:
	dq IBsJfuMeQErNPcwvfj
	dq NQWfITIsRoDvOsjibC
	dq IvsAUjMjQCOrNspSjX
	dq 0x000001DF17766BE0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* readfile 000000 */
ETJMdcCVuRtSGLhNuU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+24]
mov [rsi+40], rax
mov rax, 0x008D01DF1853C3DE
mov [rsi+48], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, AFRqkqBTNgIGCefnki
add rsp, 504
jmp BSVM2_TrOp_NatCallG1
align 8
AFRqkqBTNgIGCefnki:
	dd 0x00000000
	dd 0x00000000
	dd 0x17766FA0
	dd 0x000001DF
	dq BrBXXMFwPiNvLVGOaQ
	dq BrBXXMFwPiNvLVGOaQ
	dq 0
JueigqNcVUlCMSAgjc:
	dq ETJMdcCVuRtSGLhNuU
	dq AFRqkqBTNgIGCefnki
	dq BrBXXMFwPiNvLVGOaQ
	dq 0x000001DF177675C0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* readfile 000006 */
OVltUcOhMtbxAlxLUR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+40]
mov [rsi+8], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KoswLBBAfADdOOgUUG
add rsp, 504
jmp BSVM2_TrOp_JNENULLL
align 8
KoswLBBAfADdOOgUUG:
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq JLqJCLGHmjOiGtLbwe
	dq PaQKpfMNQMbPQqolTM
	dq 0
BrBXXMFwPiNvLVGOaQ:
	dq OVltUcOhMtbxAlxLUR
	dq KoswLBBAfADdOOgUUG
	dq PaQKpfMNQMbPQqolTM
	dq 0x000001DF177675C0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* readfile 00000D */
QWNaEQOCmNRkEtxfGn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
xor rax, rax
mov [rsi+40], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PaicWkBuvVhXQPQnia
add rsp, 504
jmp BSVM2_TrOp_RETA
align 8
PaicWkBuvVhXQPQnia:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq PaQKpfMNQMbPQqolTM
	dq PaQKpfMNQMbPQqolTM
	dq 0
JLqJCLGHmjOiGtLbwe:
	dq QWNaEQOCmNRkEtxfGn
	dq PaicWkBuvVhXQPQnia
	dq PaQKpfMNQMbPQqolTM
	dq 0x000001DF177675C0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* readfile 00000F */
FmbJokMMXEEcLvFoOI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+8]
mov [rsi+40], rax
xor rax, rax
mov [rsi+48], rax
mov eax, 0x00000002
mov [rsi+56], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CjrXmWIONpaVCGKUXK
add rsp, 504
jmp BSVM2_TrOp_NatCallG1
align 8
CjrXmWIONpaVCGKUXK:
	dd 0x00000000
	dd 0x00000000
	dd 0x17767320
	dd 0x000001DF
	dq AgRBGMCunSTVPWStod
	dq AgRBGMCunSTVPWStod
	dq 0
PaQKpfMNQMbPQqolTM:
	dq FmbJokMMXEEcLvFoOI
	dq CjrXmWIONpaVCGKUXK
	dq AgRBGMCunSTVPWStod
	dq 0x000001DF177675C0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* readfile 000016 */
OdMbNDISdmLdAwHgBW:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+8]
mov [rsi+40], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PksqPDBnDhxMOBTOeR
add rsp, 504
jmp BSVM2_TrOp_NatCallG1
align 8
PksqPDBnDhxMOBTOeR:
	dd 0x00000000
	dd 0x00000000
	dd 0x17767400
	dd 0x000001DF
	dq MRudglICHJMkFTMdla
	dq MRudglICHJMkFTMdla
	dq 0
AgRBGMCunSTVPWStod:
	dq OdMbNDISdmLdAwHgBW
	dq PksqPDBnDhxMOBTOeR
	dq MRudglICHJMkFTMdla
	dq 0x000001DF177675C0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* readfile 00001B */
PCWvmeKebpbbGJeuXr:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+40]
mov [rsi+16], r12d
mov rax, [rsi+8]
mov [rsi+40], rax
xor rax, rax
mov [rsi+48], rax
xor rax, rax
mov [rsi+56], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JfWruCMHhwhwLVEvNi
add rsp, 504
jmp BSVM2_TrOp_NatCallG1
align 8
JfWruCMHhwhwLVEvNi:
	dd 0x00000000
	dd 0x00000000
	dd 0x17767320
	dd 0x000001DF
	dq IJFvVSOUNFNdJtRHnq
	dq IJFvVSOUNFNdJtRHnq
	dq 0
MRudglICHJMkFTMdla:
	dq PCWvmeKebpbbGJeuXr
	dq JfWruCMHhwhwLVEvNi
	dq IJFvVSOUNFNdJtRHnq
	dq 0x000001DF177675C0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* readfile 000023 */
IHdMupQGGSNtPlWNHI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+16]
mov [rsi+40], r12
mov rcx, rdi
mov rdx, GGChKqIoNIMBOWHLaF
call BSVM2_Op_NEWARR_UB /* OP:0089-0000 */
mov r12, [rsi+40]
mov [rsi+0], r12
mov r12, [rsi+0]
mov [rsi+40], r12
mov rcx, rdi
mov rdx, DnJadFJXKNFoLwoHOW
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000001
mov [rsi+48], eax
mov eax, [rsi+16]
mov [rsi+56], eax
mov rax, [rsi+8]
mov [rsi+64], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DXAifBFincbAIXfNxp
add rsp, 504
jmp BSVM2_TrOp_NatCallG1
align 8
GGChKqIoNIMBOWHLaF:
	dd 0x00060000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DnJadFJXKNFoLwoHOW:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DXAifBFincbAIXfNxp:
	dd 0x00000000
	dd 0x00000000
	dd 0x17767160
	dd 0x000001DF
	dq NNaCrROqwnVsHoAMlq
	dq NNaCrROqwnVsHoAMlq
	dq 0
IJFvVSOUNFNdJtRHnq:
	dq IHdMupQGGSNtPlWNHI
	dq DXAifBFincbAIXfNxp
	dq NNaCrROqwnVsHoAMlq
	dq 0x000001DF177675C0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* readfile 000036 */
MMkdKwMILJbJIoNWhC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+8]
mov [rsi+40], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BBoLnOEobaAeAIOrdl
add rsp, 504
jmp BSVM2_TrOp_NatCallG1
align 8
BBoLnOEobaAeAIOrdl:
	dd 0x00000000
	dd 0x00000000
	dd 0x17767080
	dd 0x000001DF
	dq JssWTHBcSMjEILvVid
	dq JssWTHBcSMjEILvVid
	dq 0
NNaCrROqwnVsHoAMlq:
	dq MMkdKwMILJbJIoNWhC
	dq BBoLnOEobaAeAIOrdl
	dq JssWTHBcSMjEILvVid
	dq 0x000001DF177675C0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* readfile 00003B */
DlqoiWGmWkHCJikpku:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+16]
mov [rsi+40], r12
mov rax, [rsi+32]
mov edx, r12d
mov [rax], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JLOTtdFfmHrsHGoGIj
add rsp, 504
jmp BSVM2_TrOp_RETAL
align 8
JLOTtdFfmHrsHGoGIj:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq JssWTHBcSMjEILvVid
	dq 0
JssWTHBcSMjEILvVid:
	dq DlqoiWGmWkHCJikpku
	dq JLOTtdFfmHrsHGoGIj
	dq JssWTHBcSMjEILvVid
	dq 0x000001DF177675C0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_AllocContext 000000 */
HMLDeQHsEulmCBPfrm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, LVvhPFBBePBiDLvRxn
call BSVM2_Op_NEWOBJ /* OP:0088-0000 */
mov rax, [rsi+8]
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IXHGRALAtbklOpcoVS
add rsp, 504
jmp BSVM2_TrOp_CALLV
align 8
LVvhPFBBePBiDLvRxn:
	dd 0x00000000
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x17767650
	dd 0x000001DF
	dq 0
IXHGRALAtbklOpcoVS:
	dd 0x00000000
	dd 0x00020001
	dd 0x17767A20
	dd 0x000001DF
	dq DRADNIJRlsFCIRqHWA
	dq DRADNIJRlsFCIRqHWA
	dq 0
JUTIrcFveHVODmVfxR:
	dq HMLDeQHsEulmCBPfrm
	dq IXHGRALAtbklOpcoVS
	dq DRADNIJRlsFCIRqHWA
	dq 0x000001DF1776B7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_AllocContext 000005 */
MAliGrKWFRjAQIFanR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+8]
mov [rsi+0], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PaXQbIKigQpKEUVfvR
add rsp, 504
jmp BSVM2_TrOp_RETAL
align 8
PaXQbIKigQpKEUVfvR:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq DRADNIJRlsFCIRqHWA
	dq 0
DRADNIJRlsFCIRqHWA:
	dq MAliGrKWFRjAQIFanR
	dq PaXQbIKigQpKEUVfvR
	dq DRADNIJRlsFCIRqHWA
	dq 0x000001DF1776B7E0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* $CTOR$ 000000 */
NfSWAPKtNAGUOLcbol:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, NcPmebEjiQkDKvjaSD
call BSVM2_Op_NEWARR_USC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, PCghmxJmQWWvIBHVKG
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, HROwQEOTsXTWJDgTrB
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, EGPotROkGrImASFDfk
call BSVM2_Op_NEWARR_USC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, BOpnGgGjgNAVElJSfT
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, FQDwWcKtfvNJHKxAQI
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, QTpjAmAwmAeTJowhRQ
call BSVM2_Op_NEWARR_SSC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, BvkduKMMmubtKdWsue
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, DnFEbhFVAXgOPitDXP
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, CeWmqtFFgDrsMIvQFU
call BSVM2_Op_NEWARR_UBC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, BhreupEDfXXiNLvRjC
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, GDfGbsKihEsEDHSJwJ
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, DeXTlxNTEkUtEUQcCA
call BSVM2_Op_NEWARR_SSC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, JJcHSsBJghudJPKHLk
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, EeUHLCMTHkpTISGfwl
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, FSjnxoAiguJiOajPAn
call BSVM2_Op_NEWARR_UBC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, IuVMUdPXAICeKXwRJa
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, MLPJIHAoSQoCNXxBmT
call BSVM2_Op_NEWARR_UBC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, LGHUfqIprpPjNAxOlh
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, OGndxUMcWwsGFTUfLm
call BSVM2_Op_NEWARR_UBC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, NwEVcPQjWPKIAOOLSo
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, FKQRQLGjJtGoEqLXvS
call BSVM2_Op_NEWARR_UBC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, FqGWQJMDxkuqAmNrqR
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, CEqTCiFSudXpHKlxoW
call BSVM2_Op_NEWARR_UBC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, OEeDmbMuemMwGTMxva
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, JqGPmQIFVHatFxkgBC
call BSVM2_Op_NEWARR_IC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, GLNekVCQxgKXGQKXuw
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, NpHbiNKQidJqCbRlmx
call BSVM2_Op_NEWARR_IC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, OLdfobKqJAWGIfPWhh
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, LOAgspExpOojExdnfV
call BSVM2_Op_NEWARR_IC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, HNfBcCMolEvGIxVdCm
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, NgUaqHCrmSwpKffxhi
call BSVM2_Op_NEWARR_IC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, QIHITXOtilDNClekpJ
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, CSJwpABoptUABimIPC
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, OOTXUnKfxFDlQKNgsh
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, GSwpMtLLHICWAVamwx
call BSVM2_Op_NEWARR_IC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, KFmHmDHqqSNLNGKcmd
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, NeNjRlPPqvrKDdoJSb
call BSVM2_Op_NEWARR_IC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, AiViWgNFfkPaMTLCxX
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, LnVgMBJslBBtFmSHxv
call BSVM2_Op_NEWARR_IC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, FxKNRAPjMofBLvEppq
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdx, EUJVgBFITgqDPanVOV
call BSVM2_Op_NEWARR_IC /* OP:0089-0000 */
mov rcx, rdi
mov rdx, DHliRBGSTKKXBKlhDG
call BSVM2_Op_STTHISA /* OP:0121-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IkuoatOkHrLxOhvUsc
add rsp, 504
jmp BSVM2_TrOp_RETV
align 8
NcPmebEjiQkDKvjaSD:
	dd 0x00090800
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PCghmxJmQWWvIBHVKG:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HROwQEOTsXTWJDgTrB:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17768520
	dd 0x000001DF
	dq 0
EGPotROkGrImASFDfk:
	dd 0x00090800
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BOpnGgGjgNAVElJSfT:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FQDwWcKtfvNJHKxAQI:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17768690
	dd 0x000001DF
	dq 0
QTpjAmAwmAeTJowhRQ:
	dd 0x00070800
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BvkduKMMmubtKdWsue:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DnFEbhFVAXgOPitDXP:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17768800
	dd 0x000001DF
	dq 0
CeWmqtFFgDrsMIvQFU:
	dd 0x00060800
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BhreupEDfXXiNLvRjC:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GDfGbsKihEsEDHSJwJ:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17768970
	dd 0x000001DF
	dq 0
DeXTlxNTEkUtEUQcCA:
	dd 0x00070800
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JJcHSsBJghudJPKHLk:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EeUHLCMTHkpTISGfwl:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17768AE0
	dd 0x000001DF
	dq 0
FSjnxoAiguJiOajPAn:
	dd 0x00060100
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IuVMUdPXAICeKXwRJa:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17768C50
	dd 0x000001DF
	dq 0
MLPJIHAoSQoCNXxBmT:
	dd 0x00060010
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LGHUfqIprpPjNAxOlh:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17769380
	dd 0x000001DF
	dq 0
OGndxUMcWwsGFTUfLm:
	dd 0x00060010
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NwEVcPQjWPKIAOOLSo:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x177694F0
	dd 0x000001DF
	dq 0
FKQRQLGjJtGoEqLXvS:
	dd 0x00060010
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FqGWQJMDxkuqAmNrqR:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17769660
	dd 0x000001DF
	dq 0
CEqTCiFSudXpHKlxoW:
	dd 0x00060010
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OEeDmbMuemMwGTMxva:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x177697D0
	dd 0x000001DF
	dq 0
JqGPmQIFVHatFxkgBC:
	dd 0x00000010
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GLNekVCQxgKXGQKXuw:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17769940
	dd 0x000001DF
	dq 0
NpHbiNKQidJqCbRlmx:
	dd 0x00000010
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OLdfobKqJAWGIfPWhh:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x17769AB0
	dd 0x000001DF
	dq 0
LOAgspExpOojExdnfV:
	dd 0x00000004
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HNfBcCMolEvGIxVdCm:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x1776A070
	dd 0x000001DF
	dq 0
NgUaqHCrmSwpKffxhi:
	dd 0x00000004
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QIHITXOtilDNClekpJ:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x1776A1E0
	dd 0x000001DF
	dq 0
CSJwpABoptUABimIPC:
	dd 0x00040004
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OOTXUnKfxFDlQKNgsh:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x1776A350
	dd 0x000001DF
	dq 0
GSwpMtLLHICWAVamwx:
	dd 0x00000004
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KFmHmDHqqSNLNGKcmd:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x1776A630
	dd 0x000001DF
	dq 0
NeNjRlPPqvrKDdoJSb:
	dd 0x00000004
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AiViWgNFfkPaMTLCxX:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x1776A7A0
	dd 0x000001DF
	dq 0
LnVgMBJslBBtFmSHxv:
	dd 0x00000004
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FxKNRAPjMofBLvEppq:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x1776A910
	dd 0x000001DF
	dq 0
EUJVgBFITgqDPanVOV:
	dd 0x00000004
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DHliRBGSTKKXBKlhDG:
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x1776AA80
	dd 0x000001DF
	dq 0
IkuoatOkHrLxOhvUsc:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq FeBkfMJEwgcGNgjblT
	dq 0
FeBkfMJEwgcGNgjblT:
	dq NfSWAPKtNAGUOLcbol
	dq IkuoatOkHrLxOhvUsc
	dq FeBkfMJEwgcGNgjblT
	dq 0x000001DF17767B00
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_DecodeBasic 000000 */
PuWsulMXJvksDaEJAI:
mov rdx, MbNsIKAnIUIkHPrsbc
jmp BSVM2_TrOp_JNENULLL
align 8
MbNsIKAnIUIkHPrsbc:
	dd 0x00000008
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq CAxLgoNQBnfsAwgvXr
	dq FpiFexOAphNaDLcuNr
	dq 0
AtudnSGSWSBIMgcLkd:
	dq PuWsulMXJvksDaEJAI
	dq MbNsIKAnIUIkHPrsbc
	dq FpiFexOAphNaDLcuNr
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 000005 */
BGrcxqAncxBCJoPBBq:
mov rdx, FLUtNRQgroupEurXXM
jmp BSVM2_TrOp_RETIC
align 8
FLUtNRQgroupEurXXM:
	dd 0x00000000
	dd 0x00000000
	dd 0xFFFFFFFF
	dd 0x00000000
	dq FpiFexOAphNaDLcuNr
	dq FpiFexOAphNaDLcuNr
	dq 0
CAxLgoNQBnfsAwgvXr:
	dq BGrcxqAncxBCJoPBBq
	dq FLUtNRQgroupEurXXM
	dq FpiFexOAphNaDLcuNr
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 000007 */
CeVUdXBhfhIuQSDDwP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+72]
mov [rsi+104], rax
mov eax, [rsi+80]
mov [rsi+112], eax
mov rax, 0x008D01DF1853C3E9
mov [rsi+120], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, AiVPuEDUcCsXDoWcjs
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AiVPuEDUcCsXDoWcjs:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776E550
	dd 0x000001DF
	dq OoSItoFImoSENkcuQd
	dq OoSItoFImoSENkcuQd
	dq 0
FpiFexOAphNaDLcuNr:
	dq CeVUdXBhfhIuQSDDwP
	dq AiVPuEDUcCsXDoWcjs
	dq OoSItoFImoSENkcuQd
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 00000F */
OlWTRtKFOeVCPILTbH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+104]
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KGjTbtHnhFEcKwtuWK
add rsp, 504
jmp BSVM2_TrOp_JEQNULLL
align 8
KGjTbtHnhFEcKwtuWK:
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq IOECagCqoXLTHJpAfv
	dq PPqQvROtTIHIAkJCui
	dq 0
OoSItoFImoSENkcuQd:
	dq OlWTRtKFOeVCPILTbH
	dq KGjTbtHnhFEcKwtuWK
	dq PPqQvROtTIHIAkJCui
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 000016 */
DjQtnDAoMqOeAhGOLI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C3F7
mov [rsi+104], rax
xor rax, rax
mov [rsi+112], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, HnvHCQJnBIXiPkhtgd
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HnvHCQJnBIXiPkhtgd:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq LOOLuIANMPiMGpXIbR
	dq LOOLuIANMPiMGpXIbR
	dq 0
IOECagCqoXLTHJpAfv:
	dq DjQtnDAoMqOeAhGOLI
	dq HnvHCQJnBIXiPkhtgd
	dq LOOLuIANMPiMGpXIbR
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 00001B */
IaTIwTPduKonMXixMP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+80]
mov r13, [rsi+16]
mov r14, [rsi+72]
mov rax, r13
mov rcx, r14
sub rax, rcx
mov r13, rax
sub r12d, r13d
mov [rsi+40], r12d
mov rax, [rsi+64]
mov [rsi+104], rax
mov rax, [rsi+16]
mov [rsi+112], rax
mov eax, [rsi+40]
mov [rsi+120], eax
mov rax, [rsi+88]
mov [rsi+128], rax
mov rax, [rsi+96]
mov [rsi+136], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, BWiiLjJbvitwPCJWMF
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BWiiLjJbvitwPCJWMF:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776EBB0
	dd 0x000001DF
	dq MSmEQmArilLNIPCCIr
	dq MSmEQmArilLNIPCCIr
	dq 0
LOOLuIANMPiMGpXIbR:
	dq IaTIwTPduKonMXixMP
	dq BWiiLjJbvitwPCJWMF
	dq MSmEQmArilLNIPCCIr
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 000033 */
APfBwPFGXmDJDDvaWh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+96]
mov r12d, edx
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+100]
mov r13d, edx
mov [rsi+112], r13
imul r12d, r13d
mov [rsi+32], r12d
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+200]
mov [rsi+104], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, ILDPGXLCQXutCkHqqC
add rsp, 504
jmp BSVM2_TrOp_JNENULL
align 8
ILDPGXLCQXutCkHqqC:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq NvpCwDLNVQkvCijafw
	dq QBlDojObtPhjMetAQc
	dq 0
MSmEQmArilLNIPCCIr:
	dq APfBwPFGXmDJDDvaWh
	dq ILDPGXLCQXutCkHqqC
	dq QBlDojObtPhjMetAQc
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 000044 */
OmEETNIlLMalKTxKqu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+32]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, DlMlUDJFWOwFIJOEwl
call BSVM2_Op_NEWARR_UB /* OP:0089-0000 */
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rsi+104]
mov [rax+200], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, QBlDojObtPhjMetAQc
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DlMlUDJFWOwFIJOEwl:
	dd 0x00060000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NvpCwDLNVQkvCijafw:
	dq OmEETNIlLMalKTxKqu
	dq 0
	dq QBlDojObtPhjMetAQc
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 00004C */
JelGHGChsaksBHJKTG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+200]
mov r12, rdx
mov [rsi+104], r12
mov rcx, rdi
mov rdx, EHwemNCXOVKEKujLXX
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+192]
mov r12, rdx
mov [rsi+112], r12
mov rcx, rdi
mov rdx, LLNrBPQDCnruQInljk
call BSVM2_Op_LDIXAC /* OP:015C-0000 */
mov rcx, rdi
mov rdx, QiPfaOKNFeUdOwNhqw
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, [rsi+32]
mov [rsi+120], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, EUfNBoEMwJEjDNLMdq
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
EHwemNCXOVKEKujLXX:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LLNrBPQDCnruQInljk:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QiPfaOKNFeUdOwNhqw:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EUfNBoEMwJEjDNLMdq:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776B140
	dd 0x000001DF
	dq PurwVNQhQpijGkoIid
	dq PurwVNQhQpijGkoIid
	dq 0
QBlDojObtPhjMetAQc:
	dq JelGHGChsaksBHJKTG
	dq EUfNBoEMwJEjDNLMdq
	dq PurwVNQhQpijGkoIid
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 00005C */
KGoshBCuqniQEXpwDT:
mov rdx, JCJpaBISuLlDLQNGKw
mov rax, [rdx+0]
jmp rax
align 8
PurwVNQhQpijGkoIid:
	dq KGoshBCuqniQEXpwDT
	dq 0
	dq JCJpaBISuLlDLQNGKw
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 00005F */
FgBIfFBemoRnCdAJDD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C41F
mov [rsi+104], rax
xor rax, rax
mov [rsi+112], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, ASjjQeCtWmHiJdxBNo
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
ASjjQeCtWmHiJdxBNo:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq AjLgxUQDtBLXHaoOrH
	dq AjLgxUQDtBLXHaoOrH
	dq 0
PPqQvROtTIHIAkJCui:
	dq FgBIfFBemoRnCdAJDD
	dq ASjjQeCtWmHiJdxBNo
	dq AjLgxUQDtBLXHaoOrH
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 000065 */
HIsEIpKWpExFEqIKqH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+96]
mov r12d, edx
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+100]
mov r13d, edx
mov [rsi+112], r13
imul r12d, r13d
mov [rsi+32], r12d
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+200]
mov [rsi+104], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, FnOmvsNqXKrBPrGELo
add rsp, 504
jmp BSVM2_TrOp_JEQNULL
align 8
FnOmvsNqXKrBPrGELo:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq IoECNUIkdwwgCDlUDA
	dq JCJpaBISuLlDLQNGKw
	dq 0
AjLgxUQDtBLXHaoOrH:
	dq HIsEIpKWpExFEqIKqH
	dq FnOmvsNqXKrBPrGELo
	dq JCJpaBISuLlDLQNGKw
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 000075 */
JqlSICDUERlDKIuuXL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+200]
mov r12, rdx
mov [rsi+104], r12
mov rcx, rdi
mov rdx, KIJGJMArhSXOFnLKWS
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x000000FF
mov [rsi+112], eax
mov eax, [rsi+32]
mov [rsi+120], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GnvlCuDDIPxaPxclvN
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
KIJGJMArhSXOFnLKWS:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GnvlCuDDIPxaPxclvN:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776B2B0
	dd 0x000001DF
	dq JCJpaBISuLlDLQNGKw
	dq JCJpaBISuLlDLQNGKw
	dq 0
IoECNUIkdwwgCDlUDA:
	dq JqlSICDUERlDKIuuXL
	dq GnvlCuDDIPxaPxclvN
	dq JCJpaBISuLlDLQNGKw
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 000081 */
IeAKxTFpnEufKlnEGG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+72]
mov [rsi+104], rax
mov eax, [rsi+80]
mov [rsi+112], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CVhfktDNqUTUHUGEuV
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CVhfktDNqUTUHUGEuV:
	dd 0x00000000
	dd 0x00000000
	dd 0x1778D190
	dd 0x000001DF
	dq DqlheHPpOeHtAXTuJH
	dq DqlheHPpOeHtAXTuJH
	dq 0
JCJpaBISuLlDLQNGKw:
	dq IeAKxTFpnEufKlnEGG
	dq CVhfktDNqUTUHUGEuV
	dq DqlheHPpOeHtAXTuJH
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 000087 */
DRaUpfIPPDFvEMKWsx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+104]
mov [rsi+48], r12d
mov rax, 0x008D01DF1853C444
mov [rsi+104], rax
xor rax, rax
mov [rsi+112], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NEhxKfMJgmBtMFPevm
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NEhxKfMJgmBtMFPevm:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq FHUtOSKdoBCwKTmLCV
	dq FHUtOSKdoBCwKTmLCV
	dq 0
DqlheHPpOeHtAXTuJH:
	dq DRaUpfIPPDFvEMKWsx
	dq NEhxKfMJgmBtMFPevm
	dq FHUtOSKdoBCwKTmLCV
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 00008F */
AJREUMHbhumPIUBrtu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+64]
mov [rsi+104], rax
mov rax, [rsi+72]
mov [rsi+112], rax
mov eax, [rsi+80]
mov [rsi+120], eax
mov rax, [rsi+88]
mov [rsi+128], rax
mov rax, [rsi+96]
mov [rsi+136], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NQIHODAdIUOgKatGba
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NQIHODAdIUOgKatGba:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776DD90
	dd 0x000001DF
	dq QkaLKPFMJfIMGilETN
	dq QkaLKPFMJfIMGilETN
	dq 0
FHUtOSKdoBCwKTmLCV:
	dq AJREUMHbhumPIUBrtu
	dq NQIHODAdIUOgKatGba
	dq QkaLKPFMJfIMGilETN
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 00009B */
NKeJTtPIIsrqCdmsaH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+104]
mov [rsi+24], r12d
mov rax, 0x008D01DF1853C465
mov [rsi+104], rax
xor rax, rax
mov [rsi+112], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CGxJKdEEREaTPakhek
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CGxJKdEEREaTPakhek:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq AwPjvOEfQMsGGAtJha
	dq AwPjvOEfQMsGGAtJha
	dq 0
QkaLKPFMJfIMGilETN:
	dq NKeJTtPIIsrqCdmsaH
	dq CGxJKdEEREaTPakhek
	dq AwPjvOEfQMsGGAtJha
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 0000A3 */
JMfXHsPaJnUDIwbnWU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+72]
mov [rsi+104], rax
mov eax, [rsi+80]
mov [rsi+112], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, HQgktQDJAxpMJhborI
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HQgktQDJAxpMJhborI:
	dd 0x00000000
	dd 0x00000000
	dd 0x1778D190
	dd 0x000001DF
	dq JcTJVxBcTMahEPjFPg
	dq JcTJVxBcTMahEPjFPg
	dq 0
AwPjvOEfQMsGGAtJha:
	dq JMfXHsPaJnUDIwbnWU
	dq HQgktQDJAxpMJhborI
	dq JcTJVxBcTMahEPjFPg
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 0000A9 */
GWuLOSHXjBFlIeeHHQ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+104]
mov [rsi+56], r12d
mov rax, 0x008D01DF1853C489
mov [rsi+104], rax
mov rcx, rdi
mov rdx, BnisSAQOEROkGmRvJs
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+48]
mov eax, r12d
mov r12, rax
mov [rsi+120], r12
mov rcx, rdi
mov rdx, ACiQNTABONJGHDeEXA
call BSVM2_Op_CVTL2AA /* OP:0111-0000 */
mov rcx, rdi
mov rdx, ETeCFEGWwfPdBsNmNU
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+56]
mov eax, r12d
mov r12, rax
mov [rsi+120], r12
mov rcx, rdi
mov rdx, KoqusxMJrjpKFgSJFv
call BSVM2_Op_CVTL2AA /* OP:0111-0000 */
mov rcx, rdi
mov rdx, IXpBSAMBminMKORvub
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, ESFALHNmWhlQNKBgAO
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BnisSAQOEROkGmRvJs:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ACiQNTABONJGHDeEXA:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ETeCFEGWwfPdBsNmNU:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KoqusxMJrjpKFgSJFv:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IXpBSAMBminMKORvub:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
ESFALHNmWhlQNKBgAO:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq LHdDncDoVpufEfjbHI
	dq LHdDncDoVpufEfjbHI
	dq 0
JcTJVxBcTMahEPjFPg:
	dq GWuLOSHXjBFlIeeHHQ
	dq ESFALHNmWhlQNKBgAO
	dq LHdDncDoVpufEfjbHI
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeBasic 0000C4 */
KQOaUvJgjPHOBSOcgM:
mov rdx, JDCHDGBsSdfSNqpVMs
jmp BSVM2_TrOp_RETIL
align 8
JDCHDGBsSdfSNqpVMs:
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq LHdDncDoVpufEfjbHI
	dq 0
LHdDncDoVpufEfjbHI:
	dq KQOaUvJgjPHOBSOcgM
	dq JDCHDGBsSdfSNqpVMs
	dq LHdDncDoVpufEfjbHI
	dq 0x000001DF1776E7E0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_DecodeScanForComponentLayer 000000 */
PGkOkEMuWItTGcamfE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C4A1
mov [rsi+56], rax
xor rax, rax
mov [rsi+64], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PMbRqoObptfuGgEJDJ
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
PMbRqoObptfuGgEJDJ:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq IprpNCIApWNcGNhflE
	dq IprpNCIApWNcGNhflE
	dq 0
PHbnMeOIohxpIuGDRW:
	dq PGkOkEMuWItTGcamfE
	dq PMbRqoObptfuGgEJDJ
	dq IprpNCIApWNcGNhflE
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000005 */
LISSkhFsuQrwHgWgnK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov [rsi+0], rax
mov r12, [rsi+32]
mov r13d, [rsi+40]
mov [rsi+64], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+56], r12
mov [rsi+16], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, IsjOpeATjeQaNQSprs
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IprpNCIApWNcGNhflE:
	dq LISSkhFsuQrwHgWgnK
	dq 0
	dq IsjOpeATjeQaNQSprs
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000011 */
OLOjsvFwjuQwCiAakI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r13, [rsi+16]
mov [rsi+56], r12
mov [rsi+64], r13
mov rax, r12
mov rcx, r13
sub rax, rcx
sub rcx, r12
sar rax, 63
shr rcx, 63
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, CEfUlHEdswvwPUgbhL
cmp ecx, 0
mov r10, EEBULMERBFCuPdakuG
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
IsjOpeATjeQaNQSprs:
	dq OLOjsvFwjuQwCiAakI
	dq 0
	dq EEBULMERBFCuPdakuG
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 00001A */
AimHlADLIKeqKQQJVu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
movzxb edx, [rax]
mov r12d, edx
mov [rsi+56], r12
mov eax, r12d
mov ecx, 255
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, MxFTUmAQLkwcDhdnhn
cmp ecx, 0
mov r10, NDjBiLGHoDStCjJTew
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
CEfUlHEdswvwPUgbhL:
	dq AimHlADLIKeqKQQJVu
	dq 0
	dq NDjBiLGHoDStCjJTew
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000023 */
JQrCNNAEQjuBFmiDqx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r13, [rsi+16]
mov [rsi+56], r12
mov [rsi+64], r13
mov rax, r12
mov rcx, r13
sub rax, rcx
sub rcx, r12
sar rax, 63
shr rcx, 63
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, BXtlBxLfsAKSGCMoat
cmp ecx, 0
mov r10, CxVaTgQOrIlLJdMxVl
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
MxFTUmAQLkwcDhdnhn:
	dq JQrCNNAEQjuBFmiDqx
	dq 0
	dq CxVaTgQOrIlLJdMxVl
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 00002C */
KpSSOsPTLbBdLjOGJg:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
movzxb edx, [rax]
mov r12d, edx
mov [rsi+56], r12
mov eax, r12d
mov ecx, 255
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, NfmSHUFLFxeuQCEexL
cmp ecx, 0
mov r10, CxVaTgQOrIlLJdMxVl
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
BXtlBxLfsAKSGCMoat:
	dq KpSSOsPTLbBdLjOGJg
	dq 0
	dq CxVaTgQOrIlLJdMxVl
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000035 */
LiocWSIDrmJsBcPDuM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
lea r12, [r12+1]
mov [rsi+56], r12
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, MxFTUmAQLkwcDhdnhn
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NfmSHUFLFxeuQCEexL:
	dq LiocWSIDrmJsBcPDuM
	dq 0
	dq MxFTUmAQLkwcDhdnhn
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000040 */
LDEGIGDfXwcfDsTitG:
mov rdx, IsjOpeATjeQaNQSprs
mov rax, [rdx+0]
jmp rax
align 8
CxVaTgQOrIlLJdMxVl:
	dq LDEGIGDfXwcfDsTitG
	dq 0
	dq IsjOpeATjeQaNQSprs
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000043 */
BIcPspEnmeTELuOiIM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
movzxb r12d, [r12]
mov [rsi+56], r12
mov eax, r12d
mov ecx, 255
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, GTsKukEDADixIMngEm
cmp ecx, 0
mov r10, NrsbBMBgLGOGLdmGPJ
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
NDjBiLGHoDStCjJTew:
	dq BIcPspEnmeTELuOiIM
	dq 0
	dq NrsbBMBgLGOGLdmGPJ
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 00004E */
LjtoqpLRedSxEXGkfw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov rax, r12
movzxb r12d, [r12+1]
mov [rsi+56], r12
mov eax, r12d
mov ecx, 235
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, CaQVfvBfFrGKNhiFLR
cmp ecx, 0
mov r10, NrsbBMBgLGOGLdmGPJ
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
GTsKukEDADixIMngEm:
	dq LjtoqpLRedSxEXGkfw
	dq 0
	dq NrsbBMBgLGOGLdmGPJ
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000059 */
LbJnGNNlxacULofLHC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov rax, r12
movzxb r12d, [r12+2]
shl r12d, 8
mov r13, [rsi+0]
mov rax, r13
movzxb r13d, [r13+3]
or r12d, r13d
mov [rsi+24], r12d
mov r12, [rsi+0]
mov r13d, [rsi+24]
movsxd rcx, r13d
lea r12, [r12+rcx]
lea r12, [r12+2]
mov [rsi+8], r12
mov r12, [rsi+0]
lea r12, [r12+4]
mov [rsi+0], r12
mov r12, [rsi+0]
mov [rsi+56], r12
mov [rsi+64], r13
mov rcx, rdi
mov rdx, GMoWILHEamAsKURFbT
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rax, 0x008D01DF1853C4D3
mov [rsi+64], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, KMmrtIIgXVOHGMBeQK
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GMoWILHEamAsKURFbT:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KMmrtIIgXVOHGMBeQK:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776B420
	dd 0x000001DF
	dq AOljeqOUqgsvDAVBSf
	dq AOljeqOUqgsvDAVBSf
	dq 0
CaQVfvBfFrGKNhiFLR:
	dq LbJnGNNlxacULofLHC
	dq KMmrtIIgXVOHGMBeQK
	dq AOljeqOUqgsvDAVBSf
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000085 */
FeotmdNLdiQXINJAPe:
mov rdx, ANwlqbDQpRqwMUmQEv
jmp BSVM2_TrOp_JNE
align 8
ANwlqbDQpRqwMUmQEv:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq IHrvqTDexaGTAIfIso
	dq GMNWJIFgqPolQhMlow
	dq 0
AOljeqOUqgsvDAVBSf:
	dq FeotmdNLdiQXINJAPe
	dq ANwlqbDQpRqwMUmQEv
	dq GMNWJIFgqPolQhMlow
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000088 */
QPPTpSLqNcTaHKhjLJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
mov [rsi+56], rax
mov r12, [rsi+0]
mov [rsi+64], r12
mov rcx, rdi
mov rdx, JILFuMNdSGDnAAcdRP
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BqGhKbFWoqpwHXvrbd
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
JILFuMNdSGDnAAcdRP:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BqGhKbFWoqpwHXvrbd:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776B590
	dd 0x000001DF
	dq FuRspCOsvrDKOQvgKT
	dq FuRspCOsvrDKOQvgKT
	dq 0
IHrvqTDexaGTAIfIso:
	dq QPPTpSLqNcTaHKhjLJ
	dq BqGhKbFWoqpwHXvrbd
	dq FuRspCOsvrDKOQvgKT
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000090 */
OsEwOFKjpfPCKVCUiV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, [rsi+64]
inc dword r13d
mov r12, [rsi+56]
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+0], r12
mov r12, [rsi+0]
mov [rsi+56], r12
mov [rsi+64], r13
mov rcx, rdi
mov rdx, AGEKxGKJrkwHCetWbQ
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r13, [rsi+48]
mov [rsi+64], r13
mov rcx, rdi
mov rdx, NwkdoRGjQbWFQdTdsT
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, EhVGxIDHkcnPHQwPkh
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AGEKxGKJrkwHCetWbQ:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NwkdoRGjQbWFQdTdsT:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EhVGxIDHkcnPHQwPkh:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776B420
	dd 0x000001DF
	dq GWuRoFMvULjWCfKUwQ
	dq GWuRoFMvULjWCfKUwQ
	dq 0
FuRspCOsvrDKOQvgKT:
	dq OsEwOFKjpfPCKVCUiV
	dq EhVGxIDHkcnPHQwPkh
	dq GWuRoFMvULjWCfKUwQ
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000A0 */
MxWCRpCNiSvHPBAQIo:
mov rdx, AneXCoHxMFJoOnKxpF
jmp BSVM2_TrOp_JNE
align 8
AneXCoHxMFJoOnKxpF:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq BmtHjbCjQHIBCVsMlq
	dq NIwMNdDeUAGjFPjIKi
	dq 0
GWuRoFMvULjWCfKUwQ:
	dq MxWCRpCNiSvHPBAQIo
	dq AneXCoHxMFJoOnKxpF
	dq NIwMNdDeUAGjFPjIKi
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000A3 */
DHGixBJTKUaMPPbxEk:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C4E5
mov [rsi+56], rax
mov rcx, rdi
mov rdx, NEgqjPChqILtHHIAhA
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r13, [rsi+48]
mov [rsi+72], r13
mov rcx, rdi
mov rdx, OhSuERGdNfdeFjiOcV
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, NeERIANoLwHKKfxtJV
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NEgqjPChqILtHHIAhA:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OhSuERGdNfdeFjiOcV:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NeERIANoLwHKKfxtJV:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq EsEOtFBmaVfBOsEiUF
	dq EsEOtFBmaVfBOsEiUF
	dq 0
BmtHjbCjQHIBCVsMlq:
	dq DHGixBJTKUaMPPbxEk
	dq NeERIANoLwHKKfxtJV
	dq EsEOtFBmaVfBOsEiUF
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000AE */
HGuspfPWCsEtMpiEbX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
mov [rsi+56], rax
mov r12, [rsi+0]
mov [rsi+64], r12
mov rcx, rdi
mov rdx, AwqBAjQWoLkECvrcXJ
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IeGWvtDOUGiNOkaxfE
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AwqBAjQWoLkECvrcXJ:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IeGWvtDOUGiNOkaxfE:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776B590
	dd 0x000001DF
	dq EpOGLBHCBFwFAmCWBd
	dq EpOGLBHCBFwFAmCWBd
	dq 0
EsEOtFBmaVfBOsEiUF:
	dq HGuspfPWCsEtMpiEbX
	dq IeGWvtDOUGiNOkaxfE
	dq EpOGLBHCBFwFAmCWBd
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000B6 */
EVSCmsNpKLbqHJEvDE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, [rsi+64]
inc dword r13d
mov r12, [rsi+56]
mov [rsi+64], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+56], r12
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, KfGgweCsNuiKCBiCOg
add rsp, 504
jmp BSVM2_TrOp_RETAL
align 8
KfGgweCsNuiKCBiCOg:
	dd 0x00040001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq NIwMNdDeUAGjFPjIKi
	dq NIwMNdDeUAGjFPjIKi
	dq 0
EpOGLBHCBFwFAmCWBd:
	dq EVSCmsNpKLbqHJEvDE
	dq KfGgweCsNuiKCBiCOg
	dq NIwMNdDeUAGjFPjIKi
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000BE */
ErTprAAGCTmnPGgFkk:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
mov [rsi+56], rax
mov r12, [rsi+0]
mov [rsi+64], r12
mov rcx, rdi
mov rdx, GTHMPpQTDofEKrHnSm
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, QdfPxGBQEfCoABJvEi
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GTHMPpQTDofEKrHnSm:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QdfPxGBQEfCoABJvEi:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776B590
	dd 0x000001DF
	dq HlHVGnMfCXMwQAMfQe
	dq HlHVGnMfCXMwQAMfQe
	dq 0
NIwMNdDeUAGjFPjIKi:
	dq ErTprAAGCTmnPGgFkk
	dq QdfPxGBQEfCoABJvEi
	dq HlHVGnMfCXMwQAMfQe
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000C6 */
CCbmQKHPeIWeGvwdOh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, [rsi+64]
inc dword r13d
mov r12, [rsi+56]
mov [rsi+64], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+56], r12
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, IsjOpeATjeQaNQSprs
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HlHVGnMfCXMwQAMfQe:
	dq CCbmQKHPeIWeGvwdOh
	dq 0
	dq IsjOpeATjeQaNQSprs
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000CF */
LIBOITEcenHpACmHkO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r13d, [rsi+24]
sub r13d, 2
mov [rsi+64], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+56], r12
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, IsjOpeATjeQaNQSprs
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GMNWJIFgqPolQhMlow:
	dq LIBOITEcenHpACmHkO
	dq 0
	dq IsjOpeATjeQaNQSprs
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000DC */
CIHQeWPheJPIHrNGMC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
movzxb r12d, [r12]
mov [rsi+56], r12
mov eax, r12d
mov ecx, 255
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, CWTUhLKMfbHlBxEWUD
cmp ecx, 0
mov r10, GRliLAEHIwptPHeuHg
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
NrsbBMBgLGOGLdmGPJ:
	dq CIHQeWPheJPIHrNGMC
	dq 0
	dq GRliLAEHIwptPHeuHg
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000E7 */
MNNgJMDLePmtCORPox:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov rax, r12
movzxb r12d, [r12+1]
mov [rsi+56], r12
mov eax, r12d
mov ecx, 224
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, DsTQgBMushLWQoQNjr
cmp ecx, 0
mov r10, GRliLAEHIwptPHeuHg
cmovl rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
CWTUhLKMfbHlBxEWUD:
	dq MNNgJMDLePmtCORPox
	dq 0
	dq GRliLAEHIwptPHeuHg
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000F2 */
PMsDUhQCsbiiDLAKRt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov rax, r12
movzxb r12d, [r12+1]
mov [rsi+56], r12
mov eax, r12d
mov ecx, 239
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, JbBGiOIeNUGsPpXAXI
cmp ecx, 0
mov r10, GRliLAEHIwptPHeuHg
cmovg rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
DsTQgBMushLWQoQNjr:
	dq PMsDUhQCsbiiDLAKRt
	dq 0
	dq GRliLAEHIwptPHeuHg
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 0000FD */
NRmRkWOojOXGCWfriE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov rax, r12
movzxb r12d, [r12+2]
shl r12d, 8
mov r13, [rsi+0]
mov rax, r13
movzxb r13d, [r13+3]
or r12d, r13d
mov [rsi+24], r12d
mov r12, [rsi+0]
mov r13d, [rsi+24]
add r13d, 2
mov [rsi+64], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+56], r12
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, IsjOpeATjeQaNQSprs
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JbBGiOIeNUGsPpXAXI:
	dq NRmRkWOojOXGCWfriE
	dq 0
	dq IsjOpeATjeQaNQSprs
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000119 */
GSuMfxIhuuovODblhR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
lea r12, [r12+1]
mov [rsi+56], r12
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IsjOpeATjeQaNQSprs
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GRliLAEHIwptPHeuHg:
	dq GSuMfxIhuuovODblhR
	dq 0
	dq IsjOpeATjeQaNQSprs
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 000124 */
KUeJSjPaTKorCIrNUv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C51A
mov [rsi+56], rax
xor rax, rax
mov [rsi+64], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, HoWIGNJugAoLCxlUxG
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HoWIGNJugAoLCxlUxG:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq KtlpaKGmgwkTPluksR
	dq KtlpaKGmgwkTPluksR
	dq 0
EEBULMERBFCuPdakuG:
	dq KUeJSjPaTKorCIrNUv
	dq HoWIGNJugAoLCxlUxG
	dq KtlpaKGmgwkTPluksR
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeScanForComponentLayer 00012A */
GgmqFgDfvOkbArhOPF:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
xor rax, rax
mov [rsi+56], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PupHiuFLlXDWAtCbjj
add rsp, 504
jmp BSVM2_TrOp_RETA
align 8
PupHiuFLlXDWAtCbjj:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq KtlpaKGmgwkTPluksR
	dq 0
KtlpaKGmgwkTPluksR:
	dq GgmqFgDfvOkbArhOPF
	dq PupHiuFLlXDWAtCbjj
	dq KtlpaKGmgwkTPluksR
	dq 0x000001DF1776E630
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* (null) 000000 */
GBUclTDnBhRLKSMenR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+24]
mov [rsi+0], rax
mov r12, [rsi+24]
mov r13d, [rsi+32]
mov [rsi+48], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+40], r12
mov [rsi+8], r12
mov eax, 0x00000000
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, BCsikFQhhoVbINTExb
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GsvHmnMsMjxJILuuXW:
	dq GBUclTDnBhRLKSMenR
	dq 0
	dq BCsikFQhhoVbINTExb
	dq 0x000001DF1778D270
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* (null) 00000F */
AqCAcwHOxSngHuvPll:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r13, [rsi+8]
mov [rsi+40], r12
mov [rsi+48], r13
mov rax, r12
mov rcx, r13
sub rax, rcx
sub rcx, r12
sar rax, 63
shr rcx, 63
or eax, ecx
mov [rsi+40], eax
mov ecx, [rsi+40]
mov rax, KiKQUJBsfQFtQkXLSS
cmp ecx, 0
mov r10, DXQhFQHhopBTJBqAbJ
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
BCsikFQhhoVbINTExb:
	dq AqCAcwHOxSngHuvPll
	dq 0
	dq DXQhFQHhopBTJBqAbJ
	dq 0x000001DF1778D270
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* (null) 000018 */
HtgQANIxiAgcIcWOko:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+16]
imul r12d, 65521
mov r13, [rsi+0]
mov r14, r13
lea r14, [r14+1]
mov [rsi+56], r14
mov [rsi+0], r14
movzxb r13d, [r13]
mov [rsi+48], r13
add r12d, r13d
inc dword r12d
mov [rsi+40], r12
mov [rsi+16], r12d
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, BCsikFQhhoVbINTExb
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
KiKQUJBsfQFtQkXLSS:
	dq HtgQANIxiAgcIcWOko
	dq 0
	dq BCsikFQhhoVbINTExb
	dq 0x000001DF1778D270
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* (null) 000031 */
FwNxTeJMpRgkPeiHca:
mov rdx, OIuARqNPnPslPUgKxa
jmp BSVM2_TrOp_RETIL
align 8
OIuARqNPnPslPUgKxa:
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq DXQhFQHhopBTJBqAbJ
	dq 0
DXQhFQHhopBTJBqAbJ:
	dq FwNxTeJMpRgkPeiHca
	dq OIuARqNPnPslPUgKxa
	dq DXQhFQHhopBTJBqAbJ
	dq 0x000001DF1778D270
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_DecodeCtxInner 000000 */
JajJAIHMkOCTOtuBRe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
movzxb r12d, [r12]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 255
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, ONaAKlDfjLdEDbBMiG
cmp ecx, 0
mov r10, BDLhnjMRCHpxOiLhum
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
HUlhEbPVqADxBKTCGU:
	dq JajJAIHMkOCTOtuBRe
	dq 0
	dq BDLhnjMRCHpxOiLhum
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00000B */
AxKdsQNMApshBWJrRc:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov rax, r12
movzxb r12d, [r12+1]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 216
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, BDLhnjMRCHpxOiLhum
cmp ecx, 0
mov r10, AkHcvmALDwkuIQWwfg
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
ONaAKlDfjLdEDbBMiG:
	dq AxKdsQNMApshBWJrRc
	dq 0
	dq AkHcvmALDwkuIQWwfg
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000016 */
MbEjwgDPlAemHiimVG:
mov rdx, DqtktXOUppxnOsJJKi
jmp BSVM2_TrOp_RETIC
align 8
DqtktXOUppxnOsJJKi:
	dd 0x00000000
	dd 0x00000000
	dd 0xFFFFFFFF
	dd 0x00000000
	dq AkHcvmALDwkuIQWwfg
	dq AkHcvmALDwkuIQWwfg
	dq 0
BDLhnjMRCHpxOiLhum:
	dq MbEjwgDPlAemHiimVG
	dq DqtktXOUppxnOsJJKi
	dq AkHcvmALDwkuIQWwfg
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000018 */
IHBRsuGEAnIrDIaQLl:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
xor r12, r12
mov rax, [rsi+312]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+240], edx
xor r12, r12
mov rax, [rsi+312]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+242], edx
mov rax, 0x008D01DF1853C54F
mov [rsi+352], rax
xor rax, rax
mov [rsi+360], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DrxKeRMqTRjoLPCvUL
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DrxKeRMqTRjoLPCvUL:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq LamxnGDQqAkcCVMjlj
	dq LamxnGDQqAkcCVMjlj
	dq 0
AkHcvmALDwkuIQWwfg:
	dq IHBRsuGEAnIrDIaQLl
	dq DrxKeRMqTRjoLPCvUL
	dq LamxnGDQqAkcCVMjlj
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000025 */
CRqVeoKfpPGUKkWOJG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+280], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CccbPpJdhsQDEVAumK
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LamxnGDQqAkcCVMjlj:
	dq CRqVeoKfpPGUKkWOJG
	dq 0
	dq CccbPpJdhsQDEVAumK
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00002B */
NePKpwFUmOxsNSePWN:
mov rdx, CpPJqWFKdPJBEooDSe
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
CpPJqWFKdPJBEooDSe:
	dd 0x00290023
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq KafuOnMKWMOAJBkqpW
	dq HJGaOFHrVSLABISpIs
	dq 0
CccbPpJdhsQDEVAumK:
	dq NePKpwFUmOxsNSePWN
	dq CpPJqWFKdPJBEooDSe
	dq HJGaOFHrVSLABISpIs
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000031 */
PokqVmOChciRAXhiPU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 255
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, FjjoIjKeLNeUFWiEAM
cmp ecx, 0
mov r10, NhRMdEPSaHroDlTJNw
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
KafuOnMKWMOAJBkqpW:
	dq PokqVmOChciRAXhiPU
	dq 0
	dq NhRMdEPSaHroDlTJNw
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00003D */
MQgWRUBDMiEeCOlcCW:
mov rdx, ADuIIlLFWuMRJUpoKr
mov rax, [rdx+0]
jmp rax
align 8
FjjoIjKeLNeUFWiEAM:
	dq MQgWRUBDMiEeCOlcCW
	dq 0
	dq ADuIIlLFWuMRJUpoKr
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000040 */
IsSMguGUNUWLHsIqxI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 0
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, CXKlSqMGWHmQIjibau
cmp ecx, 0
mov r10, AWXPeqLaVfdUCsetaV
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
NhRMdEPSaHroDlTJNw:
	dq IsSMguGUNUWLHsIqxI
	dq 0
	dq AWXPeqLaVfdUCsetaV
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00004E */
NdXQLwANGJcCOqXOem:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+280]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, ADuIIlLFWuMRJUpoKr
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CXKlSqMGWHmQIjibau:
	dq NdXQLwANGJcCOqXOem
	dq 0
	dq ADuIIlLFWuMRJUpoKr
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000053 */
MRgcGfQdIFxPQGcDfB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 255
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, QNpbNXHpMNbrOcnFnG
cmp ecx, 0
mov r10, CTrmTiOhgSOFCWHEMc
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
AWXPeqLaVfdUCsetaV:
	dq MRgcGfQdIFxPQGcDfB
	dq 0
	dq CTrmTiOhgSOFCWHEMc
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000062 */
AornCVAuIJEMFIMUtG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+280]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, ADuIIlLFWuMRJUpoKr
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QNpbNXHpMNbrOcnFnG:
	dq AornCVAuIJEMFIMUtG
	dq 0
	dq ADuIIlLFWuMRJUpoKr
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000067 */
ICRNEmPoQHxQFXFMVN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 216
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, QJTAHqGmFNmfNfBqOv
cmp ecx, 0
mov r10, CLXJBJQLPLIdLQaSJk
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
CTrmTiOhgSOFCWHEMc:
	dq ICRNEmPoQHxQFXFMVN
	dq 0
	dq CLXJBJQLPLIdLQaSJk
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000076 */
ANtnahQDGcTkQBarmo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+280]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, ADuIIlLFWuMRJUpoKr
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QJTAHqGmFNmfNfBqOv:
	dq ANtnahQDGcTkQBarmo
	dq 0
	dq ADuIIlLFWuMRJUpoKr
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00007B */
AKWgKWBfdlkXCqTeBW:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
sub r12d, 192
mov [rsi+288], r12d
mov eax, [rsi+288]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+288]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, HNWwgxHfEkvFFTIgBu
cmp ecx, 0
mov r10, PvMuTCBHAdMQPCbogD
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
CLXJBJQLPLIdLQaSJk:
	dq AKWgKWBfdlkXCqTeBW
	dq 0
	dq PvMuTCBHAdMQPCbogD
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000090 */
FKObpnPmJmKmCQXdXL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x0000003F
mov [rsi+288], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PvMuTCBHAdMQPCbogD
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HNWwgxHfEkvFFTIgBu:
	dq FKObpnPmJmKmCQXdXL
	dq 0
	dq PvMuTCBHAdMQPCbogD
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000096 */
KQIKTjMxgfGhIuLTQj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 219
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, DCIDTRHIeBjWQUdUWW
cmp ecx, 0
mov r10, JJJAbWBaGEGoMWsTmx
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
PvMuTCBHAdMQPCbogD:
	dq KQIKTjMxgfGhIuLTQj
	dq 0
	dq JJJAbWBaGEGoMWsTmx
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000A5 */
LQdwhCMHukJRQgmtPO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C574
mov [rsi+352], rax
xor rax, rax
mov [rsi+360], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GkbJBBHTBfBOKHUKFD
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GkbJBBHTBfBOKHUKFD:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq MghOnwDWunAEFJHKAg
	dq MghOnwDWunAEFJHKAg
	dq 0
DCIDTRHIeBjWQUdUWW:
	dq LQdwhCMHukJRQgmtPO
	dq GkbJBBHTBfBOKHUKFD
	dq MghOnwDWunAEFJHKAg
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000AA */
QgPONIAodljDMtMnwv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+312]
mov [rsi+352], rax
mov r12, [rsi+320]
mov r13d, [rsi+280]
mov [rsi+368], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+360], r12
mov rax, [rsi+360]
lea rdx, [rax+2]
mov [rsi+360], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, IDgFVbMEFsxAAgerbG
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
IDgFVbMEFsxAAgerbG:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776D210
	dd 0x000001DF
	dq NQrexIMPKmpQHfxGdo
	dq NQrexIMPKmpQHfxGdo
	dq 0
MghOnwDWunAEFJHKAg:
	dq QgPONIAodljDMtMnwv
	dq IDgFVbMEFsxAAgerbG
	dq NQrexIMPKmpQHfxGdo
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000B9 */
QAAVScEGTHFcHLEpeL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JJJAbWBaGEGoMWsTmx
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NQrexIMPKmpQHfxGdo:
	dq QAAVScEGTHFcHLEpeL
	dq 0
	dq JJJAbWBaGEGoMWsTmx
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000BB */
DWRjlsChcLNXECXfAC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 196
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, KRDUAnNwEuMSFbeiWt
cmp ecx, 0
mov r10, LglWivLPofabClrrBJ
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
JJJAbWBaGEGoMWsTmx:
	dq DWRjlsChcLNXECXfAC
	dq 0
	dq LglWivLPofabClrrBJ
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000CA */
MNOCdvDrPLDiFgHMId:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C597
mov [rsi+352], rax
xor rax, rax
mov [rsi+360], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DLVXRpLmECPGMRpUju
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DLVXRpLmECPGMRpUju:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq PNMetACsFGwLAiOWxW
	dq PNMetACsFGwLAiOWxW
	dq 0
KRDUAnNwEuMSFbeiWt:
	dq MNOCdvDrPLDiFgHMId
	dq DLVXRpLmECPGMRpUju
	dq PNMetACsFGwLAiOWxW
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000D0 */
PrHoNoFGgEJCMUmoVm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+312]
mov [rsi+352], rax
mov r12, [rsi+320]
mov r13d, [rsi+280]
mov [rsi+368], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+360], r12
mov rax, [rsi+360]
lea rdx, [rax+2]
mov [rsi+360], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, JugJDxNdSBEhHthERR
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
JugJDxNdSBEhHthERR:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776D380
	dd 0x000001DF
	dq JfmBSjFjvfpxCFgFWG
	dq JfmBSjFjvfpxCFgFWG
	dq 0
PNMetACsFGwLAiOWxW:
	dq PrHoNoFGgEJCMUmoVm
	dq JugJDxNdSBEhHthERR
	dq JfmBSjFjvfpxCFgFWG
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000DF */
PlbBrCPsMPwvKMOaOM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LglWivLPofabClrrBJ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JfmBSjFjvfpxCFgFWG:
	dq PlbBrCPsMPwvKMOaOM
	dq 0
	dq LglWivLPofabClrrBJ
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000E1 */
EuVodxLeUSqtBugplS:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 192
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, QkuEAjPvPTaENvUGaf
cmp ecx, 0
mov r10, JUKjLwBHufDFGLrqDP
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
LglWivLPofabClrrBJ:
	dq EuVodxLeUSqtBugplS
	dq 0
	dq JUKjLwBHufDFGLrqDP
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000F0 */
DDhicmAIleTxPRdhMN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C5BA
mov [rsi+352], rax
xor rax, rax
mov [rsi+360], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, HPmGViFMufrgACCWwM
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HPmGViFMufrgACCWwM:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq DStumbJFWFNaFxgDJi
	dq DStumbJFWFNaFxgDJi
	dq 0
QkuEAjPvPTaENvUGaf:
	dq DDhicmAIleTxPRdhMN
	dq HPmGViFMufrgACCWwM
	dq DStumbJFWFNaFxgDJi
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0000F6 */
QNtdiwHpeaSsHBJJow:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+312]
mov [rsi+352], rax
mov r12, [rsi+320]
mov r13d, [rsi+280]
mov [rsi+368], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+360], r12
mov rax, [rsi+360]
lea rdx, [rax+2]
mov [rsi+360], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, MCuqBWNtRcLqFutLDF
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MCuqBWNtRcLqFutLDF:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776D060
	dd 0x000001DF
	dq GEtPNwLpqmNGCwXxBU
	dq GEtPNwLpqmNGCwXxBU
	dq 0
DStumbJFWFNaFxgDJi:
	dq QNtdiwHpeaSsHBJJow
	dq MCuqBWNtRcLqFutLDF
	dq GEtPNwLpqmNGCwXxBU
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000105 */
LWJJOwEjLnBuNOaWQq:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JUKjLwBHufDFGLrqDP
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GEtPNwLpqmNGCwXxBU:
	dq LWJJOwEjLnBuNOaWQq
	dq 0
	dq JUKjLwBHufDFGLrqDP
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000107 */
LmbkRFEcCokRExlUrt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 218
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, KnLSpRHVXcbjPPpqsb
cmp ecx, 0
mov r10, JkwsINIfVtvBLBSXst
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
JUKjLwBHufDFGLrqDP:
	dq LmbkRFEcCokRExlUrt
	dq 0
	dq JkwsINIfVtvBLBSXst
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000116 */
OJhIwXMdISoiAgFTPX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C5DE
mov [rsi+352], rax
xor rax, rax
mov [rsi+360], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BCfAeGGnbwwLIISNnA
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BCfAeGGnbwwLIISNnA:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq OGoSXpQbMVaDDDvxGr
	dq OGoSXpQbMVaDDDvxGr
	dq 0
KnLSpRHVXcbjPPpqsb:
	dq OJhIwXMdISoiAgFTPX
	dq BCfAeGGnbwwLIISNnA
	dq OGoSXpQbMVaDDDvxGr
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00011C */
PkWLmKAJKaNsBfFXkK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+312]
mov [rsi+352], rax
mov r12, [rsi+320]
mov r13d, [rsi+280]
mov [rsi+368], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+360], r12
mov rax, [rsi+360]
lea rdx, [rax+2]
mov [rsi+360], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, AbvdiXDtdMUIKQMfgb
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AbvdiXDtdMUIKQMfgb:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CE40
	dd 0x000001DF
	dq MRltquAwiowMJrGpcS
	dq MRltquAwiowMJrGpcS
	dq 0
OGoSXpQbMVaDDDvxGr:
	dq PkWLmKAJKaNsBfFXkK
	dq AbvdiXDtdMUIKQMfgb
	dq MRltquAwiowMJrGpcS
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00012B */
OlfIAeESmbSUGRVQFP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+352]
mov [rsi+288], r12d
mov eax, [rsi+288]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+288]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, IjuXuqEBqSaMMOEraq
cmp ecx, 0
mov r10, CNtnPfBAXCieQCQppt
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
MRltquAwiowMJrGpcS:
	dq OlfIAeESmbSUGRVQFP
	dq 0
	dq CNtnPfBAXCieQCQppt
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000134 */
NIfsmMBnkQKJDDhPKB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+280]
add eax, [rsi+288]
mov [rsi+280], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, CNtnPfBAXCieQCQppt
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IjuXuqEBqSaMMOEraq:
	dq NIfsmMBnkQKJDDhPKB
	dq 0
	dq CNtnPfBAXCieQCQppt
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00013A */
CCljjiMMuNUsIDXuPU:
mov rdx, ADuIIlLFWuMRJUpoKr
mov rax, [rdx+0]
jmp rax
align 8
CNtnPfBAXCieQCQppt:
	dq CCljjiMMuNUsIDXuPU
	dq 0
	dq ADuIIlLFWuMRJUpoKr
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00013D */
HfsfnDMIsahLCFxReK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 224
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, QQmeKkDPnpdXKQPFsK
cmp ecx, 0
mov r10, QUBaVOAKffLcBRIjja
cmovl rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
JkwsINIfVtvBLBSXst:
	dq HfsfnDMIsahLCFxReK
	dq 0
	dq QUBaVOAKffLcBRIjja
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00014C */
IqcVvpHRXQhxCJtuWn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 239
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, IIRullQHXEGtPmkLNt
cmp ecx, 0
mov r10, QUBaVOAKffLcBRIjja
cmovg rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
QQmeKkDPnpdXKQPFsK:
	dq IqcVvpHRXQhxCJtuWn
	dq 0
	dq QUBaVOAKffLcBRIjja
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00015B */
LbpvIAMJxGLlDbLkhj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C601
mov [rsi+352], rax
mov rcx, rdi
mov rdx, GCaGReALCLopFRwCOo
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12, [rsi+320]
mov r14d, [rsi+280]
add r14d, 1
mov [rsi+376], r14
movsxd rcx, r14d
movzxb r12d, [r12+rcx]
sub r12d, 224
mov [rsi+368], r12
mov rcx, rdi
mov rdx, BcaCjVEnhLNXQdINaO
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, NhablMCrKOUwMTtahW
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, NQVQJKLnexoeGJaJfC
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GCaGReALCLopFRwCOo:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BcaCjVEnhLNXQdINaO:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NhablMCrKOUwMTtahW:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NQVQJKLnexoeGJaJfC:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq DfQTwsCjedaePMwwct
	dq DfQTwsCjedaePMwwct
	dq 0
IIRullQHXEGtPmkLNt:
	dq LbpvIAMJxGLlDbLkhj
	dq NQVQJKLnexoeGJaJfC
	dq DfQTwsCjedaePMwwct
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000173 */
ItIVFPEugOjuFNrviX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 224
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, EpQsNDDwfWdgEtLRvx
cmp ecx, 0
mov r10, BmcjorAagWLNGRKIKp
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
DfQTwsCjedaePMwwct:
	dq ItIVFPEugOjuFNrviX
	dq 0
	dq BmcjorAagWLNGRKIKp
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000182 */
LMNpbUCJxfiQCockQM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+312]
mov [rsi+352], rax
mov r12, [rsi+320]
mov r13d, [rsi+280]
mov [rsi+368], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+360], r12
mov rax, [rsi+360]
lea rdx, [rax+2]
mov [rsi+360], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, FtdNIVCbfbRQNKHfIC
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FtdNIVCbfbRQNKHfIC:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776D4F0
	dd 0x000001DF
	dq GtBDWSBHFWrEESWqst
	dq GtBDWSBHFWrEESWqst
	dq 0
EpQsNDDwfWdgEtLRvx:
	dq LMNpbUCJxfiQCockQM
	dq FtdNIVCbfbRQNKHfIC
	dq GtBDWSBHFWrEESWqst
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000191 */
PsbJbgISGxIIJegdGe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BmcjorAagWLNGRKIKp
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GtBDWSBHFWrEESWqst:
	dq PsbJbgISGxIIJegdGe
	dq 0
	dq BmcjorAagWLNGRKIKp
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000193 */
JVRMIwCRvLteCWJGSP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 235
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, ISRRHOPuclPBBEkuVN
cmp ecx, 0
mov r10, KlArpsGrTsphHOxUvH
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
BmcjorAagWLNGRKIKp:
	dq JVRMIwCRvLteCWJGSP
	dq 0
	dq KlArpsGrTsphHOxUvH
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0001A2 */
KreJXtGpWAjjBKHwgC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+312]
mov [rsi+352], rax
mov r12, [rsi+320]
mov r13d, [rsi+280]
mov [rsi+368], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+360], r12
mov rax, [rsi+360]
lea rdx, [rax+2]
mov [rsi+360], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, CxbSJpIwLqCEFHgIln
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CxbSJpIwLqCEFHgIln:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776D7D0
	dd 0x000001DF
	dq CsoVuRBtLbTRQffhIa
	dq CsoVuRBtLbTRQffhIa
	dq 0
ISRRHOPuclPBBEkuVN:
	dq KreJXtGpWAjjBKHwgC
	dq CxbSJpIwLqCEFHgIln
	dq CsoVuRBtLbTRQffhIa
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0001B1 */
LNiKbXAPAlsVDgMMjt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KlArpsGrTsphHOxUvH
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CsoVuRBtLbTRQffhIa:
	dq LNiKbXAPAlsVDgMMjt
	dq 0
	dq KlArpsGrTsphHOxUvH
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0001B3 */
LRWgBIHOeELTNEJsSQ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 236
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, PJkFudDRvrwRJqHwlH
cmp ecx, 0
mov r10, DJFIhrOqCTNuFFwvrJ
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
KlArpsGrTsphHOxUvH:
	dq LRWgBIHOeELTNEJsSQ
	dq 0
	dq DJFIhrOqCTNuFFwvrJ
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0001C2 */
IuKgJpGKUNAeFDRArd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+312]
mov [rsi+352], rax
mov r12, [rsi+320]
mov r13d, [rsi+280]
mov [rsi+368], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+360], r12
mov rax, [rsi+360]
lea rdx, [rax+2]
mov [rsi+360], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, EaCHUsQEmrdjLgVtEr
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
EaCHUsQEmrdjLgVtEr:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776D940
	dd 0x000001DF
	dq FPlEeWApjLgXMqosdh
	dq FPlEeWApjLgXMqosdh
	dq 0
PJkFudDRvrwRJqHwlH:
	dq IuKgJpGKUNAeFDRArd
	dq EaCHUsQEmrdjLgVtEr
	dq FPlEeWApjLgXMqosdh
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0001D1 */
NVhlRGAPNTobEuNFOp:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DJFIhrOqCTNuFFwvrJ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FPlEeWApjLgXMqosdh:
	dq NVhlRGAPNTobEuNFOp
	dq 0
	dq DJFIhrOqCTNuFFwvrJ
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0001D3 */
KTkrigMMCtlvJXTxlJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 238
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, JdlAnKFCToTTAnWDKJ
cmp ecx, 0
mov r10, KSUSXWKRwJFCMiqBBB
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
DJFIhrOqCTNuFFwvrJ:
	dq KTkrigMMCtlvJXTxlJ
	dq 0
	dq KSUSXWKRwJFCMiqBBB
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0001E2 */
HXiDOLQQMsdmHXaAqD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+312]
mov [rsi+352], rax
mov r12, [rsi+320]
mov r13d, [rsi+280]
mov [rsi+368], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+360], r12
mov rax, [rsi+360]
lea rdx, [rax+2]
mov [rsi+360], rdx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, MGePwiQWekjTHkAqmb
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MGePwiQWekjTHkAqmb:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776DAB0
	dd 0x000001DF
	dq JCtgvVFtCSqIJnHwLL
	dq JCtgvVFtCSqIJnHwLL
	dq 0
JdlAnKFCToTTAnWDKJ:
	dq HXiDOLQQMsdmHXaAqD
	dq MGePwiQWekjTHkAqmb
	dq JCtgvVFtCSqIJnHwLL
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0001F1 */
GuacSBEFpKMBQLhRPV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KSUSXWKRwJFCMiqBBB
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JCtgvVFtCSqIJnHwLL:
	dq GuacSBEFpKMBQLhRPV
	dq 0
	dq KSUSXWKRwJFCMiqBBB
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 0001F3 */
BlSeeRNXoVDWLkbnaT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r14, [rsi+280]
mov r13d, r14d
add r13d, 2
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
shl r12d, 8
mov r13, [rsi+320]
mov r15d, r14d
add r15d, 3
mov [rsi+368], r15
movsxd rcx, r15d
movzxb r13d, [r13+rcx]
mov [rsi+360], r13
or r12d, r13d
mov [rsi+352], r12
mov [rsi+288], r12d
mov eax, r14d
add eax, [rsi+288]
mov [rsi+280], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, ADuIIlLFWuMRJUpoKr
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
KSUSXWKRwJFCMiqBBB:
	dq BlSeeRNXoVDWLkbnaT
	dq 0
	dq ADuIIlLFWuMRJUpoKr
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000212 */
EuKPEqJQSEEVQlADwE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+320]
mov r13d, [rsi+280]
add r13d, 1
mov [rsi+360], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+352], r12
mov eax, r12d
mov ecx, 217
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+352], eax
mov ecx, [rsi+352]
mov rax, HobwUQOphOCcEjiEON
cmp ecx, 0
mov r10, ADuIIlLFWuMRJUpoKr
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
QUBaVOAKffLcBRIjja:
	dq EuKPEqJQSEEVQlADwE
	dq 0
	dq ADuIIlLFWuMRJUpoKr
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000221 */
HrJufbJjEwRCAmbukh:
mov rdx, HJGaOFHrVSLABISpIs
mov rax, [rdx+0]
jmp rax
align 8
HobwUQOphOCcEjiEON:
	dq HrJufbJjEwRCAmbukh
	dq 0
	dq HJGaOFHrVSLABISpIs
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000224 */
NDjEkkOUUpESCNCJKh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+280]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, CccbPpJdhsQDEVAumK
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
ADuIIlLFWuMRJUpoKr:
	dq NDjEkkOUUpESCNCJKh
	dq 0
	dq CccbPpJdhsQDEVAumK
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000229 */
HBTAnICuglapFLFMIi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C626
mov [rsi+352], rax
xor rax, rax
mov [rsi+360], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IFJgXCCuRLUNJpunSk
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
IFJgXCCuRLUNJpunSk:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq EPamhsFRkRCGHPnLSF
	dq EPamhsFRkRCGHPnLSF
	dq 0
HJGaOFHrVSLABISpIs:
	dq HBTAnICuglapFLFMIi
	dq IFJgXCCuRLUNJpunSk
	dq EPamhsFRkRCGHPnLSF
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 00022F */
ILDeSJPQluvhKVaTok:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C64A
mov [rsi+352], rax
mov rcx, rdi
mov rdx, LkJQMWPnmSCVOHsofC
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rax, [rsi+312]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+96]
mov r12d, edx
mov [rsi+368], r12
mov rcx, rdi
mov rdx, OoAGnlMhfqRQLGDixV
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, DrmXFIIEvKjuJEeJda
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rax, [rsi+312]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+100]
mov r12d, edx
mov [rsi+368], r12
mov rcx, rdi
mov rdx, MdTohCKDucoqALOJqg
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, DbawswFXGGicNciNeR
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, IfmvdUApHOFWEUFVHB
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
LkJQMWPnmSCVOHsofC:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OoAGnlMhfqRQLGDixV:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DrmXFIIEvKjuJEeJda:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MdTohCKDucoqALOJqg:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DbawswFXGGicNciNeR:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
IfmvdUApHOFWEUFVHB:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq BcPpmGGHEXoMFprdWv
	dq BcPpmGGHEXoMFprdWv
	dq 0
EPamhsFRkRCGHPnLSF:
	dq ILDeSJPQluvhKVaTok
	dq IfmvdUApHOFWEUFVHB
	dq BcPpmGGHEXoMFprdWv
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_DecodeCtxInner 000246 */
MvxDsIFSqHFlOtoaXV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+312]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+96]
mov r12d, edx
mov rax, [rsi+336]
mov edx, r12d
mov [rax], edx
mov rax, [rsi+312]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+100]
mov r12d, edx
mov [rsi+352], r12
mov rax, [rsi+344]
mov edx, r12d
mov [rax], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BJxuOmMhRuJqORNLAM
add rsp, 504
jmp BSVM2_TrOp_RETIC
align 8
BJxuOmMhRuJqORNLAM:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq BcPpmGGHEXoMFprdWv
	dq 0
BcPpmGGHEXoMFprdWv:
	dq MvxDsIFSqHFlOtoaXV
	dq BJxuOmMhRuJqORNLAM
	dq BcPpmGGHEXoMFprdWv
	dq 0x000001DF1776DE70
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_MarkerAPP0 000000 */
ESVJceEAjjpdBHmEeG:
mov rdx, HLsxtUAbReRBArAEwI
jmp BSVM2_TrOp_RETIC
align 8
HLsxtUAbReRBArAEwI:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq PMGmoDMempkTBOrhWe
	dq 0
PMGmoDMempkTBOrhWe:
	dq ESVJceEAjjpdBHmEeG
	dq HLsxtUAbReRBArAEwI
	dq PMGmoDMempkTBOrhWe
	dq 0x000001DF1776D5D0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_MarkerDQT 000000 */
PtFumWDKwVNoKhsKvT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+48]
movzxb r12d, [r12]
shl r12d, 8
mov r13, [rsi+48]
mov rax, r13
movzxb r13d, [r13+1]
or r12d, r13d
mov [rsi+32], r12d
mov r12, [rsi+48]
lea r12, [r12+2]
mov [rsi+0], r12
mov r12, [rsi+48]
mov r13d, [rsi+32]
mov [rsi+64], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+56], r12
mov [rsi+8], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, LBLNUaCFpGSKQgGRwo
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IwFdFiEkuuIDIVHWhb:
	dq PtFumWDKwVNoKhsKvT
	dq 0
	dq LBLNUaCFpGSKQgGRwo
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDQT 000021 */
OnNOqOHIRnhgCSFDlw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r13, [rsi+8]
mov [rsi+56], r12
mov [rsi+64], r13
mov rax, r12
mov rcx, r13
sub rax, rcx
sub rcx, r12
sar rax, 63
shr rcx, 63
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, GFLeqHCOHanmDpuIFj
cmp ecx, 0
mov r10, OjviATHjnxrGNClOuU
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
LBLNUaCFpGSKQgGRwo:
	dq OnNOqOHIRnhgCSFDlw
	dq 0
	dq OjviATHjnxrGNClOuU
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDQT 00002A */
PKPrPCHJdJcdKbAVvA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
movzxb r12d, [r12]
sar r12d, 4
and r12d, 15
mov [rsi+16], r12d
mov eax, [rsi+16]
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, JlaaGqNjofMoGqeBse
cmp ecx, 0
mov r10, AUbqiELXAiPRKNjFpl
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
GFLeqHCOHanmDpuIFj:
	dq PKPrPCHJdJcdKbAVvA
	dq 0
	dq AUbqiELXAiPRKNjFpl
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDQT 00003A */
BsvEcAAKRktvPDlnAv:
mov rdx, MGuCnhLJLtcXCnDOqD
jmp BSVM2_TrOp_RETIC
align 8
MGuCnhLJLtcXCnDOqD:
	dd 0x00000000
	dd 0x00000000
	dd 0xFFFFFFFF
	dd 0x00000000
	dq AUbqiELXAiPRKNjFpl
	dq AUbqiELXAiPRKNjFpl
	dq 0
JlaaGqNjofMoGqeBse:
	dq BsvEcAAKRktvPDlnAv
	dq MGuCnhLJLtcXCnDOqD
	dq AUbqiELXAiPRKNjFpl
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDQT 00003C */
JdhXfpHovtJXENCngr:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
movzxb r12d, [r12]
and r12d, 15
mov [rsi+56], r12
mov [rsi+16], r12d
mov eax, 0x00000000
mov [rsi+24], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BhHthaBUoBoPMoMjGo
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
AUbqiELXAiPRKNjFpl:
	dq JdhXfpHovtJXENCngr
	dq 0
	dq BhHthaBUoBoPMoMjGo
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDQT 000049 */
BakVpqIoXNPaBhfeud:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+24]
mov ecx, 64
sub eax, ecx
sub ecx, [rsi+24]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+56], eax
mov ecx, [rsi+56]
mov rax, DtjfLEMFQTaiNFgbNj
cmp ecx, 0
mov r10, OMbaguMHsCesKXMDga
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
BhHthaBUoBoPMoMjGo:
	dq BakVpqIoXNPaBhfeud
	dq 0
	dq OMbaguMHsCesKXMDga
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDQT 00004F */
OXChmvEpQLbOMCdSlU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, [rsi+0]
mov r12d, [rsi+24]
add r12d, 1
movsxd rcx, r12d
movzxb r13d, [r13+rcx]
mov rax, [rsi+40]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+88]
mov r12, rdx
mov [rsi+64], r12
mov [rsi+56], r13
mov rcx, rdi
mov rdx, IQvjvFOglKEcHUUpLi
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdx, EEWoVpILHHKjIBAggg
call BSVM2_Op_LDGSA /* OP:007E-0000 */
mov ebx, [rsi+24]
mov [rsi+88], rbx
mov rcx, rdi
mov rdx, IWASRLPLhKrqNXSDDa
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov r14, [rsi+72]
add r14d, [rsi+80]
mov [rsi+72], r14
mov rcx, rdi
mov rdx, LkHuxlDfMiFNLtkJTi
call BSVM2_Op_RSTIXB /* OP:004E-0000 */
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, CmVrMKFiNGOtCKmDNS
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IQvjvFOglKEcHUUpLi:
	dd 0x00020009
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000006
	dd 0x00000000
	dq 0
EEWoVpILHHKjIBAggg:
	dd 0x00040000
	dd 0x00030000
	dd 0x00000002
	dd 0x00000000
	dd 0x17782530
	dd 0x000001DF
	dq 0
IWASRLPLhKrqNXSDDa:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LkHuxlDfMiFNLtkJTi:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DtjfLEMFQTaiNFgbNj:
	dq OXChmvEpQLbOMCdSlU
	dq 0
	dq CmVrMKFiNGOtCKmDNS
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDQT 000063 */
LGjEVLALIhvnLwHKwM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+24]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, BhHthaBUoBoPMoMjGo
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CmVrMKFiNGOtCKmDNS:
	dq LGjEVLALIhvnLwHKwM
	dq 0
	dq BhHthaBUoBoPMoMjGo
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDQT 000068 */
NmNkDqPHOPgrPiBjtK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
lea r12, [r12+65]
mov [rsi+56], r12
mov [rsi+0], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LBLNUaCFpGSKQgGRwo
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OMbaguMHsCesKXMDga:
	dq NmNkDqPHOPgrPiBjtK
	dq 0
	dq LBLNUaCFpGSKQgGRwo
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDQT 000074 */
HlqpoUKpiSXKNSexJA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r13, [rsi+48]
mov [rsi+56], r12
mov [rsi+64], r13
mov rax, r12
mov rcx, r13
sub rax, rcx
mov [rsi+56], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, AalaulMpavlHPkXcjN
add rsp, 504
jmp BSVM2_TrOp_RETI
align 8
AalaulMpavlHPkXcjN:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq OjviATHjnxrGNClOuU
	dq 0
OjviATHjnxrGNClOuU:
	dq HlqpoUKpiSXKNSexJA
	dq AalaulMpavlHPkXcjN
	dq OjviATHjnxrGNClOuU
	dq 0x000001DF1776D2F0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_MarkerSOF0 000000 */
OmsItdHwVhieFoNEtU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+72]
movzxb r12d, [r12]
shl r12d, 8
mov r13, [rsi+72]
mov rax, r13
movzxb r13d, [r13+1]
or r12d, r13d
mov [rsi+40], r12d
mov r12, [rsi+72]
mov rax, r12
movzxb r12d, [r12+3]
shl r12d, 8
mov r13, [rsi+72]
mov rax, r13
movzxb r13d, [r13+4]
or r12d, r13d
mov [rsi+16], r12d
mov r12, [rsi+72]
mov rax, r12
movzxb r12d, [r12+5]
shl r12d, 8
mov r13, [rsi+72]
mov rax, r13
movzxb r13d, [r13+6]
mov [rsi+88], r13
or r12d, r13d
mov [rsi+24], r12d
mov r12d, [rsi+24]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+96], edx
mov r12d, [rsi+16]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+100], edx
mov eax, 0x00000000
mov [rsi+48], eax
mov eax, 0x00000000
mov [rsi+56], eax
mov r12, [rsi+72]
mov rax, r12
movzxb r12d, [r12+7]
mov [rsi+32], r12d
mov r12, [rsi+72]
lea r12, [r12+8]
mov [rsi+80], r12
mov [rsi+8], r12
mov eax, 0x00000000
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, OCrOrFDWLUAnMtXslX
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IJxxWLGAOTsFKgNRCc:
	dq OmsItdHwVhieFoNEtU
	dq 0
	dq OCrOrFDWLUAnMtXslX
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 000050 */
FHfncaPNonwPOJHjBH:
mov rdx, OsgkixCtsADwOhKlKH
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
OsgkixCtsADwOhKlKH:
	dd 0x00040002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq LrvpxJNWWCuBEtoDnp
	dq IgecAhHeJSPbJnaecF
	dq 0
OCrOrFDWLUAnMtXslX:
	dq FHfncaPNonwPOJHjBH
	dq OsgkixCtsADwOhKlKH
	dq IgecAhHeJSPbJnaecF
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 000055 */
AuJLfOGnDvvpPWMlAu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+8]
movzxb r12d, [r12]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+112]
mov r13, rdx
mov r14d, [rsi+16]
mov [rsi+80], r12
mov [rsi+88], r13
mov [rsi+96], r14
mov rcx, rdi
mov rdx, KJvQutQGPvBrDKFiAD
call BSVM2_Op_RSTIXB /* OP:004E-0000 */
mov r12, [rsi+8]
mov rax, r12
movzxb r12d, [r12+1]
sar r12d, 4
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+120]
mov r13, rdx
mov r14d, [rsi+16]
mov [rsi+80], r12
mov [rsi+88], r13
mov [rsi+96], r14
mov rcx, rdi
mov rdx, JUdikULKERleQICsTX
call BSVM2_Op_RSTIXB /* OP:004E-0000 */
mov r12, [rsi+8]
mov rax, r12
movzxb r12d, [r12+1]
and r12d, 15
movzxb r12d, r12b
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+128]
mov r13, rdx
mov r14d, [rsi+16]
mov [rsi+80], r12
mov [rsi+88], r13
mov [rsi+96], r14
mov rcx, rdi
mov rdx, GkHBuEHpmqaGLkKcVd
call BSVM2_Op_RSTIXB /* OP:004E-0000 */
mov r12, [rsi+8]
mov rax, r12
movzxb r12d, [r12+2]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+136]
mov r13, rdx
mov r14d, [rsi+16]
mov [rsi+80], r12
mov [rsi+88], r13
mov [rsi+96], r14
mov rcx, rdi
mov rdx, HNASILBiSBaKBqtLND
call BSVM2_Op_RSTIXB /* OP:004E-0000 */
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+120]
mov r12, rdx
mov r13d, [rsi+16]
mov [rsi+80], r12
mov [rsi+88], r13
mov rcx, rdi
mov rdx, PnfHskDiUeLfPbqnJK
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov eax, [rsi+48]
mov [rsi+88], eax
mov ecx, [rsi+80]
mov rax, KdVjQqKHkWMWCTHIHs
cmp ecx, [rsi+88]
mov r10, CpNEHaAnwAvUEIUtrR
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
KJvQutQGPvBrDKFiAD:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JUdikULKERleQICsTX:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GkHBuEHpmqaGLkKcVd:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HNASILBiSBaKBqtLND:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PnfHskDiUeLfPbqnJK:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LrvpxJNWWCuBEtoDnp:
	dq AuJLfOGnDvvpPWMlAu
	dq 0
	dq CpNEHaAnwAvUEIUtrR
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 000092 */
CnBEerBxwXgLKnLxkr:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+120]
mov r12, rdx
mov r13d, [rsi+16]
mov [rsi+80], r12
mov [rsi+88], r13
mov rcx, rdi
mov rdx, GNSmwnGuTHBbLvaBaB
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov eax, [rsi+80]
mov [rsi+48], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, CpNEHaAnwAvUEIUtrR
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GNSmwnGuTHBbLvaBaB:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KdVjQqKHkWMWCTHIHs:
	dq CnBEerBxwXgLKnLxkr
	dq 0
	dq CpNEHaAnwAvUEIUtrR
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 00009B */
GHwkmeMSKNXMGEcmjR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+128]
mov r13, rdx
mov r12d, [rsi+16]
mov [rsi+88], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, HslVjgNffXXFMIvlLT
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov eax, [rsi+56]
mov [rsi+88], eax
mov ecx, [rsi+80]
mov rax, QBldurOnAXWLLwsiCG
cmp ecx, [rsi+88]
mov r10, ElIRfMLXsmdsLXsHLg
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
HslVjgNffXXFMIvlLT:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CpNEHaAnwAvUEIUtrR:
	dq GHwkmeMSKNXMGEcmjR
	dq 0
	dq ElIRfMLXsmdsLXsHLg
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 0000A7 */
LTNvhFMQSibmQTtmod:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+128]
mov r12, rdx
mov r13d, [rsi+16]
mov [rsi+80], r12
mov [rsi+88], r13
mov rcx, rdi
mov rdx, PFwNSjQVvHUeHPIXQX
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov eax, [rsi+80]
mov [rsi+56], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, ElIRfMLXsmdsLXsHLg
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
PFwNSjQVvHUeHPIXQX:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QBldurOnAXWLLwsiCG:
	dq LTNvhFMQSibmQTtmod
	dq 0
	dq ElIRfMLXsmdsLXsHLg
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 0000B0 */
JFvSdFPWpPwbLrUxrO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+8]
lea r12, [r12+3]
mov [rsi+80], r12
mov [rsi+8], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IeqIobQMSnwAKUMJgI
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
ElIRfMLXsmdsLXsHLg:
	dq JFvSdFPWpPwbLrUxrO
	dq 0
	dq IeqIobQMSnwAKUMJgI
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 0000B9 */
QnNSjCKMrIVbOGQkMB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, OCrOrFDWLUAnMtXslX
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IeqIobQMSnwAKUMJgI:
	dq QnNSjCKMrIVbOGQkMB
	dq 0
	dq OCrOrFDWLUAnMtXslX
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 0000BE */
LlQwMuLwEkAjFttMQK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+48]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+164], edx
mov r12d, [rsi+56]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+80], r12
mov edx, r12d
mov [rax+168], edx
mov eax, 0x00000000
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OuwbavKlIMnKPKaTuK
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IgecAhHeJSPbJnaecF:
	dq LlQwMuLwEkAjFttMQK
	dq 0
	dq OuwbavKlIMnKPKaTuK
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 0000CC */
PDFWcdIoOwPVJJsuXK:
mov rdx, ItiwKdLRGmfHEUIhWL
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
ItiwKdLRGmfHEUIhWL:
	dd 0x00040002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq GdHklVPRJJXpNslmiL
	dq JddAXWONMqCINsrGol
	dq 0
OuwbavKlIMnKPKaTuK:
	dq PDFWcdIoOwPVJJsuXK
	dq ItiwKdLRGmfHEUIhWL
	dq JddAXWONMqCINsrGol
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 0000D1 */
GrwAaRGhIKnTFrgfEt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+120]
mov r13, rdx
mov r12d, [rsi+16]
mov [rsi+88], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, FvlvVRHItiuRJFeAir
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+96]
mov r12d, edx
mov r13, [rsi+80]
imul r13d, r12d
mov r12d, [rsi+48]
mov [rsi+88], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, QdtKuGLPLbCWKaJems
call BSVM2_Op_DIVI /* OP:0170-0000 */
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+144]
mov r12, rdx
mov r14d, [rsi+16]
mov [rsi+88], r12
mov [rsi+96], r14
mov rcx, rdi
mov rdx, BxiiNKCHJtaQDrpWNt
call BSVM2_Op_RSTIXI /* OP:0044-0000 */
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+128]
mov r13, rdx
mov r12d, [rsi+16]
mov [rsi+88], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, OjfcJPNhbVnrDplxCa
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+100]
mov r12d, edx
mov r13, [rsi+80]
imul r13d, r12d
mov r12d, [rsi+56]
mov [rsi+88], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, PXVAlULRRmNsESweSi
call BSVM2_Op_DIVI /* OP:0170-0000 */
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+152]
mov r12, rdx
mov r14d, [rsi+16]
mov [rsi+88], r12
mov [rsi+96], r14
mov rcx, rdi
mov rdx, QDNugVExdWgwAktcMG
call BSVM2_Op_RSTIXI /* OP:0044-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, QcSdCQNQTSwQCuBkII
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FvlvVRHItiuRJFeAir:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QdtKuGLPLbCWKaJems:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BxiiNKCHJtaQDrpWNt:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OjfcJPNhbVnrDplxCa:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PXVAlULRRmNsESweSi:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QDNugVExdWgwAktcMG:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GdHklVPRJJXpNslmiL:
	dq GrwAaRGhIKnTFrgfEt
	dq 0
	dq QcSdCQNQTSwQCuBkII
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 0000FA */
JGRLuQLJHgrlAdQGVB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, OuwbavKlIMnKPKaTuK
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QcSdCQNQTSwQCuBkII:
	dq JGRLuQLJHgrlAdQGVB
	dq 0
	dq OuwbavKlIMnKPKaTuK
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOF0 0000FF */
JSnrJbAqBIfsHTkOpP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+32]
mov rax, [rsi+64]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+80], r12
mov edx, r12d
mov [rax+160], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JSgamfNpWvwbPQjwGb
add rsp, 504
jmp BSVM2_TrOp_RETIC
align 8
JSgamfNpWvwbPQjwGb:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq JddAXWONMqCINsrGol
	dq 0
JddAXWONMqCINsrGol:
	dq JSnrJbAqBIfsHTkOpP
	dq JSgamfNpWvwbPQjwGb
	dq JddAXWONMqCINsrGol
	dq 0x000001DF1776D140
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_MarkerDHT 000000 */
HRvxADQkXPtBIcTeLP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+64]
movzxb r12d, [r12]
shl r12d, 8
mov r13, [rsi+64]
mov rax, r13
movzxb r13d, [r13+1]
or r12d, r13d
mov [rsi+40], r12d
mov r12, [rsi+64]
mov rax, r12
movzxb r12d, [r12+2]
sar r12d, 4
and r12d, 15
mov [rsi+24], r12d
mov r12, [rsi+64]
mov rax, r12
movzxb r12d, [r12+2]
and r12d, 15
mov [rsi+16], r12d
mov rax, 0x008D01DF1853C65E
mov [rsi+72], rax
mov [rsi+80], r13
mov rcx, rdi
mov rdx, MinahvFexwSQAEcHNF
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+16]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, AngCtDJpWpePGhbnNf
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, GhshUcOHPdsmFpQUTm
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+24]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, LPqkkdBnnoBlKMoGgm
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, HgJVPbGvsvRGFrkfxg
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, FGKqaRGVrBsIAPObFD
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MinahvFexwSQAEcHNF:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AngCtDJpWpePGhbnNf:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GhshUcOHPdsmFpQUTm:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LPqkkdBnnoBlKMoGgm:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HgJVPbGvsvRGFrkfxg:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
FGKqaRGVrBsIAPObFD:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq ChlLgvLpgOsmBvmDBe
	dq ChlLgvLpgOsmBvmDBe
	dq 0
EQdwJqOufWsBDnCtph:
	dq HRvxADQkXPtBIcTeLP
	dq FGKqaRGVrBsIAPObFD
	dq ChlLgvLpgOsmBvmDBe
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000037 */
EtEiPvJCbMbxEFcXSr:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, PcKjENAQGAABNUsfLu
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+72]
add r12d, [rsi+24]
mov [rsi+72], r12
mov [rsi+48], r12d
mov eax, 0x00000000
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, KOecXxCumeGAQpWsCV
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
PcKjENAQGAABNUsfLu:
	dd 0x00020009
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
ChlLgvLpgOsmBvmDBe:
	dq EtEiPvJCbMbxEFcXSr
	dq 0
	dq KOecXxCumeGAQpWsCV
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000042 */
MtWrUAHQWLgoBDtMBI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+16]
mov ecx, 256
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+72], eax
mov ecx, [rsi+72]
mov rax, AJOprDKFcagpJxlPbQ
cmp ecx, 0
mov r10, OogHiJCbBIrfPQkDdJ
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
KOecXxCumeGAQpWsCV:
	dq MtWrUAHQWLgoBDtMBI
	dq 0
	dq OogHiJCbBIrfPQkDdJ
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000049 */
JBDIxsIWosWbCfikMI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
xor r14, r14
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+72]
mov r13, rdx
mov [rsi+80], r13
mov [rsi+72], r14
mov rcx, rdi
mov rdx, QMcIwVNkdKqpNQNJCB
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+88]
add r12d, [rsi+16]
mov r13, [rsi+80]
mov r14, [rsi+72]
movsxd rcx, r12d
mov [r13+rcx], r14b
mov r14d, 0xFFFFFFFF
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+64]
mov r13, rdx
mov [rsi+88], r12
mov [rsi+80], r13
mov [rsi+72], r14
mov rcx, rdi
mov rdx, KxDqGrPwLUGTPtWEoS
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+88]
add r12d, [rsi+16]
mov r13, [rsi+80]
mov r14, [rsi+72]
movsxd rcx, r12d
mov [r13+rcx*2], r14w
mov r14d, 0xFFFFFFFF
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+80]
mov r13, rdx
mov [rsi+88], r12
mov [rsi+80], r13
mov [rsi+72], r14
mov rcx, rdi
mov rdx, KTcxabQTkrTbAImHxE
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+88]
add r12d, [rsi+16]
mov [rsi+88], r12
mov rax, [rsi+80]
movsxd rcx, r12d
mov edx, [rsi+72]
mov [rax+rcx*2], dx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, QhRJujNMoSjpOGsFxg
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QMcIwVNkdKqpNQNJCB:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
KxDqGrPwLUGTPtWEoS:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
KTcxabQTkrTbAImHxE:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
AJOprDKFcagpJxlPbQ:
	dq JBDIxsIWosWbCfikMI
	dq 0
	dq QhRJujNMoSjpOGsFxg
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 00006D */
DPhvuSLJhfSfNBxBLi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, KOecXxCumeGAQpWsCV
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QhRJujNMoSjpOGsFxg:
	dq DPhvuSLJhfSfNBxBLi
	dq 0
	dq KOecXxCumeGAQpWsCV
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000072 */
KjnnRSDWRKSHJVqQXM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+64]
lea r12, [r12+3]
mov [rsi+0], r12
mov r12, [rsi+0]
lea r12, [r12+16]
mov [rsi+72], r12
mov [rsi+8], r12
mov eax, 0x00000000
mov [rsi+32], eax
mov eax, 0x00000000
mov [rsi+40], eax
mov eax, 0x00000000
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FpbwLAIwxtTwCcmXSH
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OogHiJCbBIrfPQkDdJ:
	dq KjnnRSDWRKSHJVqQXM
	dq 0
	dq FpbwLAIwxtTwCcmXSH
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 00008C */
FhNQmmFEPqLCFnJdId:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+16]
mov ecx, 16
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+72], eax
mov ecx, [rsi+72]
mov rax, EWbxqxMRAudTHQGwdL
cmp ecx, 0
mov r10, EcaMWGIvaqVkQmDFWs
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
FpbwLAIwxtTwCcmXSH:
	dq FhNQmmFEPqLCFnJdId
	dq 0
	dq EcaMWGIvaqVkQmDFWs
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000092 */
JoLCrBODxpDfIFqbqK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, MkxlaBOINqoECSUnPO
call BSVM2_Op_SHLI_LLC /* OP:01E6-0000 */
mov eax, 0x00000000
mov [rsi+24], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NBkbdOJAERahCnTlaF
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
MkxlaBOINqoECSUnPO:
	dd 0x00040004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
EWbxqxMRAudTHQGwdL:
	dq JoLCrBODxpDfIFqbqK
	dq 0
	dq NBkbdOJAERahCnTlaF
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 00009A */
OIDAHOJCmeGIJdChVp:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+24]
mov [rsi+72], eax
mov r12, [rsi+0]
mov r13d, [rsi+16]
mov [rsi+80], r12
mov [rsi+88], r13
mov rax, r12
movsxd rcx, r13d
movzxb edx, [rax+rcx]
mov [rsi+80], edx
mov ecx, [rsi+72]
mov rax, BsCmMPHAeSqDJoQJDr
cmp ecx, [rsi+80]
mov r10, FAbsKuOwmOqsAUMdRN
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
NBkbdOJAERahCnTlaF:
	dq OIDAHOJCmeGIJdChVp
	dq 0
	dq FAbsKuOwmOqsAUMdRN
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 0000A6 */
GDtXDICOhpPXQJJqbH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+32]
mov r13d, r12d
inc dword r13d
mov [rsi+32], r13d
movzxw r12d, r12w
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+48]
mov r13, rdx
mov [rsi+72], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, JKxEJkCnCsFXPmFNXE
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rax, [rsi+8]
movzxb edx, [rax]
mov r15d, edx
mov r14, [rsi+88]
add r14d, r15d
mov r13, [rsi+80]
mov r12, [rsi+72]
movsxd rcx, r14d
mov [r13+rcx*2], r12w
mov rbx, [rsi+16]
mov r12d, ebx
add r12d, 1
movzxb r12d, r12b
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+72]
mov r13, rdx
mov [rsi+72], r12
mov [rsi+80], r13
mov [rsi+88], r14
mov [rsi+96], r15
mov rcx, rdi
mov rdx, GMucqvOEGjWlLvwruF
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rax, [rsi+8]
movzxb edx, [rax]
mov r15d, edx
mov r14, [rsi+88]
add r14d, r15d
mov r13, [rsi+80]
mov r12, [rsi+72]
movsxd rcx, r14d
mov [r13+rcx], r12b
mov r12d, 0x00000001
mov rbx, [rsi+16]
mov r13d, ebx
add r13d, 1
mov eax, r12d
mov ecx, r13d
shl eax, cl
mov r12d, eax
dec dword r12d
movzxw r12d, r12w
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+56]
mov r13, rdx
mov [rsi+72], r12
mov [rsi+80], r13
mov [rsi+88], r14
mov [rsi+96], r15
mov rcx, rdi
mov rdx, OLxsxfMDGVBhNWpBFX
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rax, [rsi+8]
movzxb edx, [rax]
mov r15d, edx
mov r14, [rsi+88]
mov [rsi+96], r15
add r14d, r15d
mov [rsi+88], r14
mov r12, [rsi+72]
mov rax, [rsi+80]
movsxd rcx, r14d
mov edx, r12d
mov [rax+rcx*2], dx
mov eax, [rsi+16]
add eax, 1
mov [rsi+40], eax
mov r12, [rsi+8]
lea r12, [r12+1]
mov [rsi+72], r12
mov [rsi+8], r12
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, HvoMLJNsECjJFCxQjk
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JKxEJkCnCsFXPmFNXE:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
GMucqvOEGjWlLvwruF:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
OLxsxfMDGVBhNWpBFX:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
BsCmMPHAeSqDJoQJDr:
	dq GDtXDICOhpPXQJJqbH
	dq 0
	dq HvoMLJNsECjJFCxQjk
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 0000EA */
GFPGBvOWSmFhDfSgWe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+24]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, NBkbdOJAERahCnTlaF
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HvoMLJNsECjJFCxQjk:
	dq GFPGBvOWSmFhDfSgWe
	dq 0
	dq NBkbdOJAERahCnTlaF
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 0000EF */
KnAHOgPSfxViBCOqui:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, FpbwLAIwxtTwCcmXSH
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FAbsKuOwmOqsAUMdRN:
	dq KnAHOgPSfxViBCOqui
	dq 0
	dq FpbwLAIwxtTwCcmXSH
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 0000F4 */
IuWbeKGaAjnrPlMTct:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C678
mov [rsi+72], rax
mov rcx, rdi
mov rdx, HxEUfqPePSRNFwEmDR
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+32]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, LIeGwlHGNcxrPEqimt
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, OhnBrdAushbMKcxdSF
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+40]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, DmwfplEilAthJNiLov
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, CHnUCeJdvjwWAVQJDr
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, ItlOSnKAkltHPsARgT
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HxEUfqPePSRNFwEmDR:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LIeGwlHGNcxrPEqimt:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OhnBrdAushbMKcxdSF:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DmwfplEilAthJNiLov:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CHnUCeJdvjwWAVQJDr:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
ItlOSnKAkltHPsARgT:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq DmDSOdFWESRBFQXxxq
	dq DmDSOdFWESRBFQXxxq
	dq 0
EcaMWGIvaqVkQmDFWs:
	dq IuWbeKGaAjnrPlMTct
	dq ItlOSnKAkltHPsARgT
	dq DmDSOdFWESRBFQXxxq
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000108 */
EVnCqCOLLfnDABNCMO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, IDKhSMMmItsRCnnqcQ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DmDSOdFWESRBFQXxxq:
	dq EVnCqCOLLfnDABNCMO
	dq 0
	dq IDKhSMMmItsRCnnqcQ
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 00010C */
IXEfhGOEnmsXQOmXEw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+16]
mov ecx, 256
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+72], eax
mov ecx, [rsi+72]
mov rax, DPTTSRATNDETPcMpgi
cmp ecx, 0
mov r10, BuCDQkEgUTvdMFofju
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
IDKhSMMmItsRCnnqcQ:
	dq IXEfhGOEnmsXQOmXEw
	dq 0
	dq BuCDQkEgUTvdMFofju
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000113 */
DPoCfHLvOGGkMOHEwD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r14d, 0xFFFFFFFF
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+64]
mov r13, rdx
mov [rsi+80], r13
mov [rsi+72], r14
mov rcx, rdi
mov rdx, QNTNDGEmJhrpOgcWWq
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+88]
add r12d, [rsi+16]
mov r13, [rsi+80]
mov r14, [rsi+72]
movsxd rcx, r12d
mov [r13+rcx*2], r14w
mov r14d, 0xFFFFFFFF
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+80]
mov r13, rdx
mov [rsi+88], r12
mov [rsi+80], r13
mov [rsi+72], r14
mov rcx, rdi
mov rdx, ISKdMlLERtFmEhcTBN
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+88]
add r12d, [rsi+16]
mov [rsi+88], r12
mov rax, [rsi+80]
movsxd rcx, r12d
mov edx, [rsi+72]
mov [rax+rcx*2], dx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, ENWHgVDhSNbgDeXQtb
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QNTNDGEmJhrpOgcWWq:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
ISKdMlLERtFmEhcTBN:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
DPTTSRATNDETPcMpgi:
	dq DPoCfHLvOGGkMOHEwD
	dq 0
	dq ENWHgVDhSNbgDeXQtb
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 00012C */
MOhWmjJoaPqiEkdOVJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, IDKhSMMmItsRCnnqcQ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
ENWHgVDhSNbgDeXQtb:
	dq MOhWmjJoaPqiEkdOVJ
	dq 0
	dq IDKhSMMmItsRCnnqcQ
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000131 */
IvBbTJHpfmguFaujsu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JgLQovDDgwqTPxvRSl
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
BuCDQkEgUTvdMFofju:
	dq IvBbTJHpfmguFaujsu
	dq 0
	dq JgLQovDDgwqTPxvRSl
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000135 */
CfKwMlATvOnkNbJiDb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+16]
mov ecx, 256
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+72], eax
mov ecx, [rsi+72]
mov rax, PXpQbjQgFBLJKlFWTi
cmp ecx, 0
mov r10, AvgJjXEcSAPkCPmRrL
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
JgLQovDDgwqTPxvRSl:
	dq CfKwMlATvOnkNbJiDb
	dq 0
	dq AvgJjXEcSAPkCPmRrL
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 00013C */
EcTsxxKjnkcJQmWNRT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+72]
mov r12, rdx
mov [rsi+72], r12
mov rcx, rdi
mov rdx, NQTWMWMEQGGLLeerBV
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r13, [rsi+80]
add r13d, [rsi+16]
mov r12, [rsi+72]
mov [rsi+80], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+40], r12d
mov eax, [rsi+40]
mov [rsi+72], eax
mov ecx, [rsi+72]
mov rax, GVVNnDOFxHrTAaOGhn
cmp ecx, 0
mov r10, KUUANXFHnvwIFIgriF
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
NQTWMWMEQGGLLeerBV:
	dd 0x0006000A
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
PXpQbjQgFBLJKlFWTi:
	dq EcTsxxKjnkcJQmWNRT
	dq 0
	dq KUUANXFHnvwIFIgriF
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 00014D */
MxnCsJGAigvkDpaGJe:
mov rdx, GbswxrLHbWSBEDmwiF
mov rax, [rdx+0]
jmp rax
align 8
GVVNnDOFxHrTAaOGhn:
	dq MxnCsJGAigvkDpaGJe
	dq 0
	dq GbswxrLHbWSBEDmwiF
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000150 */
NcEHBMOKRmNqKCkGbH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+48]
mov r12, rdx
mov [rsi+72], r12
mov rcx, rdi
mov rdx, KpiOXPQDkEtDJEcipG
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r13, [rsi+80]
add r13d, [rsi+16]
mov r12, [rsi+72]
mov [rsi+80], r13
movsxd rcx, r13d
movzxw r12d, [r12+rcx*2]
mov [rsi+24], r12d
mov eax, [rsi+40]
mov ecx, 8
sub eax, ecx
sub ecx, [rsi+40]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+72], eax
mov ecx, [rsi+72]
mov rax, MGqIxqIpacvuMnwOCd
cmp ecx, 0
mov r10, ISXaBrNxTETIBaBftB
cmovg rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
KpiOXPQDkEtDJEcipG:
	dd 0x0006000A
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
KUUANXFHnvwIFIgriF:
	dq NcEHBMOKRmNqKCkGbH
	dq 0
	dq ISXaBrNxTETIBaBftB
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000162 */
PfgUppObgROHDMwClN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+24]
mov r13d, 0x00000008
sub r13d, [rsi+40]
mov eax, r12d
mov ecx, r13d
shl eax, cl
mov r12d, eax
mov [rsi+24], r12d
mov r12d, 0x00000001
mov r13d, 0x00000008
sub r13d, [rsi+40]
mov [rsi+80], r13
mov eax, r12d
mov ecx, r13d
shl eax, cl
mov r12d, eax
mov [rsi+72], r12
mov [rsi+32], r12d
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, LsEQlwGpiqPEHrDrDc
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
MGqIxqIpacvuMnwOCd:
	dq PfgUppObgROHDMwClN
	dq 0
	dq LsEQlwGpiqPEHrDrDc
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000177 */
LNVQIHHlrCFkCwVmdP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+32]
mov [rsi+72], eax
mov r12d, [rsi+72]
dec dword r12d
mov [rsi+80], r12
mov [rsi+32], r12d
mov ecx, [rsi+72]
mov rax, KIGxprPuAiBTNBnuhl
cmp ecx, 0
mov r10, QfRnPSQgrNoEEhpqgM
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
LsEQlwGpiqPEHrDrDc:
	dq LNVQIHHlrCFkCwVmdP
	dq 0
	dq QfRnPSQgrNoEEhpqgM
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000180 */
EcVrHkGLfGwTKIfUwR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+24]
mov ecx, 256
sub eax, ecx
sub ecx, [rsi+24]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+72], eax
mov ecx, [rsi+72]
mov rax, EdpCLvITPsqvKKfsmK
cmp ecx, 0
mov r10, QfRnPSQgrNoEEhpqgM
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
KIGxprPuAiBTNBnuhl:
	dq EcVrHkGLfGwTKIfUwR
	dq 0
	dq QfRnPSQgrNoEEhpqgM
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000187 */
KvUNKBBNVOwPPtbkDh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+16]
movsxw r12d, r12w
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+80]
mov r14, rdx
mov [rsi+72], r12
mov [rsi+80], r14
mov rcx, rdi
mov rdx, NaemKAPxKmJvEXsMGe
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r13, [rsi+88]
add r13d, [rsi+24]
mov [rsi+88], r13
mov rax, [rsi+80]
movsxd rcx, r13d
mov edx, [rsi+72]
mov [rax+rcx*2], dx
inc dword [rsi+24]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, LsEQlwGpiqPEHrDrDc
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NaemKAPxKmJvEXsMGe:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
EdpCLvITPsqvKKfsmK:
	dq KvUNKBBNVOwPPtbkDh
	dq 0
	dq LsEQlwGpiqPEHrDrDc
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 000199 */
JLiahIKhRMjTGEjpDJ:
mov rdx, GbswxrLHbWSBEDmwiF
mov rax, [rdx+0]
jmp rax
align 8
QfRnPSQgrNoEEhpqgM:
	dq JLiahIKhRMjTGEjpDJ
	dq 0
	dq GbswxrLHbWSBEDmwiF
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 00019C */
PNhbbSMwULirLbjoVV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+24]
mov r13d, [rsi+40]
sub r13d, 8
mov eax, r12d
mov ecx, r13d
sar eax, cl
mov r12d, eax
mov [rsi+24], r12d
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+80]
mov r12, rdx
mov [rsi+72], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, GmmoggHSCXJwFWoKOo
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r13, [rsi+80]
add r13d, [rsi+24]
mov r12, [rsi+72]
movsxd rcx, r13d
movsxw r12d, [r12+rcx*2]
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+64]
mov r13, rdx
mov [rsi+72], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, PrhwcDPbBRTTQCLNRu
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r14, [rsi+88]
add r14d, [rsi+16]
mov r13, [rsi+80]
mov r12, [rsi+72]
movsxd rcx, r14d
mov [r13+rcx*2], r12w
mov r12d, [rsi+16]
movsxw r12d, r12w
mov rax, [rsi+56]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+80]
mov r13, rdx
mov [rsi+72], r12
mov [rsi+80], r13
mov [rsi+88], r14
mov rcx, rdi
mov rdx, KUvMMtAeNIljMGxHFI
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r14, [rsi+88]
add r14d, [rsi+24]
mov [rsi+88], r14
mov rax, [rsi+80]
movsxd rcx, r14d
mov edx, [rsi+72]
mov [rax+rcx*2], dx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, GbswxrLHbWSBEDmwiF
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GmmoggHSCXJwFWoKOo:
	dd 0x0006000A
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
PrhwcDPbBRTTQCLNRu:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
KUvMMtAeNIljMGxHFI:
	dd 0x0006000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
ISXaBrNxTETIBaBftB:
	dq PNhbbSMwULirLbjoVV
	dq 0
	dq GbswxrLHbWSBEDmwiF
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 0001C6 */
DPIsLRCiFVllEFofsv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, JgLQovDDgwqTPxvRSl
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GbswxrLHbWSBEDmwiF:
	dq DPIsLRCiFVllEFofsv
	dq 0
	dq JgLQovDDgwqTPxvRSl
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerDHT 0001CB */
CmeBEnHocFqoPRsvej:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+8]
mov r13, [rsi+64]
mov [rsi+72], r12
mov [rsi+80], r13
mov rax, r12
mov rcx, r13
sub rax, rcx
mov [rsi+72], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, PBIwvOLJnfSXItpWVR
add rsp, 504
jmp BSVM2_TrOp_RETI
align 8
PBIwvOLJnfSXItpWVR:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq AvgJjXEcSAPkCPmRrL
	dq 0
AvgJjXEcSAPkCPmRrL:
	dq CmeBEnHocFqoPRsvej
	dq PBIwvOLJnfSXItpWVR
	dq AvgJjXEcSAPkCPmRrL
	dq 0x000001DF1776D460
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_MarkerSOS 000000 */
GjbmSkPvLumsHpGOOw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, DwCkAJGOkWKENsXgID
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, FiUsQREhLXnMCNQeJa
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, OPgjjCOlqGjFFTItKB
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, NmATJIBXLbCbHnfILg
call BSVM2_Op_IFXARR_UBC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, QjgSPXBGiFWlFFcVSb
call BSVM2_Op_IFXARR_UBC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, BqNhQIJfFrKeERaPcl
call BSVM2_Op_IFXARR_UBC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, OjxUXvCnClXvBLjEsT
call BSVM2_Op_IFXARR_UBC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, DVKqKCBkSiInItjTCK
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, GttHSOKGwsjBINaIEV
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, OGCfnFCIuTjqDEndpk
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, CWmHqqJwFksUABPwox
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, GfmLMWDumSkrOWafxJ
call BSVM2_Op_IFXARR_UBC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, EOFuUUQeODcMMmofhQ
call BSVM2_Op_IFXARR_UBC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, AQiAXpARHtAhJtdHwf
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, GJhfdOCrdgBOKiKKen
call BSVM2_Op_IFXARR_AC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, PXdJBuQSowITKpnrHw
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rax, 0x008D01DF1853C689
mov [rsi+280], rax
xor rax, rax
mov [rsi+288], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KsNsriGfqvNdMmQeXO
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DwCkAJGOkWKENsXgID:
	dd 0x00000100
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FiUsQREhLXnMCNQeJa:
	dd 0x00010040
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OPgjjCOlqGjFFTItKB:
	dd 0x00020040
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NmATJIBXLbCbHnfILg:
	dd 0x00030004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QjgSPXBGiFWlFFcVSb:
	dd 0x00040004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BqNhQIJfFrKeERaPcl:
	dd 0x00050004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OjxUXvCnClXvBLjEsT:
	dd 0x00060004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DVKqKCBkSiInItjTCK:
	dd 0x00070004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GttHSOKGwsjBINaIEV:
	dd 0x00080004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OGCfnFCIuTjqDEndpk:
	dd 0x00090004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CWmHqqJwFksUABPwox:
	dd 0x000A0004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GfmLMWDumSkrOWafxJ:
	dd 0x000B0004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EOFuUUQeODcMMmofhQ:
	dd 0x000C0004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AQiAXpARHtAhJtdHwf:
	dd 0x000D0004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GJhfdOCrdgBOKiKKen:
	dd 0x000E0004
	dd 0x00000004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PXdJBuQSowITKpnrHw:
	dd 0x000F0004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KsNsriGfqvNdMmQeXO:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq OOIdtbCsumiCCQochd
	dq OOIdtbCsumiCCQochd
	dq 0
JGDtmTLuvDEJLfHubg:
	dq GjbmSkPvLumsHpGOOw
	dq KsNsriGfqvNdMmQeXO
	dq OOIdtbCsumiCCQochd
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000048 */
HWGLVIELMJMGERnNxV:
mov rdx, OadjjFGLBOjnJcCfMF
jmp BSVM2_TrOp_NatCallG0
align 8
OadjjFGLBOjnJcCfMF:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq LSxVeLBxssXrJGmNaC
	dq LSxVeLBxssXrJGmNaC
	dq 0
OOIdtbCsumiCCQochd:
	dq HWGLVIELMJMGERnNxV
	dq OadjjFGLBOjnJcCfMF
	dq LSxVeLBxssXrJGmNaC
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00004A */
FKBGDqPspORKBjODOU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+136], r12d
mov r12, [rsi+272]
movzxb r12d, [r12]
shl r12d, 8
mov r13, [rsi+272]
mov rax, r13
movzxb r13d, [r13+1]
or r12d, r13d
mov [rsi+184], r12d
mov rax, 0x008D01DF1853C6A5
mov [rsi+280], rax
mov [rsi+288], r13
mov rcx, rdi
mov rdx, BPtJogIijDkeHmFBNT
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12, [rsi+272]
mov rax, r12
movzxb r12d, [r12+2]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, LdMgDmKXQiRnOptbeD
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, JVaRDrKLpvxdBVqFkc
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, LWnfQQJThhHWHEfjOl
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BPtJogIijDkeHmFBNT:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LdMgDmKXQiRnOptbeD:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JVaRDrKLpvxdBVqFkc:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LWnfQQJThhHWHEfjOl:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq DRkuENIQwgVeFOIjmn
	dq DRkuENIQwgVeFOIjmn
	dq 0
LSxVeLBxssXrJGmNaC:
	dq FKBGDqPspORKBjODOU
	dq LWnfQQJThhHWHEfjOl
	dq DRkuENIQwgVeFOIjmn
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00006B */
LESnboKFqxGfPKEKUO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+272]
mov rax, r12
movzxb r12d, [r12+2]
mov [rsi+248], r12d
mov eax, 0x00000000
mov [rsi+256], eax
mov r12, [rsi+272]
lea r12, [r12+3]
mov [rsi+280], r12
mov [rsi+128], r12
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, PWAisXDGoWIFAECvuL
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DRkuENIQwgVeFOIjmn:
	dq LESnboKFqxGfPKEKUO
	dq 0
	dq PWAisXDGoWIFAECvuL
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000084 */
OstKinFnVaMiBXGuOo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+160]
mov [rsi+280], eax
mov r12, [rsi+272]
mov [rsi+288], r12
mov rax, [rsi+288]
movzxb edx, [rax+2]
mov [rsi+288], edx
mov ecx, [rsi+280]
mov rax, IpmpRwGXKokSPSffNI
cmp ecx, [rsi+288]
mov r10, FdgjoUPuAljIBITVmG
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
PWAisXDGoWIFAECvuL:
	dq OstKinFnVaMiBXGuOo
	dq 0
	dq FdgjoUPuAljIBITVmG
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00008F */
PkmkXxOBRLWbBeSGhG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C6B4
mov [rsi+280], rax
mov rcx, rdi
mov rdx, JidrSfHHXgPaOqRmEI
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12, [rsi+128]
movzxb r12d, [r12]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, DSbbPRFBaUfRIRtRbv
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, IsBNgKLNuOWpEtNLRT
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12, [rsi+128]
mov rax, r12
movzxb r12d, [r12+1]
sar r12d, 4
mov [rsi+296], r12
mov rcx, rdi
mov rdx, DXGkEjHbnUTKFidAIM
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, IrbpfDKBcSBkHIHoIU
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12, [rsi+128]
mov rax, r12
movzxb r12d, [r12+1]
and r12d, 15
mov [rsi+296], r12
mov rcx, rdi
mov rdx, FXeNSmMolXSuAPoSSU
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, BVhFtHGCgPSQGeOqcc
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, JDLqUgIoWjvfLvxcSG
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
JidrSfHHXgPaOqRmEI:
	dd 0x00040003
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DSbbPRFBaUfRIRtRbv:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IsBNgKLNuOWpEtNLRT:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DXGkEjHbnUTKFidAIM:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IrbpfDKBcSBkHIHoIU:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
FXeNSmMolXSuAPoSSU:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BVhFtHGCgPSQGeOqcc:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
JDLqUgIoWjvfLvxcSG:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq OhVDDgOtuWxJExqchf
	dq OhVDDgOtuWxJExqchf
	dq 0
IpmpRwGXKokSPSffNI:
	dq PkmkXxOBRLWbBeSGhG
	dq JDLqUgIoWjvfLvxcSG
	dq OhVDDgOtuWxJExqchf
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0000B7 */
FXkwqIMErJXpEFIehv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+128]
mov rax, r12
movzxb r12d, [r12+1]
sar r12d, 4
mov [rsi+280], r12
mov rcx, rdi
mov rdx, GUajsgAsAsraOmWOWh
call BSVM2_Op_STIXBLL /* OP:0187-0000 */
mov r12, [rsi+128]
mov rax, r12
movzxb r12d, [r12+1]
and r12d, 15
movzxb r12d, r12b
mov [rsi+280], r12
mov rcx, rdi
mov rdx, LrhdjHNhoLOBHuUuCS
call BSVM2_Op_STIXBLL /* OP:0187-0000 */
mov eax, 0x00000000
mov [rsi+168], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, QnmulbIiBrALDGGPid
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GUajsgAsAsraOmWOWh:
	dd 0x0014000B
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LrhdjHNhoLOBHuUuCS:
	dd 0x0014000C
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OhVDDgOtuWxJExqchf:
	dq FXkwqIMErJXpEFIehv
	dq 0
	dq QnmulbIiBrALDGGPid
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0000D5 */
QltDVBHWISrFQEiejv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+168]
mov [rsi+280], eax
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+160]
mov [rsi+288], edx
mov ecx, [rsi+280]
mov rax, DowHwMCIwqJuPVamwE
cmp ecx, [rsi+288]
mov r10, BoVQmAMaGpFcLvbhio
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
QnmulbIiBrALDGGPid:
	dq QltDVBHWISrFQEiejv
	dq 0
	dq BoVQmAMaGpFcLvbhio
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0000DE */
DVRLwjOnmAhLILRUTa:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+112]
mov r13, rdx
mov r12d, [rsi+168]
mov [rsi+288], r12
mov [rsi+280], r13
mov rcx, rdi
mov rdx, FggduPIFwVTLAmCnuc
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov r12, [rsi+128]
mov [rsi+288], r12
mov rax, [rsi+288]
movzxb edx, [rax]
mov [rsi+288], edx
mov ecx, [rsi+280]
mov rax, NTIJLOCcUejWJtKtUf
cmp ecx, [rsi+288]
mov r10, QAgiltFgXfIsEvAAud
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
FggduPIFwVTLAmCnuc:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DowHwMCIwqJuPVamwE:
	dq DVRLwjOnmAhLILRUTa
	dq 0
	dq QAgiltFgXfIsEvAAud
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0000ED */
PieMHGFCNVBVQHFCKN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+120]
mov r12, rdx
mov r13d, [rsi+168]
mov [rsi+280], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, QbcBtJOmiFjEAVgAvT
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov rcx, rdi
mov rdx, MgtCqNPjnItGJkvkhc
call BSVM2_Op_STIXBLL /* OP:0187-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+128]
mov r12, rdx
mov r13d, [rsi+168]
mov [rsi+280], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, CxHhVBQQsSRKMtDUIF
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov rcx, rdi
mov rdx, ABvkMJGUTIFnQLJPpg
call BSVM2_Op_STIXBLL /* OP:0187-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+136]
mov r12, rdx
mov r13d, [rsi+168]
mov [rsi+280], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, GLlfAVHdQAMoNLSHwS
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov rcx, rdi
mov rdx, LwMJviEBRQokDOkETn
call BSVM2_Op_STIXBLL /* OP:0187-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+144]
mov r12, rdx
mov r13d, [rsi+168]
mov [rsi+280], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, OVbtJJBJwgpfBbIgGr
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov rcx, rdi
mov rdx, KFnOkTIsJICrFTCijJ
call BSVM2_Op_STIXILL /* OP:0187-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+152]
mov r12, rdx
mov r13d, [rsi+168]
mov [rsi+280], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, LewWaBAcDfmAJimxBA
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov rcx, rdi
mov rdx, CGuTFTMbEumQQInqjh
call BSVM2_Op_STIXILL /* OP:0187-0000 */
mov rcx, rdi
mov rdx, MBjhndJQTlWVLxHxGu
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov rcx, rdi
mov rdx, AHHWOaLmKEguJRUVhh
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov r12, [rsi+280]
imul r12d, [rsi+288]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, CtPoEJPGMTVLIpfNjt
call BSVM2_Op_STIXBLL /* OP:0187-0000 */
inc dword [rsi+208]
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, BoVQmAMaGpFcLvbhio
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QbcBtJOmiFjEAVgAvT:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MgtCqNPjnItGJkvkhc:
	dd 0x00140003
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CxHhVBQQsSRKMtDUIF:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ABvkMJGUTIFnQLJPpg:
	dd 0x00140004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GLlfAVHdQAMoNLSHwS:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LwMJviEBRQokDOkETn:
	dd 0x00140005
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OVbtJJBJwgpfBbIgGr:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KFnOkTIsJICrFTCijJ:
	dd 0x00140007
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LewWaBAcDfmAJimxBA:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CGuTFTMbEumQQInqjh:
	dd 0x00140008
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MBjhndJQTlWVLxHxGu:
	dd 0x00140003
	dd 0x00000006
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AHHWOaLmKEguJRUVhh:
	dd 0x00140004
	dd 0x00010006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CtPoEJPGMTVLIpfNjt:
	dd 0x00140006
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NTIJLOCcUejWJtKtUf:
	dq PieMHGFCNVBVQHFCKN
	dq 0
	dq BoVQmAMaGpFcLvbhio
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000132 */
MEMQKlFjtQgWNtaBkf:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+168]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, QnmulbIiBrALDGGPid
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QAgiltFgXfIsEvAAud:
	dq MEMQKlFjtQgWNtaBkf
	dq 0
	dq QnmulbIiBrALDGGPid
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000137 */
GKsfQwGTpFPnFcJcTA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, JHtxUqPWBOVLAjfPkQ
call BSVM2_Op_LDIXILL /* OP:017E-0000 */
mov r12, [rsi+280]
add r12d, 7
sar r12d, 3
mov [rsi+224], r12d
mov [rsi+280], r12
mov rcx, rdi
mov rdx, PidRDrIVrGfqAXuIRl
call BSVM2_Op_LDIXILL /* OP:017E-0000 */
mov r12, [rsi+280]
add r12d, 7
sar r12d, 3
mov [rsi+232], r12d
mov r12d, [rsi+224]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, CNSjWsObXvWsCaIxnm
call BSVM2_Op_STIXILL /* OP:0187-0000 */
mov r12d, [rsi+232]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, HNplHmDpNKcdDAdVKw
call BSVM2_Op_STIXILL /* OP:0187-0000 */
mov r12d, [rsi+224]
add r12d, 1
mov r13d, [rsi+232]
add r13d, 2
imul r12d, r13d
mov [rsi+240], r12d
mov r12, [rsi+128]
movzxb r12d, [r12]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+176]
mov r13, rdx
mov r14d, [rsi+160]
mov [rsi+280], r12
mov [rsi+288], r13
mov [rsi+296], r14
mov rcx, rdi
mov rdx, AcwgoPIbbrmvALuMOP
call BSVM2_Op_RSTIXI /* OP:0044-0000 */
mov r12d, [rsi+168]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+184]
mov r13, rdx
mov r14d, [rsi+160]
mov [rsi+280], r12
mov [rsi+288], r13
mov [rsi+296], r14
mov rcx, rdi
mov rdx, BhpBnoFuIoGMPiQxkf
call BSVM2_Op_RSTIXI /* OP:0044-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+192]
mov r12, rdx
mov r13d, [rsi+160]
mov [rsi+280], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, NDhKGuHLbIqBMseSvh
call BSVM2_Op_LDIXA /* OP:004C-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, QgwkGoJRJEIBIpcELc
add rsp, 504
jmp BSVM2_TrOp_JNENULL
align 8
JHtxUqPWBOVLAjfPkQ:
	dd 0x00140007
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PidRDrIVrGfqAXuIRl:
	dd 0x00140008
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CNSjWsObXvWsCaIxnm:
	dd 0x00140009
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HNplHmDpNKcdDAdVKw:
	dd 0x0014000A
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AcwgoPIbbrmvALuMOP:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BhpBnoFuIoGMPiQxkf:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NDhKGuHLbIqBMseSvh:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QgwkGoJRJEIBIpcELc:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq IeuwjMQqiIpILjXUSo
	dq HnSgNOOtJmHuQiMlss
	dq 0
BoVQmAMaGpFcLvbhio:
	dq GKsfQwGTpFPnFcJcTA
	dq QgwkGoJRJEIBIpcELc
	dq HnSgNOOtJmHuQiMlss
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000182 */
FbNjamBhqgBsMLQCOn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, FIELriLDfomvJEhOqw
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdx, ICJrmuObXtBvIVGDJr
call BSVM2_Op_NEWARR_UB /* OP:0089-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+192]
mov r13, rdx
mov r14d, [rsi+160]
mov [rsi+288], r13
mov [rsi+296], r14
mov rcx, rdi
mov rdx, DBiJQDOWGmpxEjBhOu
call BSVM2_Op_RSTIXA /* OP:004D-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, HnSgNOOtJmHuQiMlss
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FIELriLDfomvJEhOqw:
	dd 0x001E0023
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000006
	dd 0x00000000
	dq 0
ICJrmuObXtBvIVGDJr:
	dd 0x00060000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DBiJQDOWGmpxEjBhOu:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IeuwjMQqiIpILjXUSo:
	dq FbNjamBhqgBsMLQCOn
	dq 0
	dq HnSgNOOtJmHuQiMlss
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00018F */
AdKVOuCmHTMEDfFsoL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+192]
mov r12, rdx
mov r13d, [rsi+160]
mov [rsi+280], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, JtuDKFPhsvAUINkfrK
call BSVM2_Op_LDIXA /* OP:004C-0000 */
mov rcx, rdi
mov rdx, MlsEKDLacQSoJoQkfK
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, MTebgDKLJmxuKwDTaD
call BSVM2_Op_STIXALL /* OP:0187-0000 */
xor r12, r12
mov [rsi+280], r12
mov rcx, rdi
mov rdx, AtfnrNERxJkpEiwJQh
call BSVM2_Op_STIXILL /* OP:0187-0000 */
mov r12, [rsi+128]
lea r12, [r12+2]
mov [rsi+280], r12
mov [rsi+128], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, HbVpDfLSKGLnNdmkcN
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JtuDKFPhsvAUINkfrK:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MlsEKDLacQSoJoQkfK:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MTebgDKLJmxuKwDTaD:
	dd 0x0014000E
	dd 0x00000004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AtfnrNERxJkpEiwJQh:
	dd 0x0014000D
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HnSgNOOtJmHuQiMlss:
	dq AdKVOuCmHTMEDfFsoL
	dq 0
	dq HbVpDfLSKGLnNdmkcN
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0001AB */
CJiIsUIiSqctLHVbxo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+160]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, PWAisXDGoWIFAECvuL
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HbVpDfLSKGLnNdmkcN:
	dq CJiIsUIiSqctLHVbxo
	dq 0
	dq PWAisXDGoWIFAECvuL
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0001B0 */
APhoKnPwBvgQBPcwTM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+128]
lea r12, [r12+3]
mov [rsi+128], r12
mov rax, 0x008D01DF1853C6C6
mov [rsi+280], rax
xor rax, rax
mov [rsi+288], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, AxKURSKEgvWAFDPulF
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AxKURSKEgvWAFDPulF:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq PXDJDHALiKMHDPGtvt
	dq PXDJDHALiKMHDPGtvt
	dq 0
FdgjoUPuAljIBITVmG:
	dq APhoKnPwBvgQBPcwTM
	dq AxKURSKEgvWAFDPulF
	dq PXDJDHALiKMHDPGtvt
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0001BE */
HDvfBqKjTPIMIbsfPB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, QCxQXLFBSeugILIjBh
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
PXDJDHALiKMHDPGtvt:
	dq HDvfBqKjTPIMIbsfPB
	dq 0
	dq QCxQXLFBSeugILIjBh
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0001C3 */
LtqHHEKgiWomFjSiGP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+160]
mov [rsi+280], eax
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+160]
mov [rsi+288], edx
mov ecx, [rsi+280]
mov rax, PJLshqCNUaGgOurRGa
cmp ecx, [rsi+288]
mov r10, MSPuqqHvOVVaAIobTa
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
QCxQXLFBSeugILIjBh:
	dq LtqHHEKgiWomFjSiGP
	dq 0
	dq MSPuqqHvOVVaAIobTa
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0001CC */
KdTXIiKUGGgRDpiugP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+184]
mov r12, rdx
mov r13d, [rsi+160]
mov [rsi+280], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, GshHWvAUbWuiKsVSBs
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov r12, [rsi+280]
mov [rsi+168], r12d
mov rax, 0x008D01DF1853C6E2
mov [rsi+280], rax
mov rcx, rdi
mov rdx, KocHPbQiTRKvNiocrA
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+120]
mov r12, rdx
mov r14d, [rsi+168]
mov [rsi+296], r12
mov [rsi+304], r14
mov rcx, rdi
mov rdx, PTmGvNPqPfxsMLXduL
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov rcx, rdi
mov rdx, EUCHwECVoDqpGbVfBT
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, HXMKSfCcRVDdPhDvlw
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+128]
mov r12, rdx
mov r14d, [rsi+168]
mov [rsi+296], r12
mov [rsi+304], r14
mov rcx, rdi
mov rdx, ClvfMhJvMaWMAQvgnM
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov rcx, rdi
mov rdx, EFTSDlHKuCelNLxRsX
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, AQWXTwBGHwxvCDAumE
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+164]
mov r12d, edx
mov [rsi+296], r12
mov rcx, rdi
mov rdx, QMtXkGMuBXMCAdjdHN
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, OMwnMRBvjkceJGbFbH
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+168]
mov r12d, edx
mov [rsi+296], r12
mov rcx, rdi
mov rdx, EGtoGRCWWKFjQVaVFr
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, NidpOJQfInSbOCGsiC
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, AkgAFDPHnlpPGdIUmG
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GshHWvAUbWuiKsVSBs:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KocHPbQiTRKvNiocrA:
	dd 0x00040004
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PTmGvNPqPfxsMLXduL:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EUCHwECVoDqpGbVfBT:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HXMKSfCcRVDdPhDvlw:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ClvfMhJvMaWMAQvgnM:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EFTSDlHKuCelNLxRsX:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AQWXTwBGHwxvCDAumE:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
QMtXkGMuBXMCAdjdHN:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OMwnMRBvjkceJGbFbH:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
EGtoGRCWWKFjQVaVFr:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NidpOJQfInSbOCGsiC:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
AkgAFDPHnlpPGdIUmG:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq MJrCuoOMTpKWMvVOmo
	dq MJrCuoOMTpKWMvVOmo
	dq 0
PJLshqCNUaGgOurRGa:
	dq KdTXIiKUGGgRDpiugP
	dq AkgAFDPHnlpPGdIUmG
	dq MJrCuoOMTpKWMvVOmo
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000201 */
JMUnnIHMdOFsONsXxi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+120]
mov r14, rdx
mov r13d, [rsi+168]
mov [rsi+288], r13
mov [rsi+280], r14
mov rcx, rdi
mov rdx, NpAKdDPHDfqCCjOnNn
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov r14, [rsi+280]
imul r14d, 65536
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+164]
mov r13d, edx
mov [rsi+288], r13
mov [rsi+280], r14
mov rcx, rdi
mov rdx, PsOcAEDEhNPSOKQpBi
call BSVM2_Op_DIVI /* OP:0170-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+224]
mov r13, rdx
mov r12d, [rsi+160]
mov [rsi+296], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, KXuWIPBsNQRIBGoKlq
call BSVM2_Op_RSTIXI /* OP:0044-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+128]
mov r14, rdx
mov r13d, [rsi+168]
mov [rsi+288], r13
mov [rsi+280], r14
mov rcx, rdi
mov rdx, AMCCobOOMQhVPGpdwp
call BSVM2_Op_LDIXUB /* OP:0049-0000 */
mov r14, [rsi+280]
imul r14d, 65536
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+168]
mov r13d, edx
mov [rsi+288], r13
mov [rsi+280], r14
mov rcx, rdi
mov rdx, FGBIMqBuwTLMAPSnnD
call BSVM2_Op_DIVI /* OP:0170-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+232]
mov r13, rdx
mov r12d, [rsi+160]
mov [rsi+296], r12
mov [rsi+288], r13
mov rcx, rdi
mov rdx, AjErsCQAAFtJGusTJG
call BSVM2_Op_RSTIXI /* OP:0044-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+144]
mov r14, rdx
mov r13d, [rsi+168]
mov [rsi+288], r13
mov [rsi+280], r14
mov rcx, rdi
mov rdx, MNSjXaMGtWrVKmcBhb
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov r14, [rsi+280]
add r14d, 7
sar r14d, 3
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+208]
mov r13, rdx
mov r12d, [rsi+160]
mov [rsi+296], r12
mov [rsi+288], r13
mov [rsi+280], r14
mov rcx, rdi
mov rdx, FxpXtAEpPBVcOewMjO
call BSVM2_Op_RSTIXI /* OP:0044-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+152]
mov r14, rdx
mov r13d, [rsi+168]
mov [rsi+288], r13
mov [rsi+280], r14
mov rcx, rdi
mov rdx, DxcVOGJRkcxsDFCljw
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov r14, [rsi+280]
add r14d, 7
sar r14d, 3
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+216]
mov r13, rdx
mov r12d, [rsi+160]
mov [rsi+296], r12
mov [rsi+288], r13
mov [rsi+280], r14
mov rcx, rdi
mov rdx, QPWwClNEvBvDNQQcBi
call BSVM2_Op_RSTIXI /* OP:0044-0000 */
mov rax, 0x008D01DF1853C716
mov [rsi+280], rax
mov rcx, rdi
mov rdx, MLfNnuMJLQNIKEcWAF
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+160]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, CqjkpGBxHAiXOEQSMP
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, BFmcoDGIUwvKQpRXPK
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+168]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, GKWJenFenELTNnRNuC
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, EVMfwoQFaFxOHWbnTl
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+224]
mov r12, rdx
mov r14d, [rsi+160]
mov [rsi+296], r12
mov [rsi+304], r14
mov rcx, rdi
mov rdx, IqIHQALFvOMhDONQDq
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov rcx, rdi
mov rdx, GdKcrqLKtxpKEhWjat
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, BvVxLuKNiWSVKPmFRH
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+232]
mov r12, rdx
mov r14d, [rsi+160]
mov [rsi+296], r12
mov [rsi+304], r14
mov rcx, rdi
mov rdx, EEmOdHKemwgQIpLfDj
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov rcx, rdi
mov rdx, DLmGGCMOgAvqAaDqhh
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, ItfsEcNxFSTeMuRuiG
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+208]
mov r12, rdx
mov r14d, [rsi+160]
mov [rsi+296], r12
mov [rsi+304], r14
mov rcx, rdi
mov rdx, BdJWATOJrdcPHeiUNC
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov rcx, rdi
mov rdx, EckTVQLbXEeaMpvkjb
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, EjOUaUFsPoHJIPFvXo
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+216]
mov r12, rdx
mov r14d, [rsi+160]
mov [rsi+296], r12
mov [rsi+304], r14
mov rcx, rdi
mov rdx, CHJGFrABHIxeHTmAKC
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov rcx, rdi
mov rdx, DnIJEVPMXHDsQUceJc
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, OUCPbxHJDPhULpOgEd
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, LoqSCNPHAoveEvoTbg
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NpAKdDPHDfqCCjOnNn:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PsOcAEDEhNPSOKQpBi:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KXuWIPBsNQRIBGoKlq:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AMCCobOOMQhVPGpdwp:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FGBIMqBuwTLMAPSnnD:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AjErsCQAAFtJGusTJG:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MNSjXaMGtWrVKmcBhb:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FxpXtAEpPBVcOewMjO:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DxcVOGJRkcxsDFCljw:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QPWwClNEvBvDNQQcBi:
	dd 0x00000000
	dd 0x00000000
	dd 0x00020001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MLfNnuMJLQNIKEcWAF:
	dd 0x00040006
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CqjkpGBxHAiXOEQSMP:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BFmcoDGIUwvKQpRXPK:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GKWJenFenELTNnRNuC:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EVMfwoQFaFxOHWbnTl:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
IqIHQALFvOMhDONQDq:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GdKcrqLKtxpKEhWjat:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BvVxLuKNiWSVKPmFRH:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
EEmOdHKemwgQIpLfDj:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DLmGGCMOgAvqAaDqhh:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ItfsEcNxFSTeMuRuiG:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
BdJWATOJrdcPHeiUNC:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EckTVQLbXEeaMpvkjb:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EjOUaUFsPoHJIPFvXo:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000004
	dd 0x00000000
	dq 0
CHJGFrABHIxeHTmAKC:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DnIJEVPMXHDsQUceJc:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OUCPbxHJDPhULpOgEd:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000005
	dd 0x00000000
	dq 0
LoqSCNPHAoveEvoTbg:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq NhGkaUAVsSstEnktkX
	dq NhGkaUAVsSstEnktkX
	dq 0
MJrCuoOMTpKWMvVOmo:
	dq JMUnnIHMdOFsONsXxi
	dq LoqSCNPHAoveEvoTbg
	dq NhGkaUAVsSstEnktkX
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00028C */
IEukIoGxrDceCixOGK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+160]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, QCxQXLFBSeugILIjBh
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NhGkaUAVsSstEnktkX:
	dq IEukIoGxrDceCixOGK
	dq 0
	dq QCxQXLFBSeugILIjBh
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000291 */
BBHJgVGXtaBaIWasxW:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+160]
mov r12d, edx
mov [rsi+280], r12
mov eax, r12d
mov ecx, 3
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, NoBwdmLDESEwJwKmcN
cmp ecx, 0
mov r10, DjurcwCBIlrFOtigOg
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
MSPuqqHvOVVaAIobTa:
	dq BBHJgVGXtaBaIWasxW
	dq 0
	dq DjurcwCBIlrFOtigOg
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000299 */
AIvQiPOAIrrLKTCBGO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000001
mov [rsi+160], eax
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+224]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, PDhaoqITPqEjPehLBx
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov eax, [rsi+280]
mov ecx, 65536
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, GsnKcqGXaRUQKJTwXS
cmp ecx, 0
mov r10, GQANooOeDLqnCLPfXJ
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
PDhaoqITPqEjPehLBx:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NoBwdmLDESEwJwKmcN:
	dq AIvQiPOAIrrLKTCBGO
	dq 0
	dq GQANooOeDLqnCLPfXJ
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002A9 */
NAoHvOCWsHXONxMTqJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GQANooOeDLqnCLPfXJ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GsnKcqGXaRUQKJTwXS:
	dq NAoHvOCWsHXONxMTqJ
	dq 0
	dq GQANooOeDLqnCLPfXJ
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002AE */
NkBndfDJevawKLAjXG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+232]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, LKQiEIGIAvSMKEAVeR
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov eax, [rsi+280]
mov ecx, 65536
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, DNvSKFBeIxRMCStUkB
cmp ecx, 0
mov r10, EnBbcdPrGHbiMNBusu
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
LKQiEIGIAvSMKEAVeR:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GQANooOeDLqnCLPfXJ:
	dq NkBndfDJevawKLAjXG
	dq 0
	dq EnBbcdPrGHbiMNBusu
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002BA */
NKbOTWMMsAHdGJOLia:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, EnBbcdPrGHbiMNBusu
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DNvSKFBeIxRMCStUkB:
	dq NKbOTWMMsAHdGJOLia
	dq 0
	dq EnBbcdPrGHbiMNBusu
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002BF */
OATVOWFHipCBALFTxu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+224]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, QhkbivHoREAAGpXRsn
call BSVM2_Op_LDIXIC /* OP:0050-0000 */
mov eax, [rsi+280]
mov ecx, 32768
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, EWAMrKMjAmgwBeOggv
cmp ecx, 0
mov r10, NPCGxTIFSBFdQONExj
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
QhkbivHoREAAGpXRsn:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
EnBbcdPrGHbiMNBusu:
	dq OATVOWFHipCBALFTxu
	dq 0
	dq NPCGxTIFSBFdQONExj
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002CB */
GGTIjgIGlWIAPnoGHN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NPCGxTIFSBFdQONExj
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
EWAMrKMjAmgwBeOggv:
	dq GGTIjgIGlWIAPnoGHN
	dq 0
	dq NPCGxTIFSBFdQONExj
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002D0 */
FeSevSPtFTdwCTEnTb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+232]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, FUeRiLJVOTGGPJERja
call BSVM2_Op_LDIXIC /* OP:0050-0000 */
mov eax, [rsi+280]
mov ecx, 32768
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, IeKiJcKbWSAPCNJoQX
cmp ecx, 0
mov r10, GbucDWJvlOTaCcihwT
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
FUeRiLJVOTGGPJERja:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
NPCGxTIFSBFdQONExj:
	dq FeSevSPtFTdwCTEnTb
	dq 0
	dq GbucDWJvlOTaCcihwT
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002DC */
DpdOcOITbRIlNDDOLE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GbucDWJvlOTaCcihwT
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IeKiJcKbWSAPCNJoQX:
	dq DpdOcOITbRIlNDDOLE
	dq 0
	dq GbucDWJvlOTaCcihwT
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002E1 */
EgtDrvFQppuvHHFJfU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+224]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, EFOvBnGlQXJNEhiUdF
call BSVM2_Op_LDIXIC /* OP:0050-0000 */
mov eax, [rsi+280]
mov ecx, 32768
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, DFQJoTOtHkdKKLePwR
cmp ecx, 0
mov r10, CwktLxQJFBxbEavcFr
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
EFOvBnGlQXJNEhiUdF:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
GbucDWJvlOTaCcihwT:
	dq EgtDrvFQppuvHHFJfU
	dq 0
	dq CwktLxQJFBxbEavcFr
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002ED */
DRBWfABTwwMgEOiGga:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CwktLxQJFBxbEavcFr
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DFQJoTOtHkdKKLePwR:
	dq DRBWfABTwwMgEOiGga
	dq 0
	dq CwktLxQJFBxbEavcFr
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002F2 */
QSulstPvvEeKIlTEoU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+232]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, ERslVnEWbTQBEENRfr
call BSVM2_Op_LDIXIC /* OP:0050-0000 */
mov eax, [rsi+280]
mov ecx, 32768
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, OIrvwmNvENfoHafokR
cmp ecx, 0
mov r10, CQfPeUKTacWTNlQHJl
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
ERslVnEWbTQBEENRfr:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
CwktLxQJFBxbEavcFr:
	dq QSulstPvvEeKIlTEoU
	dq 0
	dq CQfPeUKTacWTNlQHJl
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0002FE */
LrQlUUEXUvwCGcTTaV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CQfPeUKTacWTNlQHJl
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OIrvwmNvENfoHafokR:
	dq LrQlUUEXUvwCGcTTaV
	dq 0
	dq CQfPeUKTacWTNlQHJl
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000303 */
EfBsvNKOEavQLHqHlr:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+160]
movzxb r12d, r12b
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+240], edx
mov eax, 0x00000001
mov [rsi+160], eax
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+224]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, GfOXqgABXCQpOUACSe
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov eax, [rsi+280]
mov ecx, 65536
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, LokldfJPDpnlCxNndf
cmp ecx, 0
mov r10, KIteqkNAkPxCIhMXBb
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
GfOXqgABXCQpOUACSe:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CQfPeUKTacWTNlQHJl:
	dq EfBsvNKOEavQLHqHlr
	dq 0
	dq KIteqkNAkPxCIhMXBb
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000319 */
HwUlfBHGEAlSOCsAkH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KIteqkNAkPxCIhMXBb
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LokldfJPDpnlCxNndf:
	dq HwUlfBHGEAlSOCsAkH
	dq 0
	dq KIteqkNAkPxCIhMXBb
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00031E */
FdCkLqCjitAnNFbltj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+232]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, OmJRAdDsAUghNcsoBd
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov eax, [rsi+280]
mov ecx, 65536
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, OUaCHBEMctKkGopudl
cmp ecx, 0
mov r10, JtviPOLkmgHiFRIIfU
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
OmJRAdDsAUghNcsoBd:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KIteqkNAkPxCIhMXBb:
	dq FdCkLqCjitAnNFbltj
	dq 0
	dq JtviPOLkmgHiFRIIfU
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00032A */
CKfwVaMwwGtgEoEhsm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JtviPOLkmgHiFRIIfU
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OUaCHBEMctKkGopudl:
	dq CKfwVaMwwGtgEoEhsm
	dq 0
	dq JtviPOLkmgHiFRIIfU
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00032F */
AccIsuJDCtqdBVGwBa:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+224]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, CdtboTHMkbUIBtiMKk
call BSVM2_Op_LDIXIC /* OP:0050-0000 */
mov eax, [rsi+280]
mov ecx, 65536
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, LTHtjBAfoQqNHRkDjc
cmp ecx, 0
mov r10, OMxAFMIpNHmXPKvDVV
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
CdtboTHMkbUIBtiMKk:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
JtviPOLkmgHiFRIIfU:
	dq AccIsuJDCtqdBVGwBa
	dq 0
	dq OMxAFMIpNHmXPKvDVV
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00033B */
AnbcewODoNunQTAFrO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OMxAFMIpNHmXPKvDVV
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LTHtjBAfoQqNHRkDjc:
	dq AnbcewODoNunQTAFrO
	dq 0
	dq OMxAFMIpNHmXPKvDVV
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000340 */
FDHKUWNgbtxrKIpEhv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+232]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, DfgTQqIGCosLFElkpK
call BSVM2_Op_LDIXIC /* OP:0050-0000 */
mov eax, [rsi+280]
mov ecx, 65536
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, IsmWlVHrgeKFDKGeMn
cmp ecx, 0
mov r10, BxJDiaHpWgJqPPMSmO
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
DfgTQqIGCosLFElkpK:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
OMxAFMIpNHmXPKvDVV:
	dq FDHKUWNgbtxrKIpEhv
	dq 0
	dq BxJDiaHpWgJqPPMSmO
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00034C */
ADEhuPCwdNiiHJEIXe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BxJDiaHpWgJqPPMSmO
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IsmWlVHrgeKFDKGeMn:
	dq ADEhuPCwdNiiHJEIXe
	dq 0
	dq BxJDiaHpWgJqPPMSmO
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000351 */
GWdpmkBTARSNEVsBBE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+224]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, MBofqgGMoncUPclXLO
call BSVM2_Op_LDIXIC /* OP:0050-0000 */
mov eax, [rsi+280]
mov ecx, 65536
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, GdLeocGnDLmnKJOfom
cmp ecx, 0
mov r10, NSxRxqPjpHRrGIfocP
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
MBofqgGMoncUPclXLO:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
BxJDiaHpWgJqPPMSmO:
	dq GWdpmkBTARSNEVsBBE
	dq 0
	dq NSxRxqPjpHRrGIfocP
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00035D */
AVTuOsCKwMdMMgCGfO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NSxRxqPjpHRrGIfocP
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GdLeocGnDLmnKJOfom:
	dq AVTuOsCKwMdMMgCGfO
	dq 0
	dq NSxRxqPjpHRrGIfocP
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000362 */
GhtDrbAbeBuOHjaSpu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+232]
mov r12, rdx
mov [rsi+280], r12
mov rcx, rdi
mov rdx, IMSMXTITRuvMDRtVlN
call BSVM2_Op_LDIXIC /* OP:0050-0000 */
mov eax, [rsi+280]
mov ecx, 65536
sub eax, ecx
sub ecx, [rsi+280]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, IHAiAILjBFKnPatKWD
cmp ecx, 0
mov r10, FsXXwJDjADlgBmjUqH
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
IMSMXTITRuvMDRtVlN:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
NSxRxqPjpHRrGIfocP:
	dq GhtDrbAbeBuOHjaSpu
	dq 0
	dq FsXXwJDjADlgBmjUqH
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00036E */
JtMqgbKBxJOMMxmGbt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FsXXwJDjADlgBmjUqH
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IHAiAILjBFKnPatKWD:
	dq JtMqgbKBxJOMMxmGbt
	dq 0
	dq FsXXwJDjADlgBmjUqH
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000373 */
PNIaWiGuUxCCJtUwfa:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+160]
movzxb r12d, r12b
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+280], r12
mov edx, r12d
mov [rax+241], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JvKHkoIdciqTCsJsIk
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FsXXwJDjADlgBmjUqH:
	dq PNIaWiGuUxCCJtUwfa
	dq 0
	dq JvKHkoIdciqTCsJsIk
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00037C */
MEKvmFMlrQPHHIOmhR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
xor r12, r12
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+240], edx
xor r12, r12
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+280], r12
mov edx, r12d
mov [rax+241], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JvKHkoIdciqTCsJsIk
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DjurcwCBIlrFOtigOg:
	dq MEKvmFMlrQPHHIOmhR
	dq 0
	dq JvKHkoIdciqTCsJsIk
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000385 */
ABBcIkLJIhCsJERXNh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+96]
mov r13d, edx
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+164]
mov r12d, edx
shl r12d, 3
add r13d, r12d
dec dword r13d
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+164]
mov r12d, edx
shl r12d, 3
mov [rsi+288], r12
mov [rsi+280], r13
mov rcx, rdi
mov rdx, FmfFdqOJvROeNSouaL
call BSVM2_Op_DIVI /* OP:0170-0000 */
mov r13, [rsi+280]
mov [rsi+224], r13d
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+100]
mov r13d, edx
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+168]
mov r12d, edx
shl r12d, 3
add r13d, r12d
dec dword r13d
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+168]
mov r12d, edx
shl r12d, 3
mov [rsi+288], r12
mov [rsi+280], r13
mov rcx, rdi
mov rdx, QhbSbwGQPkWVBMwrWT
call BSVM2_Op_DIVI /* OP:0170-0000 */
mov r13, [rsi+280]
mov [rsi+232], r13d
mov eax, [rsi+224]
imul eax, [rsi+232]
mov [rsi+240], eax
mov rax, [rsi+264]
mov [rsi+280], rax
mov rax, [rsi+128]
mov [rsi+288], rax
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, MdUACbPfVFFlBRCkvr
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FmfFdqOJvROeNSouaL:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QhbSbwGQPkWVBMwrWT:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MdUACbPfVFFlBRCkvr:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776C280
	dd 0x000001DF
	dq PflxqaNosEjkBSmuvb
	dq PflxqaNosEjkBSmuvb
	dq 0
JvKHkoIdciqTCsJsIk:
	dq ABBcIkLJIhCsJERXNh
	dq MdUACbPfVFFlBRCkvr
	dq PflxqaNosEjkBSmuvb
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003B6 */
LPDsmJPAfbEgNiQnQa:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GaeLMGIdAvxoDUIjal
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
PflxqaNosEjkBSmuvb:
	dq LPDsmJPAfbEgNiQnQa
	dq 0
	dq GaeLMGIdAvxoDUIjal
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003BC */
PnxridKdEnNbLmbAqB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+160]
mov ecx, 256
sub eax, ecx
sub ecx, [rsi+160]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, CqBEtCGdQfNaLpTmbJ
cmp ecx, 0
mov r10, PKAGfeLcoGLwAdBgfJ
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
GaeLMGIdAvxoDUIjal:
	dq PnxridKdEnNbLmbAqB
	dq 0
	dq PKAGfeLcoGLwAdBgfJ
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003C3 */
NlqVtXLgddVjNunhlr:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
xor r12, r12
mov [rsi+280], r12
mov rcx, rdi
mov rdx, PxFxueGTnLapNCmOEK
call BSVM2_Op_STIXILL /* OP:0187-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, EBBAnbMgsQNuOGgaDL
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
PxFxueGTnLapNCmOEK:
	dd 0x00140000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CqBEtCGdQfNaLpTmbJ:
	dq NlqVtXLgddVjNunhlr
	dq 0
	dq EBBAnbMgsQNuOGgaDL
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003C9 */
ETqGSxEgJFmoOqHukL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+160]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, GaeLMGIdAvxoDUIjal
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
EBBAnbMgsQNuOGgaDL:
	dq ETqGSxEgJFmoOqHukL
	dq 0
	dq GaeLMGIdAvxoDUIjal
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003CE */
QKSkSHDTbUTnLtaCjV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C746
mov [rsi+280], rax
xor rax, rax
mov [rsi+288], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LDqvVUOtXmjMKPVfAA
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
LDqvVUOtXmjMKPVfAA:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq GIGuFlHAXRDAJUvltk
	dq GIGuFlHAXRDAJUvltk
	dq 0
PKAGfeLcoGLwAdBgfJ:
	dq QKSkSHDTbUTnLtaCjV
	dq LDqvVUOtXmjMKPVfAA
	dq GIGuFlHAXRDAJUvltk
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003D4 */
MwOIQrLKlxRsJMeCNu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+160]
mov r12d, edx
mov [rsi+280], r12
mov eax, r12d
mov ecx, 1
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, EAcTOcMdBHHLOhwGkK
cmp ecx, 0
mov r10, KFnWwnLbRQoJKuKjbP
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
GIGuFlHAXRDAJUvltk:
	dq MwOIQrLKlxRsJMeCNu
	dq 0
	dq KFnWwnLbRQoJKuKjbP
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003DC */
MmanEkMsKRXkAwuPma:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C762
mov [rsi+280], rax
xor rax, rax
mov [rsi+288], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, MeFlBsGFTNSFEVMPxJ
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MeFlBsGFTNSFEVMPxJ:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq DvDhsmLjHjOGFRbSWr
	dq DvDhsmLjHjOGFRbSWr
	dq 0
EAcTOcMdBHHLOhwGkK:
	dq MmanEkMsKRXkAwuPma
	dq MeFlBsGFTNSFEVMPxJ
	dq DvDhsmLjHjOGFRbSWr
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003E2 */
ObfsGOQpFpKqEuFDKE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+256], eax
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FmlstTMFarXdLdTXqP
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DvDhsmLjHjOGFRbSWr:
	dq ObfsGOQpFpKqEuFDKE
	dq 0
	dq FmlstTMFarXdLdTXqP
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003EC */
JuorQwLhOWGeOJvwkE:
mov rdx, AAQuPbPXLvNrKUbVnQ
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
AAQuPbPXLvNrKUbVnQ:
	dd 0x001D0014
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq JoIDotPaKrgxDSqglU
	dq KjGocsPHaslPKkrBpg
	dq 0
FmlstTMFarXdLdTXqP:
	dq JuorQwLhOWGeOJvwkE
	dq AAQuPbPXLvNrKUbVnQ
	dq KjGocsPHaslPKkrBpg
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003F2 */
JLBqDQFwkETiKaiwlo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+168], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, EntlOfLqeVnCJnuvaB
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JoIDotPaKrgxDSqglU:
	dq JLBqDQFwkETiKaiwlo
	dq 0
	dq EntlOfLqeVnCJnuvaB
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003F7 */
EehjVUJsMKbPDsDkPK:
mov rdx, DdqUjtMJFeIrABbfoI
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
DdqUjtMJFeIrABbfoI:
	dd 0x001C0015
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq AabmveGFchRSCWXpLP
	dq LdlMWLAHvAcLFbhIwN
	dq 0
EntlOfLqeVnCJnuvaB:
	dq EehjVUJsMKbPDsDkPK
	dq DdqUjtMJFeIrABbfoI
	dq LdlMWLAHvAcLFbhIwN
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0003FD */
GEcLqQPUweJDAckdDp:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+0]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, CisvdGCeFtbVDoCBRU
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+88]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, CTxBNSHvijBREIlmrX
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+296]
shl r12d, 1
mov [rsi+296], r12
mov eax, [rsi+296]
add eax, 0
mov [rsi+296], eax
mov r12, [rsi+96]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, LrJcRkGjQDOfLjBHXB
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+304]
shl r12d, 1
mov [rsi+304], r12
inc dword [rsi+304]
mov r12, [rsi+40]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, JNueWeAvgKIWHrMOvE
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12d, [rsi+160]
imul r12d, [rsi+224]
mov [rsi+320], r12
mov eax, [rsi+320]
add eax, [rsi+168]
mov [rsi+320], eax
mov eax, [rsi+240]
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, FOfmlLCxjhANDnsflA
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CisvdGCeFtbVDoCBRU:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CTxBNSHvijBREIlmrX:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LrJcRkGjQDOfLjBHXB:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JNueWeAvgKIWHrMOvE:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FOfmlLCxjhANDnsflA:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CB20
	dd 0x000001DF
	dq DduEagBTRLrjNVUElL
	dq DduEagBTRLrjNVUElL
	dq 0
AabmveGFchRSCWXpLP:
	dq GEcLqQPUweJDAckdDp
	dq FOfmlLCxjhANDnsflA
	dq DduEagBTRLrjNVUElL
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000420 */
KjOFUUDKIObnGTavWX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+256], r12d
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, ElPpRKPclwNVLejiox
cmp ecx, 0
mov r10, HpIdikDnBvigLkUsmT
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
DduEagBTRLrjNVUElL:
	dq KjOFUUDKIObnGTavWX
	dq 0
	dq HpIdikDnBvigLkUsmT
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000429 */
IVKqsSGMnihmQnOcWb:
mov rdx, LdlMWLAHvAcLFbhIwN
mov rax, [rdx+0]
jmp rax
align 8
ElPpRKPclwNVLejiox:
	dq IVKqsSGMnihmQnOcWb
	dq 0
	dq LdlMWLAHvAcLFbhIwN
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00042C */
BGNnvIAwVOkpFuEoJS:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, NeFixrPKaJiPPDEBhE
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, LINaMxQofonKOercEs
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000080
mov [rsi+296], eax
mov eax, [rsi+256]
mov [rsi+304], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, HKkTnbKeDxhbERFtSG
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NeFixrPKaJiPPDEBhE:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LINaMxQofonKOercEs:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HKkTnbKeDxhbERFtSG:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BFA0
	dd 0x000001DF
	dq JavsIVEkjpEhCwJbtX
	dq JavsIVEkjpEhCwJbtX
	dq 0
HpIdikDnBvigLkUsmT:
	dq BGNnvIAwVOkpFuEoJS
	dq HKkTnbKeDxhbERFtSG
	dq JavsIVEkjpEhCwJbtX
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00043B */
DGWRtVNugkjaMhXCrq:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, IIVqonAnKPMHBQWOFI
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+112]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, KbBOPUDUCOFAPBQUPl
call BSVM2_Op_LDIXAC /* OP:015C-0000 */
mov r12, [rsi+56]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, IPCHamHTvQLdMpNbEF
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r12, [rsi+64]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, AGahsKKqbQFHQWrAXA
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov rcx, rdi
mov rdx, EMrmMJGuUiftAskbKs
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdx, BUCSKTClVNQhPKVVGm
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, FNfBqFHMwMQdNDRLiK
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
IIVqonAnKPMHBQWOFI:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KbBOPUDUCOFAPBQUPl:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IPCHamHTvQLdMpNbEF:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AGahsKKqbQFHQWrAXA:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EMrmMJGuUiftAskbKs:
	dd 0x00150028
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
BUCSKTClVNQhPKVVGm:
	dd 0x00140029
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
FNfBqFHMwMQdNDRLiK:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CCD0
	dd 0x000001DF
	dq EenbBADHhgbKHLLSIO
	dq EenbBADHhgbKHLLSIO
	dq 0
JavsIVEkjpEhCwJbtX:
	dq DGWRtVNugkjaMhXCrq
	dq FNfBqFHMwMQdNDRLiK
	dq EenbBADHhgbKHLLSIO
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000457 */
CLLNQpBLPuDxIJHbdd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+168]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, EntlOfLqeVnCJnuvaB
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
EenbBADHhgbKHLLSIO:
	dq CLLNQpBLPuDxIJHbdd
	dq 0
	dq EntlOfLqeVnCJnuvaB
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00045C */
EWULrnPxlAUcEffvcd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, GxqLIXGJcXwqLiavxS
cmp ecx, 0
mov r10, GvhqXAEsnwWWKFQkCu
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
LdlMWLAHvAcLFbhIwN:
	dq EWULrnPxlAUcEffvcd
	dq 0
	dq GvhqXAEsnwWWKFQkCu
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000463 */
BbbHbTAmNBsnAIhCaD:
mov rdx, KjGocsPHaslPKkrBpg
mov rax, [rdx+0]
jmp rax
align 8
GxqLIXGJcXwqLiavxS:
	dq BbbHbTAmNBsnAIhCaD
	dq 0
	dq KjGocsPHaslPKkrBpg
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000466 */
HlmMqQKajjoPMKrXBW:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+160]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, FmlstTMFarXdLdTXqP
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GvhqXAEsnwWWKFQkCu:
	dq HlmMqQKajjoPMKrXBW
	dq 0
	dq FmlstTMFarXdLdTXqP
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00046B */
HNOGoCPikmKoGIPnjl:
mov rdx, PrcrdHPnIUSlHgkXwA
mov rax, [rdx+0]
jmp rax
align 8
KjGocsPHaslPKkrBpg:
	dq HNOGoCPikmKoGIPnjl
	dq 0
	dq PrcrdHPnIUSlHgkXwA
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00046E */
IVDJbEJXsNWoLgksGV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+240]
mov [rsi+280], edx
mov ecx, [rsi+280]
mov rax, OpKRovKWcXjWPRtIpG
cmp ecx, 0
mov r10, AFRCeoDqsNagHItvPj
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
KFnWwnLbRQoJKuKjbP:
	dq IVDJbEJXsNWoLgksGV
	dq 0
	dq AFRCeoDqsNagHItvPj
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000474 */
PneKmMAmwlVHHTXlxu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C781
mov [rsi+280], rax
xor rax, rax
mov [rsi+288], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FeIeHxDFHFIiJtbnPW
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FeIeHxDFHFIiJtbnPW:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq GGcodnBjGBlFMQQJOR
	dq GGcodnBjGBlFMQQJOR
	dq 0
OpKRovKWcXjWPRtIpG:
	dq PneKmMAmwlVHHTXlxu
	dq FeIeHxDFHFIiJtbnPW
	dq GGcodnBjGBlFMQQJOR
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00047A */
EQEkwSNxLMquJxHWfb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+256], eax
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, ELKXHXMdqRIfHiPVoc
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GGcodnBjGBlFMQQJOR:
	dq EQEkwSNxLMquJxHWfb
	dq 0
	dq ELKXHXMdqRIfHiPVoc
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000484 */
HJjetxHHumQiPNleTl:
mov rdx, PAibtENSVfmHLOgJOD
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
PAibtENSVfmHLOgJOD:
	dd 0x001D0014
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq COVaVtOmGATrOLLJlW
	dq FEMgEGFMKBbTIjrMIB
	dq 0
ELKXHXMdqRIfHiPVoc:
	dq HJjetxHHumQiPNleTl
	dq PAibtENSVfmHLOgJOD
	dq FEMgEGFMKBbTIjrMIB
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00048A */
ENMuOKOLGPltGUTkko:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+168], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PKKgQMLXBKowESLCkX
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
COVaVtOmGATrOLLJlW:
	dq ENMuOKOLGPltGUTkko
	dq 0
	dq PKKgQMLXBKowESLCkX
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00048F */
LhEirqJatDEkDrIHXj:
mov rdx, GKAdpLNbJXxuEDvltk
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
GKAdpLNbJXxuEDvltk:
	dd 0x001C0015
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq MlWOfnMETVkdCwMiHw
	dq BAXMuDKDWRaJCarqwD
	dq 0
PKKgQMLXBKowESLCkX:
	dq LhEirqJatDEkDrIHXj
	dq GKAdpLNbJXxuEDvltk
	dq BAXMuDKDWRaJCarqwD
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000495 */
CJXpikDJOsimBxsEIE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, MCqoNIEOSfuKMTfLAI
call BSVM2_Op_SHLI_LLC /* OP:01E6-0000 */
mov rcx, rdi
mov rdx, DLKbWJDKricqFOBhsq
call BSVM2_Op_SHLI_LLC /* OP:01E6-0000 */
mov r13d, [rsi+192]
add r13d, 0
mov r12, [rsi+72]
mov [rsi+288], r12
mov [rsi+280], r13
mov rcx, rdi
mov rdx, MjqEoqIfaDVqQMRWiH
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r13, [rsi+280]
mov r12, [rsi+288]
imul r13d, r12d
mov r12d, [rsi+200]
add r12d, 0
add r13d, r12d
mov [rsi+176], r13d
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+0]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, FAqivaFcPETaBaOEtc
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+88]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, PktTmNLiouAcFoOqqL
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+296]
shl r12d, 1
mov [rsi+296], r12
mov eax, [rsi+296]
add eax, 0
mov [rsi+296], eax
mov r12, [rsi+96]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, LhXbFhIVMKLpFLUNbX
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+304]
shl r12d, 1
mov [rsi+304], r12
inc dword [rsi+304]
mov r12, [rsi+40]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, PfjJBkDawGtUJlbSJa
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12d, [rsi+160]
imul r12d, [rsi+224]
mov [rsi+320], r12
mov eax, [rsi+320]
add eax, [rsi+168]
mov [rsi+320], eax
mov eax, [rsi+240]
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, CgOopFQbvcaLHXAkeU
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MCqoNIEOSfuKMTfLAI:
	dd 0x00140018
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
DLKbWJDKricqFOBhsq:
	dd 0x00150019
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
MjqEoqIfaDVqQMRWiH:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FAqivaFcPETaBaOEtc:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PktTmNLiouAcFoOqqL:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LhXbFhIVMKLpFLUNbX:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PfjJBkDawGtUJlbSJa:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CgOopFQbvcaLHXAkeU:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CB20
	dd 0x000001DF
	dq OECXoXJSTWDJGgJewQ
	dq OECXoXJSTWDJGgJewQ
	dq 0
MlWOfnMETVkdCwMiHw:
	dq CJXpikDJOsimBxsEIE
	dq CgOopFQbvcaLHXAkeU
	dq OECXoXJSTWDJGgJewQ
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0004D2 */
DIsCWnAJtiUfHljpFo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+256], r12d
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, DTVmeAGqOcTrGfvUoL
cmp ecx, 0
mov r10, ClASpRDOAEKGBTctSP
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
OECXoXJSTWDJGgJewQ:
	dq DIsCWnAJtiUfHljpFo
	dq 0
	dq ClASpRDOAEKGBTctSP
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0004DB */
MbIDdiHDMMqCKvxKel:
mov rdx, BAXMuDKDWRaJCarqwD
mov rax, [rdx+0]
jmp rax
align 8
DTVmeAGqOcTrGfvUoL:
	dq MbIDdiHDMMqCKvxKel
	dq 0
	dq BAXMuDKDWRaJCarqwD
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0004DE */
IIFPiQIgOADOLtgtlj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, MWFBMuFaXnxJDXDpHb
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, FlpmkiMvpDIuIWQwwV
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000080
mov [rsi+296], eax
mov eax, [rsi+256]
mov [rsi+304], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FrbUXjLcopUwLhGJhB
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MWFBMuFaXnxJDXDpHb:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FlpmkiMvpDIuIWQwwV:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FrbUXjLcopUwLhGJhB:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BFA0
	dd 0x000001DF
	dq FQnPJuAeLVTHEQXwVt
	dq FQnPJuAeLVTHEQXwVt
	dq 0
ClASpRDOAEKGBTctSP:
	dq IIFPiQIgOADOLtgtlj
	dq FrbUXjLcopUwLhGJhB
	dq FQnPJuAeLVTHEQXwVt
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0004ED */
OmDGvmALLEiAIecamO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, FJUWsjEXWeMlEefiSX
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+112]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, MaBFDWGcjScjAjAwlA
call BSVM2_Op_LDIXAC /* OP:015C-0000 */
mov r12, [rsi+56]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, BXkdNsEGOjsCJnjPNl
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r12, [rsi+64]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, JuexrhALVxnpHNQfUI
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r12d, [rsi+200]
add r12d, 0
mov [rsi+320], r12
mov eax, [rsi+320]
imul eax, 8
mov [rsi+320], eax
mov r12d, [rsi+192]
add r12d, 0
mov [rsi+328], r12
mov eax, [rsi+328]
shl eax, 3
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, AgjieCLgmutpIwvKKO
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FJUWsjEXWeMlEefiSX:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MaBFDWGcjScjAjAwlA:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BXkdNsEGOjsCJnjPNl:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JuexrhALVxnpHNQfUI:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AgjieCLgmutpIwvKKO:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CCD0
	dd 0x000001DF
	dq NpjHLUICbssCIgoddK
	dq NpjHLUICbssCIgoddK
	dq 0
FQnPJuAeLVTHEQXwVt:
	dq OmDGvmALLEiAIecamO
	dq AgjieCLgmutpIwvKKO
	dq NpjHLUICbssCIgoddK
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00050D */
HtVXWhMCjmivNNKVqT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r13d, [rsi+192]
add r13d, 0
mov r12, [rsi+72]
mov [rsi+288], r12
mov [rsi+280], r13
mov rcx, rdi
mov rdx, BtCOjRBOunIjFRDwAj
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r13, [rsi+280]
mov r12, [rsi+288]
imul r13d, r12d
mov r12d, [rsi+200]
add r12d, 1
add r13d, r12d
mov [rsi+176], r13d
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+0]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, IWGbvkPTRKuuDfjHNx
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+88]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, LtbaSXBbJTQTGNmNDj
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+296]
shl r12d, 1
mov [rsi+296], r12
mov eax, [rsi+296]
add eax, 0
mov [rsi+296], eax
mov r12, [rsi+96]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, GCunItFGbIFiOWmFkj
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+304]
shl r12d, 1
mov [rsi+304], r12
inc dword [rsi+304]
mov r12, [rsi+40]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, OHcgWxPUohxvPghCuL
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12d, [rsi+160]
imul r12d, [rsi+224]
mov [rsi+320], r12
mov eax, [rsi+320]
add eax, [rsi+168]
mov [rsi+320], eax
mov eax, [rsi+240]
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, PgItKUACevpjDklNGg
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BtCOjRBOunIjFRDwAj:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IWGbvkPTRKuuDfjHNx:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LtbaSXBbJTQTGNmNDj:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GCunItFGbIFiOWmFkj:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OHcgWxPUohxvPghCuL:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PgItKUACevpjDklNGg:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CB20
	dd 0x000001DF
	dq EtuMvXMoSrxlHRxKEH
	dq EtuMvXMoSrxlHRxKEH
	dq 0
NpjHLUICbssCIgoddK:
	dq HtVXWhMCjmivNNKVqT
	dq PgItKUACevpjDklNGg
	dq EtuMvXMoSrxlHRxKEH
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000540 */
GMgWuSBEhnUqOIXAPG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+256], r12d
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, PbxlFLLkcLPQPsUBSG
cmp ecx, 0
mov r10, QIfoaMLRFAlGNoBJOg
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
EtuMvXMoSrxlHRxKEH:
	dq GMgWuSBEhnUqOIXAPG
	dq 0
	dq QIfoaMLRFAlGNoBJOg
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000549 */
KElxKMPEiFehPwGRdA:
mov rdx, BAXMuDKDWRaJCarqwD
mov rax, [rdx+0]
jmp rax
align 8
PbxlFLLkcLPQPsUBSG:
	dq KElxKMPEiFehPwGRdA
	dq 0
	dq BAXMuDKDWRaJCarqwD
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00054C */
GGCjtVKeEHrBNmILTi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, CunCAOHXaBbPLOovfu
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, MwTKumNhhcsxLXQfvO
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000080
mov [rsi+296], eax
mov eax, [rsi+256]
mov [rsi+304], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DjsRVtFnsvIoMWkmSo
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CunCAOHXaBbPLOovfu:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MwTKumNhhcsxLXQfvO:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DjsRVtFnsvIoMWkmSo:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BFA0
	dd 0x000001DF
	dq BrsGBhMlQFiGPLgqLB
	dq BrsGBhMlQFiGPLgqLB
	dq 0
QIfoaMLRFAlGNoBJOg:
	dq GGCjtVKeEHrBNmILTi
	dq DjsRVtFnsvIoMWkmSo
	dq BrsGBhMlQFiGPLgqLB
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00055B */
AVFhdPAHkbOsLnvQKs:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, KbSclMPPxMGiGaDFDi
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+112]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, NgmrIrOLVgxuICEpRC
call BSVM2_Op_LDIXAC /* OP:015C-0000 */
mov r12, [rsi+56]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, EJnMlnEDfsSNBBKEuQ
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r12, [rsi+64]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, OTgPifLUqnhMPEmIUN
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r12d, [rsi+200]
add r12d, 1
mov [rsi+320], r12
mov eax, [rsi+320]
imul eax, 8
mov [rsi+320], eax
mov r12d, [rsi+192]
add r12d, 0
mov [rsi+328], r12
mov eax, [rsi+328]
shl eax, 3
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, POVxKGFKqhIJEGaehl
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
KbSclMPPxMGiGaDFDi:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NgmrIrOLVgxuICEpRC:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EJnMlnEDfsSNBBKEuQ:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OTgPifLUqnhMPEmIUN:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
POVxKGFKqhIJEGaehl:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CCD0
	dd 0x000001DF
	dq LvmrlvKuLlooGBgvEJ
	dq LvmrlvKuLlooGBgvEJ
	dq 0
BrsGBhMlQFiGPLgqLB:
	dq AVFhdPAHkbOsLnvQKs
	dq POVxKGFKqhIJEGaehl
	dq LvmrlvKuLlooGBgvEJ
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00057B */
QjCRegPBkHbPIWarum:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r13d, [rsi+192]
add r13d, 1
mov r12, [rsi+72]
mov [rsi+288], r12
mov [rsi+280], r13
mov rcx, rdi
mov rdx, GWNsWPAkHqSKAnNskO
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r13, [rsi+280]
mov r12, [rsi+288]
imul r13d, r12d
mov r12d, [rsi+200]
add r12d, 0
add r13d, r12d
mov [rsi+176], r13d
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+0]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, GDITLvQTnFiHPcMxfc
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+88]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, OqbNJtBCReFBQotrvQ
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+296]
shl r12d, 1
mov [rsi+296], r12
mov eax, [rsi+296]
add eax, 0
mov [rsi+296], eax
mov r12, [rsi+96]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, DinvARIhMejRCSsbrj
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+304]
shl r12d, 1
mov [rsi+304], r12
inc dword [rsi+304]
mov r12, [rsi+40]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, MSPEbDAJjVvPCRuDBa
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12d, [rsi+160]
imul r12d, [rsi+224]
mov [rsi+320], r12
mov eax, [rsi+320]
add eax, [rsi+168]
mov [rsi+320], eax
mov eax, [rsi+240]
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, FLQToWFbpQuwGkjDTb
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GWNsWPAkHqSKAnNskO:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GDITLvQTnFiHPcMxfc:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OqbNJtBCReFBQotrvQ:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DinvARIhMejRCSsbrj:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MSPEbDAJjVvPCRuDBa:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FLQToWFbpQuwGkjDTb:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CB20
	dd 0x000001DF
	dq CUTNjMMtjHTaGTBgBm
	dq CUTNjMMtjHTaGTBgBm
	dq 0
LvmrlvKuLlooGBgvEJ:
	dq QjCRegPBkHbPIWarum
	dq FLQToWFbpQuwGkjDTb
	dq CUTNjMMtjHTaGTBgBm
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0005AE */
IbIeuTDwgfNeJLQDKo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+256], r12d
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, EEoSfBAKPngbBUXcWB
cmp ecx, 0
mov r10, PMaMiiLovrSFNMhQre
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
CUTNjMMtjHTaGTBgBm:
	dq IbIeuTDwgfNeJLQDKo
	dq 0
	dq PMaMiiLovrSFNMhQre
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0005B7 */
HPAtPVDWtpMAEBXhnT:
mov rdx, BAXMuDKDWRaJCarqwD
mov rax, [rdx+0]
jmp rax
align 8
EEoSfBAKPngbBUXcWB:
	dq HPAtPVDWtpMAEBXhnT
	dq 0
	dq BAXMuDKDWRaJCarqwD
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0005BA */
IMsAEeKNkHMaKXkgnC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, GNIMAtIuQuiwMfnfkn
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, CLGfSiIRONemHuNCQI
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000080
mov [rsi+296], eax
mov eax, [rsi+256]
mov [rsi+304], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OEHBKECdIserGHGkCs
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GNIMAtIuQuiwMfnfkn:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CLGfSiIRONemHuNCQI:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OEHBKECdIserGHGkCs:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BFA0
	dd 0x000001DF
	dq FhiGDxGKbTvxCXPVQv
	dq FhiGDxGKbTvxCXPVQv
	dq 0
PMaMiiLovrSFNMhQre:
	dq IMsAEeKNkHMaKXkgnC
	dq OEHBKECdIserGHGkCs
	dq FhiGDxGKbTvxCXPVQv
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0005C9 */
PAegDHKsAEPAOUVBJb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, QMgblpJLhwXSNrlgjk
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+112]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, KnAGbCHihbIxDFvFqT
call BSVM2_Op_LDIXAC /* OP:015C-0000 */
mov r12, [rsi+56]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, NCLFRfOQFdhgCQneCe
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r12, [rsi+64]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, LSOdosGLISkSAHBVUj
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r12d, [rsi+200]
add r12d, 0
mov [rsi+320], r12
mov eax, [rsi+320]
imul eax, 8
mov [rsi+320], eax
mov r12d, [rsi+192]
add r12d, 1
mov [rsi+328], r12
mov eax, [rsi+328]
shl eax, 3
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, AEOgIaQbqScbOdSahx
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
QMgblpJLhwXSNrlgjk:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KnAGbCHihbIxDFvFqT:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NCLFRfOQFdhgCQneCe:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LSOdosGLISkSAHBVUj:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AEOgIaQbqScbOdSahx:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CCD0
	dd 0x000001DF
	dq NiHesoOfBhxjDXQBho
	dq NiHesoOfBhxjDXQBho
	dq 0
FhiGDxGKbTvxCXPVQv:
	dq PAegDHKsAEPAOUVBJb
	dq AEOgIaQbqScbOdSahx
	dq NiHesoOfBhxjDXQBho
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0005E9 */
KSNAlrCgtvDMLhQMPA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r13d, [rsi+192]
add r13d, 1
mov r12, [rsi+72]
mov [rsi+288], r12
mov [rsi+280], r13
mov rcx, rdi
mov rdx, LPHsqRLshdcPGHMwST
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r13, [rsi+280]
mov r12, [rsi+288]
imul r13d, r12d
mov r12d, [rsi+200]
add r12d, 1
add r13d, r12d
mov [rsi+176], r13d
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+0]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, LOesHkOBNUXQHrvnLJ
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+88]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, BtvPlgIWBMlLHQLrpJ
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+296]
shl r12d, 1
mov [rsi+296], r12
mov eax, [rsi+296]
add eax, 0
mov [rsi+296], eax
mov r12, [rsi+96]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, DmgnxgIMfUplBwTpFe
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12, [rsi+304]
shl r12d, 1
mov [rsi+304], r12
inc dword [rsi+304]
mov r12, [rsi+40]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, PhkrmcOerGEpBtUOCk
call BSVM2_Op_LDIXUBC /* OP:0159-0000 */
mov r12d, [rsi+160]
imul r12d, [rsi+224]
mov [rsi+320], r12
mov eax, [rsi+320]
add eax, [rsi+168]
mov [rsi+320], eax
mov eax, [rsi+240]
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, LBuAOCKWtUqTKUJige
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
LPHsqRLshdcPGHMwST:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LOesHkOBNUXQHrvnLJ:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BtvPlgIWBMlLHQLrpJ:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DmgnxgIMfUplBwTpFe:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PhkrmcOerGEpBtUOCk:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LBuAOCKWtUqTKUJige:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CB20
	dd 0x000001DF
	dq IShHbVHlISxmFtiqTA
	dq IShHbVHlISxmFtiqTA
	dq 0
NiHesoOfBhxjDXQBho:
	dq KSNAlrCgtvDMLhQMPA
	dq LBuAOCKWtUqTKUJige
	dq IShHbVHlISxmFtiqTA
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00061C */
ECcTRUECKvVeKIUhqT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+256], r12d
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, QRjSPFItfdaOHJHthn
cmp ecx, 0
mov r10, DdSDhVPUiTlOJLsHwT
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
IShHbVHlISxmFtiqTA:
	dq ECcTRUECKvVeKIUhqT
	dq 0
	dq DdSDhVPUiTlOJLsHwT
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000625 */
BmjbkEHXFiDkCwGXsO:
mov rdx, BAXMuDKDWRaJCarqwD
mov rax, [rdx+0]
jmp rax
align 8
QRjSPFItfdaOHJHthn:
	dq BmjbkEHXFiDkCwGXsO
	dq 0
	dq BAXMuDKDWRaJCarqwD
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000628 */
FgnjeoMJiaBCCWfdeE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, AuCoTpAsRpTBLtTmbF
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, BaweAeLOHAUqCQnAdb
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000080
mov [rsi+296], eax
mov eax, [rsi+256]
mov [rsi+304], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DbMfQiBMcIQgFIlqud
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AuCoTpAsRpTBLtTmbF:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BaweAeLOHAUqCQnAdb:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DbMfQiBMcIQgFIlqud:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BFA0
	dd 0x000001DF
	dq OlkGklBvMRUPMjHSvG
	dq OlkGklBvMRUPMjHSvG
	dq 0
DdSDhVPUiTlOJLsHwT:
	dq FgnjeoMJiaBCCWfdeE
	dq DbMfQiBMcIQgFIlqud
	dq OlkGklBvMRUPMjHSvG
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000637 */
QjlMsjJrtSXhATnqRT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, OvPqXTPtpLkXLIxTdM
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+112]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, HJwgMbOlMbFbKVxtSs
call BSVM2_Op_LDIXAC /* OP:015C-0000 */
mov r12, [rsi+56]
mov [rsi+304], r12
mov rcx, rdi
mov rdx, GQGdawDxEHiLMTLsfs
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r12, [rsi+64]
mov [rsi+312], r12
mov rcx, rdi
mov rdx, AonpqrQhhrFoPJLVda
call BSVM2_Op_LDIXIC /* OP:0150-0000 */
mov r12d, [rsi+200]
add r12d, 1
mov [rsi+320], r12
mov eax, [rsi+320]
imul eax, 8
mov [rsi+320], eax
mov r12d, [rsi+192]
add r12d, 1
mov [rsi+328], r12
mov eax, [rsi+328]
shl eax, 3
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, AiLwPVCmkeJCNHeVvQ
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
OvPqXTPtpLkXLIxTdM:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HJwgMbOlMbFbKVxtSs:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GQGdawDxEHiLMTLsfs:
	dd 0x00000000
	dd 0x00030000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AonpqrQhhrFoPJLVda:
	dd 0x00000000
	dd 0x00040000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AiLwPVCmkeJCNHeVvQ:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CCD0
	dd 0x000001DF
	dq LUKsnxCkRtjLHtToON
	dq LUKsnxCkRtjLHtToON
	dq 0
OlkGklBvMRUPMjHSvG:
	dq QjlMsjJrtSXhATnqRT
	dq AiLwPVCmkeJCNHeVvQ
	dq LUKsnxCkRtjLHtToON
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000657 */
FBlTDxKMfCHHKHrmWX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+0]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, IfkvNbLciTOdBfssCA
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, AmoCtnGkkslALmkbhL
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, KLjcfpHnnNlmJCSUsX
call BSVM2_Op_LDIXUBLC /* OP:017F-0000 */
mov r12, [rsi+296]
shl r12d, 1
mov [rsi+296], r12
mov eax, [rsi+296]
add eax, 0
mov [rsi+296], eax
mov rcx, rdi
mov rdx, AbCaljBwKEVBPuMNML
call BSVM2_Op_LDIXUBLC /* OP:017F-0000 */
mov r12, [rsi+304]
shl r12d, 1
mov [rsi+304], r12
inc dword [rsi+304]
mov rcx, rdi
mov rdx, PSXKCgMLpJlSIptCpg
call BSVM2_Op_LDIXUBLC /* OP:017F-0000 */
mov r12d, [rsi+160]
imul r12d, [rsi+224]
mov [rsi+320], r12
mov eax, [rsi+320]
add eax, [rsi+168]
mov [rsi+320], eax
mov eax, [rsi+240]
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, MgmHHwObDkwgQcIpxb
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
IfkvNbLciTOdBfssCA:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000040
	dd 0x00000000
	dq 0
AmoCtnGkkslALmkbhL:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KLjcfpHnnNlmJCSUsX:
	dd 0x0000000B
	dd 0x00020006
	dd 0x00000001
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
AbCaljBwKEVBPuMNML:
	dd 0x0000000C
	dd 0x00030006
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
PSXKCgMLpJlSIptCpg:
	dd 0x00000005
	dd 0x00040006
	dd 0x00000003
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
MgmHHwObDkwgQcIpxb:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CB20
	dd 0x000001DF
	dq QWApvVNcWgORQEOkMs
	dq QWApvVNcWgORQEOkMs
	dq 0
LUKsnxCkRtjLHtToON:
	dq FBlTDxKMfCHHKHrmWX
	dq MgmHHwObDkwgQcIpxb
	dq QWApvVNcWgORQEOkMs
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000680 */
HMGbSkCctLEXLRMwXb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+256], r12d
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, OUptSwDdDHLnOBjiao
cmp ecx, 0
mov r10, CGCLBTKECLkCDalSPa
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
QWApvVNcWgORQEOkMs:
	dq HMGbSkCctLEXLRMwXb
	dq 0
	dq CGCLBTKECLkCDalSPa
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000689 */
OdOTwGATjTPuEUAdjt:
mov rdx, BAXMuDKDWRaJCarqwD
mov rax, [rdx+0]
jmp rax
align 8
OUptSwDdDHLnOBjiao:
	dq OdOTwGATjTPuEUAdjt
	dq 0
	dq BAXMuDKDWRaJCarqwD
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00068C */
FpXrSKLSfcdkGAeNSh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, NgiSioFisUUxHoggct
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, OQLWxKAvVKCNKVgrqo
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, CFkVPDHfWAUMQUEALq
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000080
mov [rsi+296], eax
mov eax, [rsi+256]
mov [rsi+304], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LQOlPjNugQpdQUFcsS
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
NgiSioFisUUxHoggct:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000040
	dd 0x00000000
	dq 0
OQLWxKAvVKCNKVgrqo:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CFkVPDHfWAUMQUEALq:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LQOlPjNugQpdQUFcsS:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BFA0
	dd 0x000001DF
	dq HfdXteJXKPdaMaFrbX
	dq HfdXteJXKPdaMaFrbX
	dq 0
CGCLBTKECLkCDalSPa:
	dq FpXrSKLSfcdkGAeNSh
	dq LQOlPjNugQpdQUFcsS
	dq HfdXteJXKPdaMaFrbX
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00069F */
FqHhugKrfpqdBBhJOQ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, EmPWINCpBBfvDemHgR
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, FnATHsAXQqOlCXNxEg
call BSVM2_Op_LDIXALC /* OP:017F-0000 */
mov rcx, rdi
mov rdx, DmGlxbPTtWrLMgAXFe
call BSVM2_Op_LDIXILC /* OP:017F-0000 */
mov rcx, rdi
mov rdx, NUBbjKCgQAOaHrNNva
call BSVM2_Op_LDIXILC /* OP:017F-0000 */
mov rcx, rdi
mov rdx, HqMnLRPuKqjNPtmcix
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdx, LqfSpeEdfbPEBPqsMW
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, NhlvMAQPnVibQopsgE
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
EmPWINCpBBfvDemHgR:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FnATHsAXQqOlCXNxEg:
	dd 0x0000000E
	dd 0x00020004
	dd 0x00000001
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
DmGlxbPTtWrLMgAXFe:
	dd 0x00000007
	dd 0x00030000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
NUBbjKCgQAOaHrNNva:
	dd 0x00000008
	dd 0x00040000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
HqMnLRPuKqjNPtmcix:
	dd 0x00150028
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
LqfSpeEdfbPEBPqsMW:
	dd 0x00140029
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
NhlvMAQPnVibQopsgE:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CCD0
	dd 0x000001DF
	dq FnPwvkFkbUahBQbIhR
	dq FnPwvkFkbUahBQbIhR
	dq 0
HfdXteJXKPdaMaFrbX:
	dq FqHhugKrfpqdBBhJOQ
	dq NhlvMAQPnVibQopsgE
	dq FnPwvkFkbUahBQbIhR
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0006BD */
IjguipCpTNfOPkBFwF:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+0]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, JuUdieLJVHhPJQVtjT
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, MjVwmVQFAONOAoqvIF
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, KlNfCqAiPGCjEgCXMh
call BSVM2_Op_LDIXUBLC /* OP:017F-0000 */
mov r12, [rsi+296]
shl r12d, 1
mov [rsi+296], r12
mov eax, [rsi+296]
add eax, 0
mov [rsi+296], eax
mov rcx, rdi
mov rdx, NFQQOoQHLHOKGBUlsG
call BSVM2_Op_LDIXUBLC /* OP:017F-0000 */
mov r12, [rsi+304]
shl r12d, 1
mov [rsi+304], r12
inc dword [rsi+304]
mov rcx, rdi
mov rdx, LjArpgHRwcvVLjBJVx
call BSVM2_Op_LDIXUBLC /* OP:017F-0000 */
mov r12d, [rsi+160]
imul r12d, [rsi+224]
mov [rsi+320], r12
mov eax, [rsi+320]
add eax, [rsi+168]
mov [rsi+320], eax
mov eax, [rsi+240]
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, AxEsurQcUJMGQeXLlT
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
JuUdieLJVHhPJQVtjT:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000080
	dd 0x00000000
	dq 0
MjVwmVQFAONOAoqvIF:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KlNfCqAiPGCjEgCXMh:
	dd 0x0000000B
	dd 0x00020006
	dd 0x00000001
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
NFQQOoQHLHOKGBUlsG:
	dd 0x0000000C
	dd 0x00030006
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
LjArpgHRwcvVLjBJVx:
	dd 0x00000005
	dd 0x00040006
	dd 0x00000003
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
AxEsurQcUJMGQeXLlT:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CB20
	dd 0x000001DF
	dq CQIIpfDOBTEOPbldjV
	dq CQIIpfDOBTEOPbldjV
	dq 0
FnPwvkFkbUahBQbIhR:
	dq IjguipCpTNfOPkBFwF
	dq AxEsurQcUJMGQeXLlT
	dq CQIIpfDOBTEOPbldjV
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0006E6 */
CiWtpBJAPGUrMndINu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+256], r12d
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, AqMTeICOXbliCRTxJP
cmp ecx, 0
mov r10, FNdcVaIkcQuTLKbmSv
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
CQIIpfDOBTEOPbldjV:
	dq CiWtpBJAPGUrMndINu
	dq 0
	dq FNdcVaIkcQuTLKbmSv
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0006EF */
DWRTPeEOMscwDCcooX:
mov rdx, BAXMuDKDWRaJCarqwD
mov rax, [rdx+0]
jmp rax
align 8
AqMTeICOXbliCRTxJP:
	dq DWRTPeEOMscwDCcooX
	dq 0
	dq BAXMuDKDWRaJCarqwD
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0006F2 */
QQTOUOApRVKgIwejEG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+280], r12
mov rcx, rdi
mov rdx, FDWOUuPtlwfkOmiMfQ
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, DOxshJDhOGpKHjbKoF
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, MiMsiEJVJGIXQWTdKv
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000080
mov [rsi+296], eax
mov eax, [rsi+256]
mov [rsi+304], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CGGRnuOhuLoFDTNDsk
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
FDWOUuPtlwfkOmiMfQ:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000080
	dd 0x00000000
	dq 0
DOxshJDhOGpKHjbKoF:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MiMsiEJVJGIXQWTdKv:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CGGRnuOhuLoFDTNDsk:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BFA0
	dd 0x000001DF
	dq PffeokLudLEwPFpXhH
	dq PffeokLudLEwPFpXhH
	dq 0
FNdcVaIkcQuTLKbmSv:
	dq QQTOUOApRVKgIwejEG
	dq CGGRnuOhuLoFDTNDsk
	dq PffeokLudLEwPFpXhH
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000705 */
EFGQgVHJAUlvGqJonW:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, HucMNLHDsWKEHheUMJ
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, LCVLKxLEBUFcAKppcX
call BSVM2_Op_LDIXALC /* OP:017F-0000 */
mov rcx, rdi
mov rdx, BUDMlREIsnhOEdWwbx
call BSVM2_Op_LDIXILC /* OP:017F-0000 */
mov rcx, rdi
mov rdx, JWipirJHXloJQTjeOu
call BSVM2_Op_LDIXILC /* OP:017F-0000 */
mov rcx, rdi
mov rdx, ObsTuJECRJetNrGauV
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdx, LgKlxSInQivEEMTjJL
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, JonNnkCaSiGuDRFnog
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HucMNLHDsWKEHheUMJ:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LCVLKxLEBUFcAKppcX:
	dd 0x0000000E
	dd 0x00020004
	dd 0x00000001
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
BUDMlREIsnhOEdWwbx:
	dd 0x00000007
	dd 0x00030000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
JWipirJHXloJQTjeOu:
	dd 0x00000008
	dd 0x00040000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
ObsTuJECRJetNrGauV:
	dd 0x00150028
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
LgKlxSInQivEEMTjJL:
	dd 0x00140029
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
JonNnkCaSiGuDRFnog:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CCD0
	dd 0x000001DF
	dq JsmMbEIxFWoXNSBkOC
	dq JsmMbEIxFWoXNSBkOC
	dq 0
PffeokLudLEwPFpXhH:
	dq EFGQgVHJAUlvGqJonW
	dq JonNnkCaSiGuDRFnog
	dq JsmMbEIxFWoXNSBkOC
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000723 */
OrKJFWAkrVKEBwdrkb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+168]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, PKKgQMLXBKowESLCkX
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JsmMbEIxFWoXNSBkOC:
	dq OrKJFWAkrVKEBwdrkb
	dq 0
	dq PKKgQMLXBKowESLCkX
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000728 */
EbtVuTBgQxQDKkUAni:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, QRrjDiEttsrmDiiApX
cmp ecx, 0
mov r10, JnbRGKLVPtPmHhpIOx
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
BAXMuDKDWRaJCarqwD:
	dq EbtVuTBgQxQDKkUAni
	dq 0
	dq JnbRGKLVPtPmHhpIOx
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00072F */
QgQkqsQmdPOkIoacPW:
mov rdx, FEMgEGFMKBbTIjrMIB
mov rax, [rdx+0]
jmp rax
align 8
QRrjDiEttsrmDiiApX:
	dq QgQkqsQmdPOkIoacPW
	dq 0
	dq FEMgEGFMKBbTIjrMIB
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000732 */
NbpqDdCFwNpdMXAgbT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+160]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, ELKXHXMdqRIfHiPVoc
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JnbRGKLVPtPmHhpIOx:
	dq NbpqDdCFwNpdMXAgbT
	dq 0
	dq ELKXHXMdqRIfHiPVoc
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000737 */
EWQoWaBaAvLIJVeeFC:
mov rdx, PrcrdHPnIUSlHgkXwA
mov rax, [rdx+0]
jmp rax
align 8
FEMgEGFMKBbTIjrMIB:
	dq EWQoWaBaAvLIJVeeFC
	dq 0
	dq PrcrdHPnIUSlHgkXwA
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00073A */
ANFsTvFWUMCSJeeAxQ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C7A2
mov [rsi+280], rax
xor rax, rax
mov [rsi+288], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CscCtcGlGISDNWKgPL
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CscCtcGlGISDNWKgPL:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq IeUrNJNAncuvPOaULD
	dq IeUrNJNAncuvPOaULD
	dq 0
AFRCeoDqsNagHItvPj:
	dq ANFsTvFWUMCSJeeAxQ
	dq CscCtcGlGISDNWKgPL
	dq IeUrNJNAncuvPOaULD
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000740 */
JnGmlQIJiHsNKTMrlX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+256], eax
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BddapcBSubUQDrgHka
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IeUrNJNAncuvPOaULD:
	dq JnGmlQIJiHsNKTMrlX
	dq 0
	dq BddapcBSubUQDrgHka
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00074A */
ADLHPeDPmLoICNVRQJ:
mov rdx, OEkvRAISsRVjCBxmNL
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
OEkvRAISsRVjCBxmNL:
	dd 0x001E0014
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq LBvInuDtEAhIHsDXpI
	dq PrcrdHPnIUSlHgkXwA
	dq 0
BddapcBSubUQDrgHka:
	dq ADLHPeDPmLoICNVRQJ
	dq OEkvRAISsRVjCBxmNL
	dq PrcrdHPnIUSlHgkXwA
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000750 */
OMllOfAGGWrjQPBdrP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+168], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KRkwfhHcCsgGBcmNDu
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LBvInuDtEAhIHsDXpI:
	dq OMllOfAGGWrjQPBdrP
	dq 0
	dq KRkwfhHcCsgGBcmNDu
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000755 */
CAoRouNKAIDwBVXLWv:
mov rdx, GrSJcAKHuDuBDeqrcE
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
GrSJcAKHuDuBDeqrcE:
	dd 0x001F0015
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq FRnoadBjKlOQENtQrF
	dq EWWxKuESlaFUQBUKDx
	dq 0
KRkwfhHcCsgGBcmNDu:
	dq CAoRouNKAIDwBVXLWv
	dq GrSJcAKHuDuBDeqrcE
	dq EWWxKuESlaFUQBUKDx
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00075B */
PhUsuQQkEwRvGTwLLC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+176], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, HCLaTbBHqngsQcivpo
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FRnoadBjKlOQENtQrF:
	dq PhUsuQQkEwRvGTwLLC
	dq 0
	dq HCLaTbBHqngsQcivpo
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000760 */
QpOldtLplCGvMLorrj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+176]
mov [rsi+280], eax
mov rcx, rdi
mov rdx, LHJLhLCkdNsVIrGiQX
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov ecx, [rsi+280]
mov rax, JbwGlwOvGuDdNRxlvs
cmp ecx, [rsi+288]
mov r10, ClreVCMPmELdQKiwpg
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
LHJLhLCkdNsVIrGiQX:
	dd 0x00150004
	dd 0x00010006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HCLaTbBHqngsQcivpo:
	dq QpOldtLplCGvMLorrj
	dq 0
	dq ClreVCMPmELdQKiwpg
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00076A */
HDfLoTHRRJobNQulFC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+184], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NilwbPGTGhugMNIIKx
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JbwGlwOvGuDdNRxlvs:
	dq HDfLoTHRRJobNQulFC
	dq 0
	dq NilwbPGTGhugMNIIKx
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00076F */
EQppahEJMGEILfAgDt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+184]
mov [rsi+280], eax
mov rcx, rdi
mov rdx, MavChNAHMjMkPwqJCq
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov ecx, [rsi+280]
mov rax, CXDPTHAsGqwKMFwqXC
cmp ecx, [rsi+288]
mov r10, DptSbUOewgbDAssuRJ
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
MavChNAHMjMkPwqJCq:
	dd 0x00150003
	dd 0x00010006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NilwbPGTGhugMNIIKx:
	dq EQppahEJMGEILfAgDt
	dq 0
	dq DptSbUOewgbDAssuRJ
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000779 */
HnkqPUJPUdCCLXkMRU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, GGtHXfISuoNnGHDtKH
cmp ecx, 0
mov r10, HFpqXxPpMVraQokfWU
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
CXDPTHAsGqwKMFwqXC:
	dq HnkqPUJPUdCCLXkMRU
	dq 0
	dq HFpqXxPpMVraQokfWU
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000780 */
NrtPmjMVpNvuCFboRd:
mov rdx, DptSbUOewgbDAssuRJ
mov rax, [rdx+0]
jmp rax
align 8
GGtHXfISuoNnGHDtKH:
	dq NrtPmjMVpNvuCFboRd
	dq 0
	dq DptSbUOewgbDAssuRJ
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000783 */
APAICDNXhaVTICkdSC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r14d, [rsi+160]
mov [rsi+280], r14
mov rcx, rdi
mov rdx, DsAfVwFdAQvxJaSRKf
call BSVM2_Op_LDIXILL /* OP:017E-0000 */
mov rcx, rdi
mov rdx, MejaqHIhFDXlOJjITp
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov rcx, rdi
mov rdx, KJBNIOIGiiwnFNMihx
call BSVM2_Op_DIVI /* OP:0170-0000 */
mov rcx, rdi
mov rdx, HLUbgnBtXGnaBUVHQC
call BSVM2_Op_DIVI /* OP:0170-0000 */
mov rcx, rdi
mov rdx, KwwMPaFHSsvAPxAMVu
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov r14, [rsi+280]
mov r12, [rsi+288]
imul r14d, r12d
mov [rsi+192], r14d
mov r14d, [rsi+160]
mov [rsi+280], r14
mov rcx, rdi
mov rdx, QaXbIKQnKCHgNUXbwu
call BSVM2_Op_LDIXILL /* OP:017E-0000 */
mov rcx, rdi
mov rdx, PoIbNQJIuIUfHWmlRU
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov rcx, rdi
mov rdx, QlvcloFoQSFsQmjckv
call BSVM2_Op_DIVI /* OP:0170-0000 */
mov rcx, rdi
mov rdx, DoOucbEigJDiFElerx
call BSVM2_Op_MODI /* OP:0172-0000 */
mov rcx, rdi
mov rdx, DibiNEChUPFGDRJPPX
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov r14, [rsi+280]
mov r12, [rsi+288]
imul r14d, r12d
mov [rsi+200], r14d
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+0]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, BoNAAKJhPjVKEOxmuJ
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdx, GFHGVmHcleJdKcGEAL
call BSVM2_Op_LEARI /* OP:0130-0000 */
mov rcx, rdi
mov rdx, IngnDXGBPiQAKrmcoV
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, JQrldaMUneXVGJeLQb
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov r15, [rsi+296]
shl r15d, 1
mov [rsi+296], r15
mov eax, [rsi+296]
add eax, 0
mov [rsi+296], eax
mov rcx, rdi
mov rdx, PLUHueGxSDmUJDlOGl
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov r12, [rsi+304]
shl r12d, 1
mov [rsi+304], r12
inc dword [rsi+304]
mov rcx, rdi
mov rdx, DsdxFrLTKiTmQnqGHq
call BSVM2_Op_LDIXUBLL /* OP:017E-0000 */
mov eax, [rsi+160]
mov [rsi+320], eax
mov eax, [rsi+240]
mov [rsi+328], eax
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, EFxEIqOfxTkUAIkQNo
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DsAfVwFdAQvxJaSRKf:
	dd 0x00150009
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MejaqHIhFDXlOJjITp:
	dd 0x00150003
	dd 0x00020006
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KJBNIOIGiiwnFNMihx:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HLUbgnBtXGnaBUVHQC:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KwwMPaFHSsvAPxAMVu:
	dd 0x00150003
	dd 0x00010006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QaXbIKQnKCHgNUXbwu:
	dd 0x00150009
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PoIbNQJIuIUfHWmlRU:
	dd 0x00150003
	dd 0x00020006
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QlvcloFoQSFsQmjckv:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DoOucbEigJDiFElerx:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DibiNEChUPFGDRJPPX:
	dd 0x00150003
	dd 0x00010006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BoNAAKJhPjVKEOxmuJ:
	dd 0x00150025
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000006
	dd 0x00000000
	dq 0
GFHGVmHcleJdKcGEAL:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IngnDXGBPiQAKrmcoV:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JQrldaMUneXVGJeLQb:
	dd 0x0015000B
	dd 0x00020006
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PLUHueGxSDmUJDlOGl:
	dd 0x0015000C
	dd 0x00030006
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DsdxFrLTKiTmQnqGHq:
	dd 0x00150005
	dd 0x00040006
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EFxEIqOfxTkUAIkQNo:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CB20
	dd 0x000001DF
	dq ERtVBfNQblQGFFJcvS
	dq ERtVBfNQblQGFFJcvS
	dq 0
HFpqXxPpMVraQokfWU:
	dq APAICDNXhaVTICkdSC
	dq EFxEIqOfxTkUAIkQNo
	dq ERtVBfNQblQGFFJcvS
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0007D6 */
IBswQAFdhqFtPQSULD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+256], r12d
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, KHwwrvMVwnvlILndHq
cmp ecx, 0
mov r10, LVrBLCKOHxWWHoCBDa
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
ERtVBfNQblQGFFJcvS:
	dq IBswQAFdhqFtPQSULD
	dq 0
	dq LVrBLCKOHxWWHoCBDa
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0007DF */
IeQqqeGBvDVKISfwjq:
mov rdx, DptSbUOewgbDAssuRJ
mov rax, [rdx+0]
jmp rax
align 8
KHwwrvMVwnvlILndHq:
	dq IeQqqeGBvDVKISfwjq
	dq 0
	dq DptSbUOewgbDAssuRJ
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0007E2 */
DBQwLhLBeUKnMpLobJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, [rsi+0]
mov [rsi+280], r13
mov rcx, rdi
mov rdx, IGoBOdMhbviSNckxSj
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdx, NXmwUNLBEBrQPRaxJL
call BSVM2_Op_LEARI /* OP:0130-0000 */
mov rcx, rdi
mov rdx, OCMkleOwQcvTOhMeiH
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, HTtEWMDCrVGoIVmRso
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000080
mov [rsi+296], eax
mov eax, [rsi+256]
mov [rsi+304], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, QJdNJqAGRSIMDPqMwe
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
IGoBOdMhbviSNckxSj:
	dd 0x00150024
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000006
	dd 0x00000000
	dq 0
NXmwUNLBEBrQPRaxJL:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OCMkleOwQcvTOhMeiH:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HTtEWMDCrVGoIVmRso:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QJdNJqAGRSIMDPqMwe:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BFA0
	dd 0x000001DF
	dq AKKNsvDOSnTTECoGAR
	dq AKKNsvDOSnTTECoGAR
	dq 0
LVrBLCKOHxWWHoCBDa:
	dq DBQwLhLBeUKnMpLobJ
	dq QJdNJqAGRSIMDPqMwe
	dq AKKNsvDOSnTTECoGAR
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 0007F7 */
QGIlwNNATJiwACrxgI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov [rsi+280], rax
mov r12, [rsi+16]
mov [rsi+288], r12
mov rcx, rdi
mov rdx, KqTGBmQXwmskDTJTmK
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdx, MePTFbBDLNiWHScNsM
call BSVM2_Op_LDIXALL /* OP:017E-0000 */
mov rcx, rdi
mov rdx, JJKiGbMOVhqJDBpfCC
call BSVM2_Op_LDIXILL /* OP:017E-0000 */
mov rcx, rdi
mov rdx, BEoqSwNVUmkLPqoTKC
call BSVM2_Op_LDIXILL /* OP:017E-0000 */
mov r12d, [rsi+200]
add r12d, [rsi+184]
mov [rsi+320], r12
mov eax, [rsi+320]
imul eax, 8
mov [rsi+320], eax
mov r12d, [rsi+192]
add r12d, [rsi+176]
mov [rsi+328], r12
mov eax, [rsi+328]
shl eax, 3
mov [rsi+328], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, PkPNAnMGSkVeFXQoWb
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
KqTGBmQXwmskDTJTmK:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MePTFbBDLNiWHScNsM:
	dd 0x0015000E
	dd 0x00020004
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JJKiGbMOVhqJDBpfCC:
	dd 0x00150007
	dd 0x00030000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BEoqSwNVUmkLPqoTKC:
	dd 0x00150008
	dd 0x00040000
	dd 0x00000003
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PkPNAnMGSkVeFXQoWb:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776CCD0
	dd 0x000001DF
	dq GBFnTbHtikqnEmPBRV
	dq GBFnTbHtikqnEmPBRV
	dq 0
AKKNsvDOSnTTECoGAR:
	dq QGIlwNNATJiwACrxgI
	dq PkPNAnMGSkVeFXQoWb
	dq GBFnTbHtikqnEmPBRV
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000819 */
IFrBSXJSgBNnBuSkTn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+184]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, NilwbPGTGhugMNIIKx
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GBFnTbHtikqnEmPBRV:
	dq IFrBSXJSgBNnBuSkTn
	dq 0
	dq NilwbPGTGhugMNIIKx
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00081E */
GESdxvDjEKmtCNXCEC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, LBAwREITMTwJAeNisk
cmp ecx, 0
mov r10, LbhhqUFjnwdQEQIKhA
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
DptSbUOewgbDAssuRJ:
	dq GESdxvDjEKmtCNXCEC
	dq 0
	dq LbhhqUFjnwdQEQIKhA
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000825 */
FDnQmWBNKxRmHQIsfO:
mov rdx, ClreVCMPmELdQKiwpg
mov rax, [rdx+0]
jmp rax
align 8
LBAwREITMTwJAeNisk:
	dq FDnQmWBNKxRmHQIsfO
	dq 0
	dq ClreVCMPmELdQKiwpg
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000828 */
MeSpQNPiMwTxOWXDiV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+176]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, HCLaTbBHqngsQcivpo
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LbhhqUFjnwdQEQIKhA:
	dq MeSpQNPiMwTxOWXDiV
	dq 0
	dq HCLaTbBHqngsQcivpo
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00082D */
AIaLAwGmXQSPEQMiux:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, QTHOmcMRAkrJHFBXjK
cmp ecx, 0
mov r10, DQrhssKHFOtRAHKwoH
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
ClreVCMPmELdQKiwpg:
	dq AIaLAwGmXQSPEQMiux
	dq 0
	dq DQrhssKHFOtRAHKwoH
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000834 */
HvELgpPtHvbhEvtnuP:
mov rdx, EWWxKuESlaFUQBUKDx
mov rax, [rdx+0]
jmp rax
align 8
QTHOmcMRAkrJHFBXjK:
	dq HvELgpPtHvbhEvtnuP
	dq 0
	dq EWWxKuESlaFUQBUKDx
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000837 */
QdRUawItValGIFNXgn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+168]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, KRkwfhHcCsgGBcmNDu
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DQrhssKHFOtRAHKwoH:
	dq QdRUawItValGIFNXgn
	dq 0
	dq KRkwfhHcCsgGBcmNDu
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00083C */
CjRuuEMEpvXqOvsBLB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, FXexOQNIXRRaGvlkFw
cmp ecx, 0
mov r10, AqSwmjGfqvNDMmxWkv
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
EWWxKuESlaFUQBUKDx:
	dq CjRuuEMEpvXqOvsBLB
	dq 0
	dq AqSwmjGfqvNDMmxWkv
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000843 */
KoAQDkEwapMFPHfpAM:
mov rdx, PrcrdHPnIUSlHgkXwA
mov rax, [rdx+0]
jmp rax
align 8
FXexOQNIXRRaGvlkFw:
	dq KoAQDkEwapMFPHfpAM
	dq 0
	dq PrcrdHPnIUSlHgkXwA
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000846 */
KOhRAhEkmkHxMxjpIC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+160]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, BddapcBSubUQDrgHka
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
AqSwmjGfqvNDMmxWkv:
	dq KOhRAhEkmkHxMxjpIC
	dq 0
	dq BddapcBSubUQDrgHka
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00084B */
McREhlLnuXmbPEGkeW:
mov rdx, JRcBMuLntvePJUiIPp
jmp BSVM2_TrOp_NatCallG0
align 8
JRcBMuLntvePJUiIPp:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq HgVIMFAaFDCFBWlhAl
	dq HgVIMFAaFDCFBWlhAl
	dq 0
PrcrdHPnIUSlHgkXwA:
	dq McREhlLnuXmbPEGkeW
	dq JRcBMuLntvePJUiIPp
	dq HgVIMFAaFDCFBWlhAl
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00084D */
HGGktqIfoBvNMcDaSB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+280]
mov [rsi+144], r12d
mov rax, 0x008D01DF1853C7C4
mov [rsi+280], rax
mov rcx, rdi
mov rdx, DlPCUPNucAMdJxHWcW
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+144]
sub r12d, [rsi+136]
mov [rsi+296], r12
mov rcx, rdi
mov rdx, MIqauWKLwbeGMgGbuJ
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, FddrgnIDHuXtEeJGJN
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, JFDpfrMatvGNGwSJhg
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DlPCUPNucAMdJxHWcW:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MIqauWKLwbeGMgGbuJ:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FddrgnIDHuXtEeJGJN:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JFDpfrMatvGNGwSJhg:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq McrLFgJdSCKwNuINoo
	dq McrLFgJdSCKwNuINoo
	dq 0
HgVIMFAaFDCFBWlhAl:
	dq HGGktqIfoBvNMcDaSB
	dq JFDpfrMatvGNGwSJhg
	dq McrLFgJdSCKwNuINoo
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00085F */
MjmKsFFBwtVNIrSBQu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+256]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+256]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+280], eax
mov ecx, [rsi+280]
mov rax, EhiAkHFSLgaNHLFpTx
cmp ecx, 0
mov r10, KUbnujPIgqqJOWAJBr
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
McrLFgJdSCKwNuINoo:
	dq MjmKsFFBwtVNIrSBQu
	dq 0
	dq KUbnujPIgqqJOWAJBr
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000866 */
MToRoXFDasIKOjvoLm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C7EC
mov [rsi+280], rax
xor rax, rax
mov [rsi+288], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PNebMlEwjMEDMITOmD
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
PNebMlEwjMEDMITOmD:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq CvgLWEFdpqruGHGQru
	dq CvgLWEFdpqruGHGQru
	dq 0
EhiAkHFSLgaNHLFpTx:
	dq MToRoXFDasIKOjvoLm
	dq PNebMlEwjMEDMITOmD
	dq CvgLWEFdpqruGHGQru
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 00086C */
OViJumPvGQsQBVAdls:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0xFFFFFFFF
mov [rsi+280], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GBrSuEQaeATuNbrCeb
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CvgLWEFdpqruGHGQru:
	dq OViJumPvGQsQBVAdls
	dq 0
	dq GBrSuEQaeATuNbrCeb
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000873 */
NSBWcmNONIvtBiwXpO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+264]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+16]
mov r12, rdx
mov r13, [rsi+272]
mov [rsi+288], r13
mov rax, r12
mov rcx, r13
sub rax, rcx
mov r12, rax
mov [rsi+160], r12d
mov eax, [rsi+160]
mov [rsi+280], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, GBrSuEQaeATuNbrCeb
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
KUbnujPIgqqJOWAJBr:
	dq NSBWcmNONIvtBiwXpO
	dq 0
	dq GBrSuEQaeATuNbrCeb
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000886 */
PelECeINDHscOwrtUk:
mov rdx, GBrSuEQaeATuNbrCeb
mov rax, [rdx+0]
jmp rax
align 8
CkVREJCdtLJnAUMFTq:
	dq PelECeINDHscOwrtUk
	dq 0
	dq GBrSuEQaeATuNbrCeb
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_MarkerSOS 000888 */
HVoFQUAJNKCFGkXRsE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, PRAaPGDbpDuQEQAvBe
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, KblURPNSfGRwOrvQui
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, ItOMJBEumpdgJmVdsx
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, PcMtMTOGSTcrCVrDVB
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, GoxEItGimBvVFViSJm
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, NoUJAtQMQSUiFmewRW
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, AIvDdJElmKlqPInbQu
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, DPKLHFEGOhblMOLgUG
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, GATiiqFBKjkrFogCeH
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, LrsQdqKPnafHDOUvgf
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, DEpaAVCHIswMIVnjMQ
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, IPlcQDAIUAoCLqONgJ
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, JunxXRQUjffVDLvrWN
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, QhvgRbIwupUkGRSsFG
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, JajCFpGgWEfnDjqwQb
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, QjuNKuLkvHXjAaQGIs
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, MkwAEpNLeOcTHnklLT
add rsp, 504
jmp BSVM2_TrOp_RETI
align 8
PRAaPGDbpDuQEQAvBe:
	dd 0x00000100
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KblURPNSfGRwOrvQui:
	dd 0x00010040
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ItOMJBEumpdgJmVdsx:
	dd 0x00020040
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PcMtMTOGSTcrCVrDVB:
	dd 0x00030004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GoxEItGimBvVFViSJm:
	dd 0x00040004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NoUJAtQMQSUiFmewRW:
	dd 0x00050004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AIvDdJElmKlqPInbQu:
	dd 0x00060004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DPKLHFEGOhblMOLgUG:
	dd 0x00070004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GATiiqFBKjkrFogCeH:
	dd 0x00080004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LrsQdqKPnafHDOUvgf:
	dd 0x00090004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DEpaAVCHIswMIVnjMQ:
	dd 0x000A0004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IPlcQDAIUAoCLqONgJ:
	dd 0x000B0004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JunxXRQUjffVDLvrWN:
	dd 0x000C0004
	dd 0x00000006
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QhvgRbIwupUkGRSsFG:
	dd 0x000D0004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JajCFpGgWEfnDjqwQb:
	dd 0x000E0004
	dd 0x00000004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QjuNKuLkvHXjAaQGIs:
	dd 0x000F0004
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MkwAEpNLeOcTHnklLT:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq GBrSuEQaeATuNbrCeb
	dq 0
GBrSuEQaeATuNbrCeb:
	dq HVoFQUAJNKCFGkXRsE
	dq MkwAEpNLeOcTHnklLT
	dq GBrSuEQaeATuNbrCeb
	dq 0x000001DF1776CF20
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJHUFF_InitStream 000000 */
JCipbuBNLLPwODkvwm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
xor r12, r12
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+36], edx
xor r12, r12
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+40], edx
mov r12, [rsi+8]
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, r12
mov [rax+8], rdx
mov r12, [rsi+8]
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, r12
mov [rax+16], rdx
mov rax, [rsi+0]
mov [rsi+16], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PCLXovGvkuEfLcksGE
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
PCLXovGvkuEfLcksGE:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776C110
	dd 0x000001DF
	dq PoiPlRNXrBdTMetpUo
	dq PoiPlRNXrBdTMetpUo
	dq 0
AMdXNEBdhSvEFJrlME:
	dq JCipbuBNLLPwODkvwm
	dq PCLXovGvkuEfLcksGE
	dq PoiPlRNXrBdTMetpUo
	dq 0x000001DF1776C360
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_InitStream 000012 */
AwSBuIApuwASIrEgvW:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov r12, [rsi+16]
mov edx, r12d
mov [rax+32], edx
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov [rsi+16], r12
mov eax, [rsi+16]
shl eax, 8
mov [rsi+16], eax
mov rax, [rsi+0]
mov [rsi+24], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BHnXnaAPIKulQAnPxb
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BHnXnaAPIKulQAnPxb:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776C110
	dd 0x000001DF
	dq KvuJQQKGTMPBKvQisb
	dq KvuJQQKGTMPBKvQisb
	dq 0
PoiPlRNXrBdTMetpUo:
	dq AwSBuIApuwASIrEgvW
	dq BHnXnaAPIKulQAnPxb
	dq KvuJQQKGTMPBKvQisb
	dq 0x000001DF1776C360
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_InitStream 00001C */
LnwvxvGQvjouNPwLAO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+16]
mov r13, [rsi+24]
or r12d, r13d
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+32], edx
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov [rsi+16], r12
mov eax, [rsi+16]
shl eax, 8
mov [rsi+16], eax
mov rax, [rsi+0]
mov [rsi+24], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, HolNFTLTDUtwHOerJq
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HolNFTLTDUtwHOerJq:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776C110
	dd 0x000001DF
	dq HohrqdJHSCLFAToKIq
	dq HohrqdJHSCLFAToKIq
	dq 0
KvuJQQKGTMPBKvQisb:
	dq LnwvxvGQvjouNPwLAO
	dq HolNFTLTDUtwHOerJq
	dq HohrqdJHSCLFAToKIq
	dq 0x000001DF1776C360
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_InitStream 000027 */
DJdIVQBVDnfKDTcHfD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+16]
mov r13, [rsi+24]
or r12d, r13d
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+32], edx
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov [rsi+16], r12
mov eax, [rsi+16]
shl eax, 8
mov [rsi+16], eax
mov rax, [rsi+0]
mov [rsi+24], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, AHQCFHKNIPRULxsksJ
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AHQCFHKNIPRULxsksJ:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776C110
	dd 0x000001DF
	dq LagnXSGTUkjBCgTeUD
	dq LagnXSGTUkjBCgTeUD
	dq 0
HohrqdJHSCLFAToKIq:
	dq DJdIVQBVDnfKDTcHfD
	dq AHQCFHKNIPRULxsksJ
	dq LagnXSGTUkjBCgTeUD
	dq 0x000001DF1776C360
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_InitStream 000032 */
BnmNOTDcKobGCkcLbU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+16]
or r12d, [rsi+24]
mov rax, [rsi+0]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+16], r12
mov edx, r12d
mov [rax+32], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, DkDdvrPNejDgLfdnBa
add rsp, 504
jmp BSVM2_TrOp_RETIC
align 8
DkDdvrPNejDgLfdnBa:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq LagnXSGTUkjBCgTeUD
	dq 0
LagnXSGTUkjBCgTeUD:
	dq BnmNOTDcKobGCkcLbU
	dq DkDdvrPNejDgLfdnBa
	dq LagnXSGTUkjBCgTeUD
	dq 0x000001DF1776C360
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJHUFF_NextByte 000000 */
GbLmLJKRhrQUPtDhSr:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+16]
mov r12, rdx
mov r13, r12
lea r13, [r13+1]
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+32], r13
mov rdx, r13
mov [rax+16], rdx
movzxb r12d, [r12]
mov [rsi+0], r12d
mov eax, [rsi+0]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+0]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+24], eax
mov ecx, [rsi+24]
mov rax, GAlsqiFDxgUBKKqTRU
cmp ecx, 0
mov r10, HagAXhNflIdfPBttjF
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
ALkFNuKvlfUtHWhNWf:
	dq GbLmLJKRhrQUPtDhSr
	dq 0
	dq HagAXhNflIdfPBttjF
	dq 0x000001DF1776C1F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_NextByte 000014 */
KDiIRxBqFQwnCqaLwJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+16]
mov r12, rdx
mov r13, r12
lea r13, [r13+1]
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+32], r13
mov rdx, r13
mov [rax+16], rdx
movzxb r12d, [r12]
mov [rsi+8], r12d
mov eax, [rsi+8]
mov [rsi+24], eax
mov ecx, [rsi+24]
mov rax, JFuEMxBREfJWOFIjwK
cmp ecx, 0
mov r10, HagAXhNflIdfPBttjF
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
GAlsqiFDxgUBKKqTRU:
	dq KDiIRxBqFQwnCqaLwJ
	dq 0
	dq HagAXhNflIdfPBttjF
	dq 0x000001DF1776C1F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_NextByte 000027 */
KDlhthHPBnElNVCXcw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C810
mov [rsi+24], rax
xor rax, rax
mov [rsi+32], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, AgKqBgIaiWeUMrpIBr
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AgKqBgIaiWeUMrpIBr:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq OHgRvBCwDVUjQWvfPh
	dq OHgRvBCwDVUjQWvfPh
	dq 0
JFuEMxBREfJWOFIjwK:
	dq KDlhthHPBnElNVCXcw
	dq AgKqBgIaiWeUMrpIBr
	dq OHgRvBCwDVUjQWvfPh
	dq 0x000001DF1776C1F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_NextByte 00002C */
NWLdqOPMPocPJJdmsc:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, 0x00000001
mov rax, [rsi+16]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+24], r12
mov edx, r12d
mov [rax+40], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PtgAMxGbBtTGIWrcWn
add rsp, 504
jmp BSVM2_TrOp_RETIC
align 8
PtgAMxGbBtTGIWrcWn:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq HagAXhNflIdfPBttjF
	dq HagAXhNflIdfPBttjF
	dq 0
OHgRvBCwDVUjQWvfPh:
	dq NWLdqOPMPocPJJdmsc
	dq PtgAMxGbBtTGIWrcWn
	dq HagAXhNflIdfPBttjF
	dq 0x000001DF1776C1F0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_NextByte 000032 */
PFAwTnCEjsmSPoTuuC:
mov rdx, OBnBVQAJihTGFVlExs
jmp BSVM2_TrOp_RETIL
align 8
OBnBVQAJihTGFVlExs:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq HagAXhNflIdfPBttjF
	dq 0
HagAXhNflIdfPBttjF:
	dq PFAwTnCEjsmSPoTuuC
	dq OBnBVQAJihTGFVlExs
	dq HagAXhNflIdfPBttjF
	dq 0x000001DF1776C1F0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJHUFF_DecodeBlock 000000 */
BodEUOLQCUfbGkWqIt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
xor r12, r12
mov r13, [rsi+40]
mov [r13+4], r12d
xor r12, r12
mov r13, [rsi+40]
mov [r13+8], r12d
xor r12, r12
mov r13, [rsi+40]
mov [rsi+96], r13
mov [rsi+88], r12
mov [r13+12], r12d
mov eax, 0x00000004
mov [rsi+8], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, CtlGFHKwIMBJNUMqcE
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
MwcjQlCowDoKQmiDqL:
	dq BodEUOLQCUfbGkWqIt
	dq 0
	dq CtlGFHKwIMBJNUMqcE
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000016 */
QUixfACpnRffBJkJop:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+8]
mov ecx, 64
sub eax, ecx
sub ecx, [rsi+8]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, IKghPhMtkbBBNDWuJc
cmp ecx, 0
mov r10, QlDPcWLGsRCvNbufpm
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
CtlGFHKwIMBJNUMqcE:
	dq QUixfACpnRffBJkJop
	dq 0
	dq QlDPcWLGsRCvNbufpm
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 00001C */
GMEuNeGEdQNTQGCkaW:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
xor r12, r12
mov r13, [rsi+40]
mov r15, [rsi+8]
mov r14d, r15d
add r14d, 0
movsxd rcx, r14d
mov [r13+rcx*4], r12d
xor r12, r12
mov r13, [rsi+40]
mov r14d, r15d
add r14d, 1
movsxd rcx, r14d
mov [r13+rcx*4], r12d
xor r12, r12
mov r13, [rsi+40]
mov r14d, r15d
add r14d, 2
movsxd rcx, r14d
mov [r13+rcx*4], r12d
xor r12, r12
mov r13, [rsi+40]
mov r14d, r15d
add r14d, 3
mov [rsi+96], r13
mov [rsi+104], r14
mov [rsi+88], r12
movsxd rcx, r14d
mov [r13+rcx*4], r12d
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, NIVBAXLNSERWEfmPQH
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IKghPhMtkbBBNDWuJc:
	dq GMEuNeGEdQNTQGCkaW
	dq 0
	dq NIVBAXLNSERWEfmPQH
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 00003D */
EgJBqOIuUhoWDdxpEJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+8]
add eax, 4
mov [rsi+8], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CtlGFHKwIMBJNUMqcE
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NIVBAXLNSERWEfmPQH:
	dq EgJBqOIuUhoWDdxpEJ
	dq 0
	dq CtlGFHKwIMBJNUMqcE
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000044 */
MHXjSjDNpnSdKNceSE:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+88]
mov r12, rdx
mov [rsi+88], r12
mov rcx, rdi
mov rdx, MceCvhIcHtXKLqwVjE
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov rcx, rdi
mov rdx, DTFWVlKOwIxjBUmNkj
call BSVM2_Op_LEARB /* OP:0135-0000 */
mov rcx, rdi
mov rdx, NDvrEiJQSPsNGxjOOj
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+88]
mov [rsi+0], r12
mov r12, [rsi+40]
mov [rsi+88], r12
mov rax, [rsi+88]
mov edx, [rax]
mov [rsi+88], edx
mov rax, [rsi+32]
mov [rsi+96], rax
mov eax, [rsi+48]
mov [rsi+104], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, ELnVqNKsFMPHKOGbQU
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MceCvhIcHtXKLqwVjE:
	dd 0x0008000C
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000006
	dd 0x00000000
	dq 0
DTFWVlKOwIxjBUmNkj:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NDvrEiJQSPsNGxjOOj:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ELnVqNKsFMPHKOGbQU:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776C9B0
	dd 0x000001DF
	dq MjnDGBErkbxFQSJWut
	dq MjnDGBErkbxFQSJWut
	dq 0
QlDPcWLGsRCvNbufpm:
	dq MHXjSjDNpnSdKNceSE
	dq ELnVqNKsFMPHKOGbQU
	dq MjnDGBErkbxFQSJWut
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 00005B */
EsTEHcNshfuBIhgmHO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, [rsi+0]
movzxb r13d, [r13]
mov r12, [rsi+96]
mov [rsi+104], r13
imul r12d, r13d
mov r13, [rsi+88]
add r13d, r12d
mov r12, [rsi+40]
mov [rsi+96], r12
mov [rsi+88], r13
mov [r12], r13d
mov eax, 0x00000001
mov [rsi+8], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, LkuxJsELidGPJkCFGW
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
MjnDGBErkbxFQSJWut:
	dq EsTEHcNshfuBIhgmHO
	dq 0
	dq LkuxJsELidGPJkCFGW
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 00006B */
QKNjRALPkFDnKmmiWG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+8]
mov ecx, 64
sub eax, ecx
sub ecx, [rsi+8]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, AhdWiPOdMHmoPGmMER
cmp ecx, 0
mov r10, GuIEUtJrHTnlLVMDsM
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
LkuxJsELidGPJkCFGW:
	dq QKNjRALPkFDnKmmiWG
	dq 0
	dq GuIEUtJrHTnlLVMDsM
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000071 */
JXwUNpFkvOJSQNpbqf:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov [rsi+88], rax
mov eax, [rsi+56]
mov [rsi+96], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CdpQjaDgOjuTKpPmkG
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
CdpQjaDgOjuTKpPmkG:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776C840
	dd 0x000001DF
	dq HXGjQqMhfadGFNkkWR
	dq HXGjQqMhfadGFNkkWR
	dq 0
AhdWiPOdMHmoPGmMER:
	dq JXwUNpFkvOJSQNpbqf
	dq CdpQjaDgOjuTKpPmkG
	dq HXGjQqMhfadGFNkkWR
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000077 */
LUApwVNPBvJiAtujVH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+88]
mov [rsi+16], r12d
mov eax, [rsi+16]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, NGLeaxNMnuVgPiMEPF
cmp ecx, 0
mov r10, DIggPbJaMngPIAefvA
cmovg rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
HXGjQqMhfadGFNkkWR:
	dq LUApwVNPBvJiAtujVH
	dq 0
	dq DIggPbJaMngPIAefvA
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 00007E */
HhiLkHLmpdcpHggpUA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+16]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, LwdJpvPlGEtLJRFHGJ
cmp ecx, 0
mov r10, BdkFraOtnqFKPaMreU
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
NGLeaxNMnuVgPiMEPF:
	dq HhiLkHLmpdcpHggpUA
	dq 0
	dq BdkFraOtnqFKPaMreU
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000083 */
LKkQBKDtoUBhNphTRx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C81F
mov [rsi+88], rax
mov rcx, rdi
mov rdx, GrWhQXMlIClDHXILgt
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+16]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, InnFgiFLSsNGOSMnIm
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, NWKDLFQaxsQuLgVTIO
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+16]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, MeHKNCIEtkioFKaILn
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, EtCliFDAmLbxErXBcJ
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+72]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, EBiusGOWmJGfDxGNCA
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, HoKxsMHSUUELMAukWW
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+80]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, LuvFQjKIUTATJQlmKQ
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, HEiJVhAmmmGrEsexHk
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, ATcaSRKfCbJaFcOFKw
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GrWhQXMlIClDHXILgt:
	dd 0x00040004
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
InnFgiFLSsNGOSMnIm:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NWKDLFQaxsQuLgVTIO:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MeHKNCIEtkioFKaILn:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EtCliFDAmLbxErXBcJ:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
EBiusGOWmJGfDxGNCA:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HoKxsMHSUUELMAukWW:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
LuvFQjKIUTATJQlmKQ:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HEiJVhAmmmGrEsexHk:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
ATcaSRKfCbJaFcOFKw:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq GfbaqSNeEKqPApFtfR
	dq GfbaqSNeEKqPApFtfR
	dq 0
LwdJpvPlGEtLJRFHGJ:
	dq LKkQBKDtoUBhNphTRx
	dq ATcaSRKfCbJaFcOFKw
	dq GfbaqSNeEKqPApFtfR
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 0000A5 */
PbbeGkEJpHDGJkiIKN:
mov rdx, GqmLwtFcHtcICFkPSB
jmp BSVM2_TrOp_RETIC
align 8
GqmLwtFcHtcICFkPSB:
	dd 0x00000000
	dd 0x00000000
	dd 0xFFFFFFFF
	dd 0x00000000
	dq BdkFraOtnqFKPaMreU
	dq BdkFraOtnqFKPaMreU
	dq 0
GfbaqSNeEKqPApFtfR:
	dq PbbeGkEJpHDGJkiIKN
	dq GqmLwtFcHtcICFkPSB
	dq BdkFraOtnqFKPaMreU
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 0000A7 */
GAHkjBMTChNBNhswRm:
mov rdx, GuIEUtJrHTnlLVMDsM
mov rax, [rdx+0]
jmp rax
align 8
BdkFraOtnqFKPaMreU:
	dq GAHkjBMTChNBNhswRm
	dq 0
	dq GuIEUtJrHTnlLVMDsM
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 0000AA */
FfmvEsPiiifnNaEOOs:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, BtjRvBPwwfQLMHnrOE
call BSVM2_Op_SARI_LLC /* OP:01C7-0000 */
mov r12, [rsi+88]
and r12d, 15
mov eax, r12d
add eax, [rsi+8]
mov [rsi+8], eax
mov eax, [rsi+16]
and eax, 15
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, BnoDINGgxOqvNovuLK
cmp ecx, 0
mov r10, FIkUGgDndUgwANVmwC
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
BtjRvBPwwfQLMHnrOE:
	dd 0x0002000B
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000004
	dd 0x00000000
	dq 0
DIggPbJaMngPIAefvA:
	dq FfmvEsPiiifnNaEOOs
	dq 0
	dq FIkUGgDndUgwANVmwC
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 0000B9 */
PieHkNCmInanFfKTDt:
mov rdx, KBRuJAKMVDSTOOWXCG
mov rax, [rdx+0]
jmp rax
align 8
BnoDINGgxOqvNovuLK:
	dq PieHkNCmInanFfKTDt
	dq 0
	dq KBRuJAKMVDSTOOWXCG
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 0000BC */
QGTeKMPnkGaRNOGrMl:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+8]
mov ecx, 64
sub eax, ecx
sub ecx, [rsi+8]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, IlvEEUOKkQjUEERMVj
cmp ecx, 0
mov r10, MdekBFJTjOxtDaImSF
cmovl rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
FIkUGgDndUgwANVmwC:
	dq QGTeKMPnkGaRNOGrMl
	dq 0
	dq MdekBFJTjOxtDaImSF
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 0000C2 */
CgITBFIFHGwIHBDiGe:
mov rdx, GuIEUtJrHTnlLVMDsM
mov rax, [rdx+0]
jmp rax
align 8
IlvEEUOKkQjUEERMVj:
	dq CgITBFIFHGwIHBDiGe
	dq 0
	dq GuIEUtJrHTnlLVMDsM
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 0000C5 */
EGQlKSIvLMhICOHrLv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+16]
and eax, 15
mov [rsi+16], eax
mov rax, [rsi+32]
mov [rsi+88], rax
mov eax, [rsi+16]
mov [rsi+96], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PKKEJmMxXDIiBBwMvm
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
PKKEJmMxXDIiBBwMvm:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776C3F0
	dd 0x000001DF
	dq GbBvWeDpjMFPMdHkVF
	dq GbBvWeDpjMFPMdHkVF
	dq 0
MdekBFJTjOxtDaImSF:
	dq EGQlKSIvLMhICOHrLv
	dq PKKEJmMxXDIiBBwMvm
	dq GbBvWeDpjMFPMdHkVF
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 0000CF */
ChqXbNGFXPrlMGggGI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+88]
mov [rsi+24], r12d
mov r12d, [rsi+24]
mov r13d, 0x00000020
sub r13d, [rsi+16]
mov eax, r12d
mov ecx, r13d
shl eax, cl
mov r12d, eax
sar r12d, 31
mov [rsi+88], r12
mov [rsi+96], r13
mov rcx, rdi
mov rdx, IrIFfSLQdsKIGTJTgR
call BSVM2_Op_NOTI /* OP:001C-0000 */
mov r13d, 0xFFFFFFFF
mov eax, r13d
mov ecx, [rsi+16]
shl eax, cl
mov r13d, eax
inc dword r13d
mov r12, [rsi+88]
and r12d, r13d
mov eax, r12d
add eax, [rsi+24]
mov [rsi+24], eax
mov [rsi+88], r12
mov [rsi+96], r13
mov rcx, rdi
mov rdx, ONclXfEqaQHDAtxcjw
call BSVM2_Op_LDGSA /* OP:007E-0000 */
mov r13d, [rsi+8]
mov [rsi+96], r13
mov rcx, rdi
mov rdx, CSvUXxCDoosBAUgEwt
call BSVM2_Op_LDIXI /* OP:0040-0000 */
mov r12, [rsi+88]
mov [rsi+16], r12d
mov r12, [rsi+0]
mov r13d, [rsi+16]
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
imul r12d, [rsi+24]
mov r13, [rsi+40]
mov r14d, [rsi+16]
mov [rsi+96], r13
mov [rsi+104], r14
mov [rsi+88], r12
movsxd rcx, r14d
mov [r13+rcx*4], r12d
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, KBRuJAKMVDSTOOWXCG
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IrIFfSLQdsKIGTJTgR:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ONclXfEqaQHDAtxcjw:
	dd 0x00040000
	dd 0x00000000
	dd 0x0000FFFF
	dd 0x00000000
	dd 0x17782530
	dd 0x000001DF
	dq 0
CSvUXxCDoosBAUgEwt:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GbBvWeDpjMFPMdHkVF:
	dq ChqXbNGFXPrlMGggGI
	dq 0
	dq KBRuJAKMVDSTOOWXCG
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 0000FB */
OtuSxRCXdawkGUiWbd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+8]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, LkuxJsELidGPJkCFGW
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
KBRuJAKMVDSTOOWXCG:
	dq OtuSxRCXdawkGUiWbd
	dq 0
	dq LkuxJsELidGPJkCFGW
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000100 */
JmRxdeBrneWRNDdRXR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+8]
mov ecx, 64
sub eax, ecx
sub ecx, [rsi+8]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, OisLkoEiBPGNGfmJOE
cmp ecx, 0
mov r10, QJIOkbJkkVXqGRsOLO
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
GuIEUtJrHTnlLVMDsM:
	dq JmRxdeBrneWRNDdRXR
	dq 0
	dq QJIOkbJkkVXqGRsOLO
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000106 */
HJDAnEKAcJUODTcChD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C846
mov [rsi+88], rax
mov rcx, rdi
mov rdx, BiPhhwHCmbkENSlKGW
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+16]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, QGglILAnsHvBNmHJdC
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, KNIVEbLBFPoLPAGIug
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+16]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, HLPiXDIErJHwFWKQGg
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, MFBtlRFNRggoIAnRMc
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+8]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, QGhCsELfRsRhGuorrl
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, OJhSvdMEfTHnIJMNIb
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+72]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, KhJPgiMgnDVvHbKiig
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, EcucSdDHoWitPLGabn
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+80]
mov [rsi+104], r12
mov rcx, rdi
mov rdx, BDPdCmHMvCdaOWVTxc
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, FtulfoLaQBueEiJvFg
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, FjqpTHPeuHoRMPHEVK
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BiPhhwHCmbkENSlKGW:
	dd 0x00040005
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QGglILAnsHvBNmHJdC:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KNIVEbLBFPoLPAGIug:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HLPiXDIErJHwFWKQGg:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
MFBtlRFNRggoIAnRMc:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
QGhCsELfRsRhGuorrl:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OJhSvdMEfTHnIJMNIb:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
KhJPgiMgnDVvHbKiig:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EcucSdDHoWitPLGabn:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
BDPdCmHMvCdaOWVTxc:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FtulfoLaQBueEiJvFg:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000004
	dd 0x00000000
	dq 0
FjqpTHPeuHoRMPHEVK:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq EOGpUlIDQqQxCNWogI
	dq EOGpUlIDQqQxCNWogI
	dq 0
OisLkoEiBPGNGfmJOE:
	dq HJDAnEKAcJUODTcChD
	dq FjqpTHPeuHoRMPHEVK
	dq EOGpUlIDQqQxCNWogI
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 00012F */
FjFuRbOFehwaLDQJRt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C874
mov [rsi+88], rax
mov rcx, rdi
mov rdx, OsFQtvDNNKaJJqGdIs
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+16]
mov r12, rdx
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+8]
mov r14, rdx
mov [rsi+112], r14
mov rax, r12
mov rcx, r14
sub rax, rcx
mov r12, rax
mov [rsi+104], r12
mov rcx, rdi
mov rdx, KVXfroKKVBLJNFFTHR
call BSVM2_Op_CVTL2AA /* OP:0111-0000 */
mov rcx, rdi
mov rdx, NMkUJEEegTIgDlEbSx
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, BSTDeGHobVREPMJBcC
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
OsFQtvDNNKaJJqGdIs:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KVXfroKKVBLJNFFTHR:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NMkUJEEegTIgDlEbSx:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BSTDeGHobVREPMJBcC:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq OiGVppEvsgiDGAudOF
	dq OiGVppEvsgiDGAudOF
	dq 0
EOGpUlIDQqQxCNWogI:
	dq FjFuRbOFehwaLDQJRt
	dq BSTDeGHobVREPMJBcC
	dq OiGVppEvsgiDGAudOF
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000142 */
KdUFsWJUthWUGRoCFD:
mov rdx, KmJRpLHMpuGFFmIXdu
jmp BSVM2_TrOp_RETIC
align 8
KmJRpLHMpuGFFmIXdu:
	dd 0x00000000
	dd 0x00000000
	dd 0xFFFFFFFF
	dd 0x00000000
	dq QJIOkbJkkVXqGRsOLO
	dq QJIOkbJkkVXqGRsOLO
	dq 0
OiGVppEvsgiDGAudOF:
	dq KdUFsWJUthWUGRoCFD
	dq KmJRpLHMpuGFFmIXdu
	dq QJIOkbJkkVXqGRsOLO
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000144 */
HNOsIBDgnOkVOWLOjJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+8]
mov ecx, 1
sub eax, ecx
sub ecx, [rsi+8]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, HbxjrGMdAHihGiQKuj
cmp ecx, 0
mov r10, NhALTsDWGWxrAOGboP
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
QJIOkbJkkVXqGRsOLO:
	dq HNOsIBDgnOkVOWLOjJ
	dq 0
	dq NhALTsDWGWxrAOGboP
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 000149 */
KhcEhAIODqqOBxepcn:
mov rdx, LkBPHIODoucQJvpAfd
jmp BSVM2_TrOp_RETIC
align 8
LkBPHIODoucQJvpAfd:
	dd 0x00050000
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq NhALTsDWGWxrAOGboP
	dq NhALTsDWGWxrAOGboP
	dq 0
HbxjrGMdAHihGiQKuj:
	dq KhcEhAIODqqOBxepcn
	dq LkBPHIODoucQJvpAfd
	dq NhALTsDWGWxrAOGboP
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeBlock 00014B */
OdiShOIRtJJBPaSLqA:
mov rdx, NCWncVPMoBCBEOkqJO
jmp BSVM2_TrOp_RETIC
align 8
NCWncVPMoBCBEOkqJO:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq NhALTsDWGWxrAOGboP
	dq 0
NhALTsDWGWxrAOGboP:
	dq OdiShOIRtJJBPaSLqA
	dq NCWncVPMoBCBEOkqJO
	dq NhALTsDWGWxrAOGboP
	dq 0x000001DF1776CC00
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJHUFF_DecodeDiffDC 000000 */
MRsOQcFupqspJNaaea:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+16]
mov [rsi+32], rax
mov eax, [rsi+24]
mov [rsi+40], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OcggrJLoixJcLfpVqd
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
OcggrJLoixJcLfpVqd:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776C840
	dd 0x000001DF
	dq PWbSjFOJJDiSNPTKWp
	dq PWbSjFOJJDiSNPTKWp
	dq 0
JPnhmoDFiKVWGxOKAX:
	dq MRsOQcFupqspJNaaea
	dq OcggrJLoixJcLfpVqd
	dq PWbSjFOJJDiSNPTKWp
	dq 0x000001DF1776CA90
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeDiffDC 000006 */
ILmitTGdHkpmLOGGeW:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+32]
mov [rsi+0], r12d
mov rax, [rsi+16]
mov [rsi+32], rax
mov eax, [rsi+0]
mov [rsi+40], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, MHdmCXBVmIWLQawDXp
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MHdmCXBVmIWLQawDXp:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776C3F0
	dd 0x000001DF
	dq MoFfDjLLSsnWJovITb
	dq MoFfDjLLSsnWJovITb
	dq 0
PWbSjFOJJDiSNPTKWp:
	dq ILmitTGdHkpmLOGGeW
	dq MHdmCXBVmIWLQawDXp
	dq MoFfDjLLSsnWJovITb
	dq 0x000001DF1776CA90
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeDiffDC 00000E */
AtsBDiBKREQlOGNUuQ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+32]
mov [rsi+8], r12d
mov r12d, [rsi+8]
mov r13d, 0x00000020
sub r13d, [rsi+0]
mov eax, r12d
mov ecx, r13d
shl eax, cl
mov r12d, eax
sar r12d, 31
mov [rsi+32], r12
mov [rsi+40], r13
mov rcx, rdi
mov rdx, PGOBtCLSWJOCNrCnlR
call BSVM2_Op_NOTI /* OP:001C-0000 */
mov r13d, 0xFFFFFFFF
mov eax, r13d
mov ecx, [rsi+0]
shl eax, cl
mov r13d, eax
inc dword r13d
mov r12, [rsi+32]
mov [rsi+40], r13
and r12d, r13d
mov [rsi+32], r12
mov eax, r12d
add eax, [rsi+8]
mov [rsi+8], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, CkReUpBhGEGcFSctRA
add rsp, 504
jmp BSVM2_TrOp_RETIL
align 8
PGOBtCLSWJOCNrCnlR:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CkReUpBhGEGcFSctRA:
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq MoFfDjLLSsnWJovITb
	dq 0
MoFfDjLLSsnWJovITb:
	dq AtsBDiBKREQlOGNUuQ
	dq CkReUpBhGEGcFSctRA
	dq MoFfDjLLSsnWJovITb
	dq 0x000001DF1776CA90
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJHUFF_DecodeSymbol 000000 */
CueerqJOIapXPoGwTC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov r13d, 0x00000018
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r14d, edx
mov [rsi+64], r14
sub r13d, r14d
mov eax, r12d
mov ecx, r13d
shr eax, cl
mov r12d, eax
movzxb r12d, r12b
mov [rsi+0], r12d
mov [rsi+48], r12
mov [rsi+56], r13
mov rcx, rdi
mov rdx, CEtIPQGScAxuMwubWs
call BSVM2_Op_SHLI_LLC /* OP:01E6-0000 */
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+80]
mov r12, rdx
mov r14, [rsi+40]
mov r13d, r14d
or r13d, [rsi+0]
movsxd rcx, r13d
movsxw r12d, [r12+rcx*2]
mov [rsi+8], r12d
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+72]
mov r12, rdx
mov r13d, r14d
or r13d, [rsi+8]
mov [rsi+56], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+16], r12d
mov eax, [rsi+16]
mov ecx, 8
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+48], eax
mov ecx, [rsi+48]
mov rax, KkhwcCAnoOBMNewweh
cmp ecx, 0
mov r10, OrBKMuPsTfWlHVcTOl
cmovg rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
add rsp, 504
ret
align 8
CEtIPQGScAxuMwubWs:
	dd 0x00050005
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
QMClQrQDNLKEHVnJwh:
	dq CueerqJOIapXPoGwTC
	dq 0
	dq OrBKMuPsTfWlHVcTOl
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 000029 */
KrmSoNMRkoQrCExlRB:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
add r12d, [rsi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+36], edx
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
mov [rsi+48], r12
mov eax, r12d
mov ecx, 8
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+48], eax
mov ecx, [rsi+48]
mov rax, EuJkUiFSarkVHTKkxK
cmp ecx, 0
mov r10, OrppFFFuVoqfMooLcw
cmovl rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
KkhwcCAnoOBMNewweh:
	dq KrmSoNMRkoQrCExlRB
	dq 0
	dq OrppFFFuVoqfMooLcw
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 000036 */
QgIRInIdaLLAQIrNDM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov [rsi+48], r12
mov eax, [rsi+48]
shl eax, 8
mov [rsi+48], eax
mov rax, [rsi+32]
mov [rsi+56], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BqtHVgEftIHXOUgtdL
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BqtHVgEftIHXOUgtdL:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776C110
	dd 0x000001DF
	dq BNwmPsMsCjIBKPVtpQ
	dq BNwmPsMsCjIBKPVtpQ
	dq 0
EuJkUiFSarkVHTKkxK:
	dq QgIRInIdaLLAQIrNDM
	dq BqtHVgEftIHXOUgtdL
	dq BNwmPsMsCjIBKPVtpQ
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 00003E */
JPhLioJPiiBqNICeHg:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+48]
or r12d, [rsi+56]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+32], edx
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
sub r12d, 8
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+48], r12
mov edx, r12d
mov [rax+36], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, OrppFFFuVoqfMooLcw
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
BNwmPsMsCjIBKPVtpQ:
	dq JPhLioJPiiBqNICeHg
	dq 0
	dq OrppFFFuVoqfMooLcw
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 000048 */
IHRvrgFLOTqWEVEEnI:
mov rdx, DxeatKBkswpmBAtBnW
jmp BSVM2_TrOp_RETIL
align 8
DxeatKBkswpmBAtBnW:
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq OrBKMuPsTfWlHVcTOl
	dq OrBKMuPsTfWlHVcTOl
	dq 0
OrppFFFuVoqfMooLcw:
	dq IHRvrgFLOTqWEVEEnI
	dq DxeatKBkswpmBAtBnW
	dq OrBKMuPsTfWlHVcTOl
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 00004A */
JJcJdTCdExlUOQJseO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov r13d, 0x00000010
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r14d, edx
mov [rsi+64], r14
sub r13d, r14d
mov [rsi+56], r13
mov eax, r12d
mov ecx, r13d
shr eax, cl
mov r12d, eax
movzxw r12d, r12w
mov [rsi+48], r12
mov [rsi+0], r12d
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, BHVgqmJOdcqLHrqtDE
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OrBKMuPsTfWlHVcTOl:
	dq JJcJdTCdExlUOQJseO
	dq 0
	dq BHVgqmJOdcqLHrqtDE
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 000058 */
CjfKjDIasNkhJftEjA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+40]
or eax, [rsi+8]
mov [rsi+24], eax
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+72]
mov r12, rdx
mov r13d, [rsi+24]
mov [rsi+56], r13
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov [rsi+16], r12d
mov eax, [rsi+16]
mov [rsi+48], eax
mov ecx, [rsi+48]
mov rax, CMSXnlNmsbieGOTHVv
cmp ecx, 0
mov r10, HaVhnaCKlqLkMIOvHp
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
BHVgqmJOdcqLHrqtDE:
	dq CjfKjDIasNkhJftEjA
	dq 0
	dq HaVhnaCKlqLkMIOvHp
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 000069 */
InEWbOHPJGTHETVNsw:
mov rdx, FUqolXNdRBkuCRTfUM
mov rax, [rdx+0]
jmp rax
align 8
CMSXnlNmsbieGOTHVv:
	dq InEWbOHPJGTHETVNsw
	dq 0
	dq FUqolXNdRBkuCRTfUM
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 00006C */
JQWlWTAIpiakQRoAXL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r13d, [rsi+0]
mov r12d, 0x00000010
sub r12d, [rsi+16]
mov [rsi+48], r13
mov eax, r13d
mov ecx, r12d
sar eax, cl
mov [rsi+48], eax
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+48]
mov r12, rdx
mov r13d, [rsi+24]
mov [rsi+56], r12
mov [rsi+64], r13
mov rax, r12
movsxd rcx, r13d
movzxw edx, [rax+rcx*2]
mov [rsi+56], edx
mov ecx, [rsi+48]
mov rax, PxEJFpBkcDqbQGpsGK
cmp ecx, [rsi+56]
mov r10, FiLWioEHgtnALNSNDn
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
HaVhnaCKlqLkMIOvHp:
	dq JQWlWTAIpiakQRoAXL
	dq 0
	dq FiLWioEHgtnALNSNDn
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 00007E */
FVIviDKMWGdgIArRgu:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+64]
mov r12, rdx
mov r13d, [rsi+24]
mov [rsi+56], r13
movsxd rcx, r13d
movsxw r12d, [r12+rcx*2]
mov [rsi+8], r12d
mov eax, [rsi+8]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+8]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+48], eax
mov ecx, [rsi+48]
mov rax, MhjaIePLaxnoIIgnrb
cmp ecx, 0
mov r10, QSvnnGCXQKaELBLVBi
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
PxEJFpBkcDqbQGpsGK:
	dq FVIviDKMWGdgIArRgu
	dq 0
	dq QSvnnGCXQKaELBLVBi
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 00008B */
QVpkxPCdNaSFJgMnhW:
mov rdx, FUqolXNdRBkuCRTfUM
mov rax, [rdx+0]
jmp rax
align 8
MhjaIePLaxnoIIgnrb:
	dq QVpkxPCdNaSFJgMnhW
	dq 0
	dq FUqolXNdRBkuCRTfUM
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 00008E */
DWGLogGxFTiSNXRUNB:
mov rdx, BHVgqmJOdcqLHrqtDE
mov rax, [rdx+0]
jmp rax
align 8
QSvnnGCXQKaELBLVBi:
	dq DWGLogGxFTiSNXRUNB
	dq 0
	dq BHVgqmJOdcqLHrqtDE
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 000091 */
DlGOTFDeaMpuNWGOTJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
add r12d, [rsi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+48], r12
mov edx, r12d
mov [rax+36], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KPjsArGHLKVUCmEEUJ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FiLWioEHgtnALNSNDn:
	dq DlGOTFDeaMpuNWGOTJ
	dq 0
	dq KPjsArGHLKVUCmEEUJ
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 000098 */
AoARmnNfHUUaCiAmig:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
mov [rsi+48], r12
mov eax, r12d
mov ecx, 8
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+48], eax
mov ecx, [rsi+48]
mov rax, HxtTcLPaMDgpGMHjAk
cmp ecx, 0
mov r10, LFmgNdPdJmwILNcOSt
cmovl rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
KPjsArGHLKVUCmEEUJ:
	dq AoARmnNfHUUaCiAmig
	dq 0
	dq LFmgNdPdJmwILNcOSt
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 00009F */
OvDCksEqEtLaEcUQFo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov [rsi+48], r12
mov eax, [rsi+48]
shl eax, 8
mov [rsi+48], eax
mov rax, [rsi+32]
mov [rsi+56], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BQRwnoKPMKWWIEOoPp
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BQRwnoKPMKWWIEOoPp:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776C110
	dd 0x000001DF
	dq AwDvcuEBHPIPCxoOGK
	dq AwDvcuEBHPIPCxoOGK
	dq 0
HxtTcLPaMDgpGMHjAk:
	dq OvDCksEqEtLaEcUQFo
	dq BQRwnoKPMKWWIEOoPp
	dq AwDvcuEBHPIPCxoOGK
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 0000A7 */
OjmDsxMqsNUlFsTaEa:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+48]
or r12d, [rsi+56]
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+32], edx
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
sub r12d, 8
mov rax, [rsi+32]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+48], r12
mov edx, r12d
mov [rax+36], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, KPjsArGHLKVUCmEEUJ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
AwDvcuEBHPIPCxoOGK:
	dq OjmDsxMqsNUlFsTaEa
	dq 0
	dq KPjsArGHLKVUCmEEUJ
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 0000B3 */
EvVxktKqOsmWPpRjxD:
mov rdx, IGhjreHscnrRNfgXFM
jmp BSVM2_TrOp_RETIL
align 8
IGhjreHscnrRNfgXFM:
	dd 0x00000001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq GxnXGWEIxIWHLSpmQX
	dq GxnXGWEIxIWHLSpmQX
	dq 0
LFmgNdPdJmwILNcOSt:
	dq EvVxktKqOsmWPpRjxD
	dq IGhjreHscnrRNfgXFM
	dq GxnXGWEIxIWHLSpmQX
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 0000B5 */
PnxpTiOhSNwrDmJNLv:
mov rdx, BHVgqmJOdcqLHrqtDE
mov rax, [rdx+0]
jmp rax
align 8
GxnXGWEIxIWHLSpmQX:
	dq PnxpTiOhSNwrDmJNLv
	dq 0
	dq BHVgqmJOdcqLHrqtDE
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_DecodeSymbol 0000B8 */
DiwOwvQCKxpDFQlLqR:
mov rdx, BXsDUFJFUcJkCflJeJ
jmp BSVM2_TrOp_RETIC
align 8
BXsDUFJFUcJkCflJeJ:
	dd 0x00000000
	dd 0x00000000
	dd 0xFFFFFFFF
	dd 0x00000000
	dq 0
	dq FUqolXNdRBkuCRTfUM
	dq 0
FUqolXNdRBkuCRTfUM:
	dq DiwOwvQCKxpDFQlLqR
	dq BXsDUFJFUcJkCflJeJ
	dq FUqolXNdRBkuCRTfUM
	dq 0x000001DF1776C920
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJHUFF_ReadNBits 000000 */
MeXIbOOTdxANNAmgjU:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+16]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+24], eax
mov ecx, [rsi+24]
mov rax, IHgHoNGevHmRESfqrh
cmp ecx, 0
mov r10, QNHPSoEJEpunAfRKUB
cmovg rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
OPEnBFQqGKRlPWgOjj:
	dq MeXIbOOTdxANNAmgjU
	dq 0
	dq QNHPSoEJEpunAfRKUB
	dq 0x000001DF1776C4D0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_ReadNBits 000005 */
FBXNuqMFMTfWQJhJmh:
mov rdx, JQBRpvPXTHcBQOPfnf
jmp BSVM2_TrOp_RETIC
align 8
JQBRpvPXTHcBQOPfnf:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq QNHPSoEJEpunAfRKUB
	dq QNHPSoEJEpunAfRKUB
	dq 0
IHgHoNGevHmRESfqrh:
	dq FBXNuqMFMTfWQJhJmh
	dq JQBRpvPXTHcBQOPfnf
	dq QNHPSoEJEpunAfRKUB
	dq 0x000001DF1776C4D0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_ReadNBits 000007 */
EWkQLIHHcMKHKSQANc:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov r13d, 0x00000020
sub r13d, [rsi+16]
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r14d, edx
mov [rsi+40], r14
sub r13d, r14d
mov eax, r12d
mov ecx, r13d
shr eax, cl
mov r12d, eax
mov r13d, 0x00000001
mov eax, r13d
mov ecx, [rsi+16]
shl eax, cl
mov r13d, eax
dec dword r13d
mov [rsi+32], r13
and r12d, r13d
mov [rsi+0], r12d
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
add r12d, [rsi+16]
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+36], edx
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
mov [rsi+24], r12
mov eax, r12d
mov ecx, 8
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+24], eax
mov ecx, [rsi+24]
mov rax, JAftigIPfOHJEwdKER
cmp ecx, 0
mov r10, LxADrtAvMLNgDTcttQ
cmovl rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
QNHPSoEJEpunAfRKUB:
	dq EWkQLIHHcMKHKSQANc
	dq 0
	dq LxADrtAvMLNgDTcttQ
	dq 0x000001DF1776C4D0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_ReadNBits 000028 */
BLCHnFJfumKmOlbrxQ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov [rsi+24], r12
mov eax, [rsi+24]
shl eax, 8
mov [rsi+24], eax
mov rax, [rsi+8]
mov [rsi+32], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BtIBVeKtOIKgNJigbl
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BtIBVeKtOIKgNJigbl:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776C110
	dd 0x000001DF
	dq NqWUkcPMXpqaNgwbFp
	dq NqWUkcPMXpqaNgwbFp
	dq 0
JAftigIPfOHJEwdKER:
	dq BLCHnFJfumKmOlbrxQ
	dq BtIBVeKtOIKgNJigbl
	dq NqWUkcPMXpqaNgwbFp
	dq 0x000001DF1776C4D0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_ReadNBits 000030 */
EBdNjUKTFvrRHrPWrp:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+24]
or r12d, [rsi+32]
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+32], edx
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
sub r12d, 8
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+24], r12
mov edx, r12d
mov [rax+36], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, MVHOSePcupLWBmJouf
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NqWUkcPMXpqaNgwbFp:
	dq EBdNjUKTFvrRHrPWrp
	dq 0
	dq MVHOSePcupLWBmJouf
	dq 0x000001DF1776C4D0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_ReadNBits 00003A */
ElKvTJMtqOgLECnqOc:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
mov [rsi+24], r12
mov eax, r12d
mov ecx, 8
sub eax, ecx
sub ecx, r12d
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+24], eax
mov ecx, [rsi+24]
mov rax, PfJFOiIkeBxpFdxqMR
cmp ecx, 0
mov r10, LxADrtAvMLNgDTcttQ
cmovl rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
MVHOSePcupLWBmJouf:
	dq ElKvTJMtqOgLECnqOc
	dq 0
	dq LxADrtAvMLNgDTcttQ
	dq 0x000001DF1776C4D0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_ReadNBits 000041 */
MLnKSBFEDNrIBrmNVc:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+32]
mov r12d, edx
mov [rsi+24], r12
mov eax, [rsi+24]
shl eax, 8
mov [rsi+24], eax
mov rax, [rsi+8]
mov [rsi+32], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JCwlrjKTPuPoKQaHWB
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
JCwlrjKTPuPoKQaHWB:
	dd 0x00000000
	dd 0x00010001
	dd 0x1776C110
	dd 0x000001DF
	dq JSdcUQFMGvlUGNDMvO
	dq JSdcUQFMGvlUGNDMvO
	dq 0
PfJFOiIkeBxpFdxqMR:
	dq MLnKSBFEDNrIBrmNVc
	dq JCwlrjKTPuPoKQaHWB
	dq JSdcUQFMGvlUGNDMvO
	dq 0x000001DF1776C4D0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_ReadNBits 000049 */
LCedKdAqoLuWPaDgsW:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+24]
or r12d, [rsi+32]
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, r12d
mov [rax+32], edx
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+36]
mov r12d, edx
sub r12d, 8
mov rax, [rsi+8]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov [rsi+24], r12
mov edx, r12d
mov [rax+36], edx
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, MVHOSePcupLWBmJouf
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JSdcUQFMGvlUGNDMvO:
	dq LCedKdAqoLuWPaDgsW
	dq 0
	dq MVHOSePcupLWBmJouf
	dq 0x000001DF1776C4D0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJHUFF_ReadNBits 000055 */
QjTEtuGvWkxqNPkAwn:
mov rdx, PREpnkPTjUHONMIlXH
jmp BSVM2_TrOp_RETIL
align 8
PREpnkPTjUHONMIlXH:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq LxADrtAvMLNgDTcttQ
	dq 0
LxADrtAvMLNgDTcttQ:
	dq QjTEtuGvWkxqNPkAwn
	dq PREpnkPTjUHONMIlXH
	dq LxADrtAvMLNgDTcttQ
	dq 0x000001DF1776C4D0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_TransIDCT 000000 */
FMBaXbFhNpFdFgoIhC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, BawFpwEAIlxNEnHCai
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov rcx, rdi
mov rdx, JGoPAWOtkIxWFmoMdI
call BSVM2_Op_IFXARR_IC /* OP:0141-0000 */
mov eax, [rsi+80]
mov ecx, 2
sub eax, ecx
sub ecx, [rsi+80]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, FWheinOrAQAnKnrtwt
cmp ecx, 0
mov r10, QcMvhLLlfmiPHLMhqL
cmovne rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
BawFpwEAIlxNEnHCai:
	dd 0x00000040
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JGoPAWOtkIxWFmoMdI:
	dd 0x00010040
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
HLjsJrDnTAJIOhrCxK:
	dq FMBaXbFhNpFdFgoIhC
	dq 0
	dq QcMvhLLlfmiPHLMhqL
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 000010 */
CumOwXHIhGUqNCJWlb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov r12d, [r12]
imul r12d, 8281
add r12d, 32768
sar r12d, 16
add r12d, [rsi+72]
mov [rsi+48], r12d
mov rax, [rsi+64]
mov [rsi+16], rax
mov r12, [rsi+16]
lea r12, [r12+256]
mov [rsi+88], r12
mov [rsi+24], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, OKCmgrPwQrkMFpWGVk
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FWheinOrAQAnKnrtwt:
	dq CumOwXHIhGUqNCJWlb
	dq 0
	dq OKCmgrPwQrkMFpWGVk
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 00002F */
KUGDfVBlCrINBpDMnD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+16]
mov r13, [rsi+24]
mov [rsi+88], r12
mov [rsi+96], r13
mov rax, r12
mov rcx, r13
sub rax, rcx
sub rcx, r12
sar rax, 63
shr rcx, 63
or eax, ecx
mov [rsi+88], eax
mov ecx, [rsi+88]
mov rax, AdjsmCAjGIVtFltFRT
cmp ecx, 0
mov r10, LqwvrUIiukesMkdrtT
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
OKCmgrPwQrkMFpWGVk:
	dq KUGDfVBlCrINBpDMnD
	dq 0
	dq LqwvrUIiukesMkdrtT
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 000038 */
JGgLUSIMVAtLOUhxaK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+4], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+8], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+12], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+16], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+20], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+24], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+28], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+32], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+36], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+40], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+44], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+48], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+52], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [r13+56], r12d
mov r12d, [rsi+48]
mov r13, [rsi+16]
mov [rsi+96], r13
mov [r13+60], r12d
mov r12, [rsi+16]
lea r12, [r12+64]
mov [rsi+88], r12
mov [rsi+16], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, OKCmgrPwQrkMFpWGVk
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
AdjsmCAjGIVtFltFRT:
	dq JGgLUSIMVAtLOUhxaK
	dq 0
	dq OKCmgrPwQrkMFpWGVk
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 0000B3 */
BfepidHefHQNOUXOCX:
mov rdx, GECCVNHhqjNKPBIaWo
mov rax, [rdx+0]
jmp rax
align 8
LqwvrUIiukesMkdrtT:
	dq BfepidHefHQNOUXOCX
	dq 0
	dq GECCVNHhqjNKPBIaWo
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 0000B6 */
KVPRtmDuvCcQPMmqQV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+88], r12
mov rax, [rsi+88]
lea rdx, [rax+0]
mov [rsi+88], rdx
mov r12, [rsi+0]
mov [rsi+96], r12
mov rcx, rdi
mov rdx, EhwsMDFgiNQeADcOtF
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, IfqsjFEvJTbiDLPRJk
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GnrJXoJAecjdPICJqh
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
EhwsMDFgiNQeADcOtF:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IfqsjFEvJTbiDLPRJk:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GnrJXoJAecjdPICJqh:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BB50
	dd 0x000001DF
	dq AFcqvKLjaDWbJdbpEc
	dq AFcqvKLjaDWbJdbpEc
	dq 0
QcMvhLLlfmiPHLMhqL:
	dq KVPRtmDuvCcQPMmqQV
	dq GnrJXoJAecjdPICJqh
	dq AFcqvKLjaDWbJdbpEc
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 0000C5 */
IamNhOFQkDFjLxCjXj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+88], r12
mov rax, [rsi+88]
lea rdx, [rax+32]
mov [rsi+88], rdx
mov r12, [rsi+0]
mov [rsi+96], r12
mov rcx, rdi
mov rdx, APREXBBJPmQTHnFHno
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, IFVxTgPVkJpuFxQUWE
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KbuCFvPFCnKDEpPAWE
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
APREXBBJPmQTHnFHno:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
IFVxTgPVkJpuFxQUWE:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KbuCFvPFCnKDEpPAWE:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BB50
	dd 0x000001DF
	dq FjOcMcErvHWoFGMxCV
	dq FjOcMcErvHWoFGMxCV
	dq 0
AFcqvKLjaDWbJdbpEc:
	dq IamNhOFQkDFjLxCjXj
	dq KbuCFvPFCnKDEpPAWE
	dq FjOcMcErvHWoFGMxCV
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 0000D4 */
KaLIiiKPxjwfIOIASC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+88], r12
mov rax, [rsi+88]
lea rdx, [rax+64]
mov [rsi+88], rdx
mov r12, [rsi+0]
mov [rsi+96], r12
mov rcx, rdi
mov rdx, JmCGILOdcelhDBiGkQ
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, ABTmeePJJXbLBbWarh
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, QlJiphQSidxrBeXqvT
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
JmCGILOdcelhDBiGkQ:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000010
	dd 0x00000000
	dq 0
ABTmeePJJXbLBbWarh:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
QlJiphQSidxrBeXqvT:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BB50
	dd 0x000001DF
	dq FlBuSgElnBNdQUNrAd
	dq FlBuSgElnBNdQUNrAd
	dq 0
FjOcMcErvHWoFGMxCV:
	dq KaLIiiKPxjwfIOIASC
	dq QlJiphQSidxrBeXqvT
	dq FlBuSgElnBNdQUNrAd
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 0000E3 */
AAigklLgBxnjATESQS:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+88], r12
mov rax, [rsi+88]
lea rdx, [rax+96]
mov [rsi+88], rdx
mov r12, [rsi+0]
mov [rsi+96], r12
mov rcx, rdi
mov rdx, AnGaWwIHEvjKDxoXHV
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, BDGnIGEPJCerKaMtgA
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KrreglIrxeSnQWiIUw
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AnGaWwIHEvjKDxoXHV:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000018
	dd 0x00000000
	dq 0
BDGnIGEPJCerKaMtgA:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
KrreglIrxeSnQWiIUw:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BB50
	dd 0x000001DF
	dq LWTIhuFOINpBHCpHwN
	dq LWTIhuFOINpBHCpHwN
	dq 0
FlBuSgElnBNdQUNrAd:
	dq AAigklLgBxnjATESQS
	dq KrreglIrxeSnQWiIUw
	dq LWTIhuFOINpBHCpHwN
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 0000F2 */
HpcAovOxhgPNANcLVO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+88], r12
mov rax, [rsi+88]
lea rdx, [rax+128]
mov [rsi+88], rdx
mov r12, [rsi+0]
mov [rsi+96], r12
mov rcx, rdi
mov rdx, GJAnDgMxqIGlFEsLSB
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, EIMIBuBQoqCqFNQpqh
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DiCvLkOToRgsPAnrPU
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GJAnDgMxqIGlFEsLSB:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000020
	dd 0x00000000
	dq 0
EIMIBuBQoqCqFNQpqh:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DiCvLkOToRgsPAnrPU:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BB50
	dd 0x000001DF
	dq PvFgoLBTLbpEGbkIoD
	dq PvFgoLBTLbpEGbkIoD
	dq 0
LWTIhuFOINpBHCpHwN:
	dq HpcAovOxhgPNANcLVO
	dq DiCvLkOToRgsPAnrPU
	dq PvFgoLBTLbpEGbkIoD
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 000101 */
MISkSSNOHWFoJqFBgi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+88], r12
mov rax, [rsi+88]
lea rdx, [rax+160]
mov [rsi+88], rdx
mov r12, [rsi+0]
mov [rsi+96], r12
mov rcx, rdi
mov rdx, AgKXmBBaLOxAQiEVOU
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, HaijttHUeJDNPktqIV
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FcpIxTOxvwPjMdTdBU
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
AgKXmBBaLOxAQiEVOU:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000028
	dd 0x00000000
	dq 0
HaijttHUeJDNPktqIV:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FcpIxTOxvwPjMdTdBU:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BB50
	dd 0x000001DF
	dq JVMSrbFFdaBFMVgcsb
	dq JVMSrbFFdaBFMVgcsb
	dq 0
PvFgoLBTLbpEGbkIoD:
	dq MISkSSNOHWFoJqFBgi
	dq FcpIxTOxvwPjMdTdBU
	dq JVMSrbFFdaBFMVgcsb
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 000110 */
GqVqFTNBmmuvDmwvLp:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+88], r12
mov rax, [rsi+88]
lea rdx, [rax+192]
mov [rsi+88], rdx
mov r12, [rsi+0]
mov [rsi+96], r12
mov rcx, rdi
mov rdx, DXJMMtHhNABVLvBfFW
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, IskSFmFlPPIACXIeVD
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OSXAPqFocmKSClcPlB
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DXJMMtHhNABVLvBfFW:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000030
	dd 0x00000000
	dq 0
IskSFmFlPPIACXIeVD:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OSXAPqFocmKSClcPlB:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BB50
	dd 0x000001DF
	dq FdFboVCmeWjhCAjjOc
	dq FdFboVCmeWjhCAjjOc
	dq 0
JVMSrbFFdaBFMVgcsb:
	dq GqVqFTNBmmuvDmwvLp
	dq OSXAPqFocmKSClcPlB
	dq FdFboVCmeWjhCAjjOc
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 00011F */
GNtdGECIcciwIGfIRk:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+88], r12
mov rax, [rsi+88]
lea rdx, [rax+224]
mov [rsi+88], rdx
mov r12, [rsi+0]
mov [rsi+96], r12
mov rcx, rdi
mov rdx, HnlsnDGSlFlwBkEvHm
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, FUhLovCdaEfiLlOBtS
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FOPaixJqlssBMfVdck
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
HnlsnDGSlFlwBkEvHm:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000038
	dd 0x00000000
	dq 0
FUhLovCdaEfiLlOBtS:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FOPaixJqlssBMfVdck:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BB50
	dd 0x000001DF
	dq OEHIJpCKQMNiAlLMPe
	dq OEHIJpCKQMNiAlLMPe
	dq 0
FdFboVCmeWjhCAjjOc:
	dq GNtdGECIcciwIGfIRk
	dq FOPaixJqlssBMfVdck
	dq OEHIJpCKQMNiAlLMPe
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 00012E */
OBUnEsQOexVdInBUuL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, DtMmWaAeADKnEJxHnc
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, EsNnKACrvXSaPomDfO
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+64]
mov [rsi+96], r12
mov rax, [rsi+96]
lea rdx, [rax+0]
mov [rsi+96], rdx
mov eax, [rsi+72]
mov [rsi+104], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, ETSHbjOgaSJRLAQcgt
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DtMmWaAeADKnEJxHnc:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
EsNnKACrvXSaPomDfO:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ETSHbjOgaSJRLAQcgt:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BE30
	dd 0x000001DF
	dq FxWAelCvLCeSIlsmtS
	dq FxWAelCvLCeSIlsmtS
	dq 0
OEHIJpCKQMNiAlLMPe:
	dq OBUnEsQOexVdInBUuL
	dq ETSHbjOgaSJRLAQcgt
	dq FxWAelCvLCeSIlsmtS
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 00013F */
BmkFRKPJPatXIxEUqA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, GvSsgNAsGCjQISBxeX
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, DSdjKIFBKqOxFqBDjg
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+64]
mov [rsi+96], r12
mov rax, [rsi+96]
lea rdx, [rax+4]
mov [rsi+96], rdx
mov eax, [rsi+72]
mov [rsi+104], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PhARumOlOPBUKguchr
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
GvSsgNAsGCjQISBxeX:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
DSdjKIFBKqOxFqBDjg:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PhARumOlOPBUKguchr:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BE30
	dd 0x000001DF
	dq KtwvjRAgNCtjGCGrej
	dq KtwvjRAgNCtjGCGrej
	dq 0
FxWAelCvLCeSIlsmtS:
	dq BmkFRKPJPatXIxEUqA
	dq PhARumOlOPBUKguchr
	dq KtwvjRAgNCtjGCGrej
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 000150 */
PITipTGQWfcNJkVXqf:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, QfreuqEOvInFPolwoe
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, KFjSrRDnxsUnMTpTHW
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+64]
mov [rsi+96], r12
mov rax, [rsi+96]
lea rdx, [rax+8]
mov [rsi+96], rdx
mov eax, [rsi+72]
mov [rsi+104], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, JLGwELCmdiaaMckvEq
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
QfreuqEOvInFPolwoe:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
KFjSrRDnxsUnMTpTHW:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JLGwELCmdiaaMckvEq:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BE30
	dd 0x000001DF
	dq IcFCXCQDDiMpGBUUFg
	dq IcFCXCQDDiMpGBUUFg
	dq 0
KtwvjRAgNCtjGCGrej:
	dq PITipTGQWfcNJkVXqf
	dq JLGwELCmdiaaMckvEq
	dq IcFCXCQDDiMpGBUUFg
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 000161 */
IUsgedLbsAroKscFbV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, QRLxlLBGEdguCNNdEP
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, QDvcpCBsUbxiOooMwW
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+64]
mov [rsi+96], r12
mov rax, [rsi+96]
lea rdx, [rax+12]
mov [rsi+96], rdx
mov eax, [rsi+72]
mov [rsi+104], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BeMIFSMFGUFUEjVCwB
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
QRLxlLBGEdguCNNdEP:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
QDvcpCBsUbxiOooMwW:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
BeMIFSMFGUFUEjVCwB:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BE30
	dd 0x000001DF
	dq MpNkFXBxnRFjKBeEJr
	dq MpNkFXBxnRFjKBeEJr
	dq 0
IcFCXCQDDiMpGBUUFg:
	dq IUsgedLbsAroKscFbV
	dq BeMIFSMFGUFUEjVCwB
	dq MpNkFXBxnRFjKBeEJr
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 000172 */
CHJoJiBdKHekIvcHTN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, IBLVdqDvAKvcGBnKAb
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, PstRarCrfpVgOWLrEA
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+64]
mov [rsi+96], r12
mov rax, [rsi+96]
lea rdx, [rax+16]
mov [rsi+96], rdx
mov eax, [rsi+72]
mov [rsi+104], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GDqdJvDjQPmMAglGrL
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
IBLVdqDvAKvcGBnKAb:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000004
	dd 0x00000000
	dq 0
PstRarCrfpVgOWLrEA:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GDqdJvDjQPmMAglGrL:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BE30
	dd 0x000001DF
	dq KaIbbOKRXnvhNqIjii
	dq KaIbbOKRXnvhNqIjii
	dq 0
MpNkFXBxnRFjKBeEJr:
	dq CHJoJiBdKHekIvcHTN
	dq GDqdJvDjQPmMAglGrL
	dq KaIbbOKRXnvhNqIjii
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 000183 */
GUTXMOFCjoppCifkRn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, DDFshSEpmwTMOQNKum
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, KEqSHRNOeRBIDUXTDx
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+64]
mov [rsi+96], r12
mov rax, [rsi+96]
lea rdx, [rax+20]
mov [rsi+96], rdx
mov eax, [rsi+72]
mov [rsi+104], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FXNwlbLhvMiELtkpGX
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DDFshSEpmwTMOQNKum:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000005
	dd 0x00000000
	dq 0
KEqSHRNOeRBIDUXTDx:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FXNwlbLhvMiELtkpGX:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BE30
	dd 0x000001DF
	dq GWUTuPFSAOoLDHoCEf
	dq GWUTuPFSAOoLDHoCEf
	dq 0
KaIbbOKRXnvhNqIjii:
	dq GUTXMOFCjoppCifkRn
	dq FXNwlbLhvMiELtkpGX
	dq GWUTuPFSAOoLDHoCEf
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 000194 */
MIxTHRQnXIsOMRewDw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, QMofNoNwrGHeDwVkEB
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, MoEadIGhNcCVMGCxpi
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+64]
mov [rsi+96], r12
mov rax, [rsi+96]
lea rdx, [rax+24]
mov [rsi+96], rdx
mov eax, [rsi+72]
mov [rsi+104], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OUrOoNNMrPsSCJbokv
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
QMofNoNwrGHeDwVkEB:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000006
	dd 0x00000000
	dq 0
MoEadIGhNcCVMGCxpi:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
OUrOoNNMrPsSCJbokv:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BE30
	dd 0x000001DF
	dq IoeuOTEdbMrXNuhVrP
	dq IoeuOTEdbMrXNuhVrP
	dq 0
GWUTuPFSAOoLDHoCEf:
	dq MIxTHRQnXIsOMRewDw
	dq OUrOoNNMrPsSCJbokv
	dq IoeuOTEdbMrXNuhVrP
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 0001A5 */
MDuLCjChNwaWGNSukL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, BeFTmCJxBAqHKmocVD
call BSVM2_Op_LEARIC /* OP:0138-0000 */
mov rcx, rdi
mov rdx, BvihXTENAjcfMUTHvU
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+64]
mov [rsi+96], r12
mov rax, [rsi+96]
lea rdx, [rax+28]
mov [rsi+96], rdx
mov eax, [rsi+72]
mov [rsi+104], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, AELQsTLNFMxaHoWwhE
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
BeFTmCJxBAqHKmocVD:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000007
	dd 0x00000000
	dq 0
BvihXTENAjcfMUTHvU:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AELQsTLNFMxaHoWwhE:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776BE30
	dd 0x000001DF
	dq FlHcqqLBkeJRNJPNwj
	dq FlHcqqLBkeJRNJPNwj
	dq 0
IoeuOTEdbMrXNuhVrP:
	dq MDuLCjChNwaWGNSukL
	dq AELQsTLNFMxaHoWwhE
	dq FlHcqqLBkeJRNJPNwj
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 0001B6 */
KHnLdqHDapKjBVHapl:
mov rdx, GECCVNHhqjNKPBIaWo
mov rax, [rdx+0]
jmp rax
align 8
FlHcqqLBkeJRNJPNwj:
	dq KHnLdqHDapKjBVHapl
	dq 0
	dq GECCVNHhqjNKPBIaWo
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_TransIDCT 0001B8 */
ITCFmxQpAPPBEWqWWb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdx, CiPXJMCpIHdiCfgCvD
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdx, GXHxjPOWhaxxBcmstf
call BSVM2_Op_DFXARR /* OP:0143-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NeIDSGGkHIJuCXdQlH
add rsp, 504
jmp BSVM2_TrOp_RETV
align 8
CiPXJMCpIHdiCfgCvD:
	dd 0x00000040
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GXHxjPOWhaxxBcmstf:
	dd 0x00010040
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NeIDSGGkHIJuCXdQlH:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq GECCVNHhqjNKPBIaWo
	dq 0
GECCVNHhqjNKPBIaWo:
	dq ITCFmxQpAPPBEWqWWb
	dq NeIDSGGkHIJuCXdQlH
	dq GECCVNHhqjNKPBIaWo
	dq 0x000001DF1776C080
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_CopyOutBlock8B 000000 */
BJmawSMHiDiCKPBqMk:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+144]
add eax, 8
mov [rsi+160], eax
mov eax, [rsi+128]
mov [rsi+168], eax
mov ecx, [rsi+160]
mov rax, FXRNiFBisjFeCOGcrG
cmp ecx, [rsi+168]
mov r10, QpGSnJDODUKMNehjFF
cmovg rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
BlhAQgHvOQhfLKhxNc:
	dq BJmawSMHiDiCKPBqMk
	dq 0
	dq QpGSnJDODUKMNehjFF
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00000A */
CaQOrMALnNBLNRfwvn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+152]
add eax, 8
mov [rsi+160], eax
mov eax, [rsi+136]
mov [rsi+168], eax
mov ecx, [rsi+160]
mov rax, QpGSnJDODUKMNehjFF
cmp ecx, [rsi+168]
mov r10, IMFHQQQLBgiXBufsot
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
FXRNiFBisjFeCOGcrG:
	dq CaQOrMALnNBLNRfwvn
	dq 0
	dq IMFHQQQLBgiXBufsot
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000014 */
EnsgbCPPXRMxLLGDsS:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+80], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LqIQjMDCNIuiCpxGQc
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QpGSnJDODUKMNehjFF:
	dq EnsgbCPPXRMxLLGDsS
	dq 0
	dq LqIQjMDCNIuiCpxGQc
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000019 */
LUdhEpIuxnSaNcdPNo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+80]
mov ecx, 8
sub eax, ecx
sub ecx, [rsi+80]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, CaqlxlITTXogHtFSNn
cmp ecx, 0
mov r10, MRvoQBGQrwKDGKIHPL
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
LqIQjMDCNIuiCpxGQc:
	dq LUdhEpIuxnSaNcdPNo
	dq 0
	dq MRvoQBGQrwKDGKIHPL
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00001F */
HmkwfPEmdEMkMbAqhn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+152]
add eax, [rsi+80]
mov [rsi+160], eax
mov eax, [rsi+136]
mov [rsi+168], eax
mov ecx, [rsi+160]
mov rax, BDFPOSOErWDlFkwFjC
cmp ecx, [rsi+168]
mov r10, KrCoNXBcSFNOEhKgxA
cmovl rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
CaqlxlITTXogHtFSNn:
	dq HmkwfPEmdEMkMbAqhn
	dq 0
	dq KrCoNXBcSFNOEhKgxA
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000029 */
OwGvfgMVGlhBAhDFNF:
mov rdx, QpqOLXFmPHlTMkbstp
mov rax, [rdx+0]
jmp rax
align 8
BDFPOSOErWDlFkwFjC:
	dq OwGvfgMVGlhBAhDFNF
	dq 0
	dq QpqOLXFmPHlTMkbstp
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00002C */
NOtOFjMLPnKHAULvXP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+112]
mov [rsi+160], r12
mov rcx, rdi
mov rdx, IOKapFNLQsdEAViqlo
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+160]
mov r13, [rsi+168]
movsxd rcx, r13d
lea r12, [r12+rcx*4]
mov [rsi+0], r12
mov r12, [rsi+120]
mov r13d, [rsi+152]
add r13d, [rsi+80]
imul r13d, [rsi+128]
movsxd rcx, r13d
lea r12, [r12+rcx]
mov r13d, [rsi+144]
mov [rsi+168], r13
movsxd rcx, r13d
lea r12, [r12+rcx]
mov [rsi+160], r12
mov [rsi+8], r12
mov eax, 0x00000000
mov [rsi+88], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, NLHIVUOWNctvQqMaIo
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IOKapFNLQsdEAViqlo:
	dd 0x000A0015
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
KrCoNXBcSFNOEhKgxA:
	dq NOtOFjMLPnKHAULvXP
	dq 0
	dq NLHIVUOWNctvQqMaIo
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00004E */
FqgkbNGuIMLbICBCAJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+88]
mov ecx, 8
sub eax, ecx
sub ecx, [rsi+88]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, HGrnrDOJSvXqNpFAXC
cmp ecx, 0
mov r10, QpqOLXFmPHlTMkbstp
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
NLHIVUOWNctvQqMaIo:
	dq FqgkbNGuIMLbICBCAJ
	dq 0
	dq QpqOLXFmPHlTMkbstp
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000054 */
FrSMcUQceLJNOKGoox:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+144]
add eax, [rsi+88]
mov [rsi+160], eax
mov eax, [rsi+128]
mov [rsi+168], eax
mov ecx, [rsi+160]
mov rax, JMquQpBaKTuEPHUFkw
cmp ecx, [rsi+168]
mov r10, BUMCHXLDdxNwMTdDuh
cmovl rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
HGrnrDOJSvXqNpFAXC:
	dq FrSMcUQceLJNOKGoox
	dq 0
	dq BUMCHXLDdxNwMTdDuh
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00005E */
CFcodBAurKMkNIKaiQ:
mov rdx, PteDpvBOhiuLIlmhRp
mov rax, [rdx+0]
jmp rax
align 8
JMquQpBaKTuEPHUFkw:
	dq CFcodBAurKMkNIKaiQ
	dq 0
	dq PteDpvBOhiuLIlmhRp
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000061 */
FibqkiBmkNJwILgQSS:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r13, r12
lea r13, [r13+4]
mov [rsi+168], r13
mov [rsi+0], r13
mov r12d, [r12]
mov [rsi+96], r12d
mov eax, [rsi+96]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+96]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, QDubuQOIfHSMIMpAMV
cmp ecx, 0
mov r10, CVNlqTAkaWMhICiJWP
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
BUMCHXLDdxNwMTdDuh:
	dq FibqkiBmkNJwILgQSS
	dq 0
	dq CVNlqTAkaWMhICiJWP
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000075 */
ABRQNvJJvTooIIWsjI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+96], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CVNlqTAkaWMhICiJWP
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QDubuQOIfHSMIMpAMV:
	dq ABRQNvJJvTooIIWsjI
	dq 0
	dq CVNlqTAkaWMhICiJWP
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00007A */
GjhcxvNweFmxJOVsRL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+96]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+96]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, NWsNnPElsoWeAwfnpi
cmp ecx, 0
mov r10, ANEaADOUVpHaJrpqWD
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
CVNlqTAkaWMhICiJWP:
	dq GjhcxvNweFmxJOVsRL
	dq 0
	dq ANEaADOUVpHaJrpqWD
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000080 */
DjlxFlMNLoRiPSLtvb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+96], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, ANEaADOUVpHaJrpqWD
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NWsNnPElsoWeAwfnpi:
	dq DjlxFlMNLoRiPSLtvb
	dq 0
	dq ANEaADOUVpHaJrpqWD
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000085 */
PQUDgxIvHcwBMVSjwo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+96]
movzxb r12d, r12b
mov rax, [rsi+8]
mov edx, r12d
mov [rax], dl
mov r12, [rsi+8]
lea r12, [r12+1]
mov [rsi+160], r12
mov [rsi+8], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PteDpvBOhiuLIlmhRp
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
ANEaADOUVpHaJrpqWD:
	dq PQUDgxIvHcwBMVSjwo
	dq 0
	dq PteDpvBOhiuLIlmhRp
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000094 */
DQBCUnApVKoHMQVIee:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+88]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, NLHIVUOWNctvQqMaIo
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
PteDpvBOhiuLIlmhRp:
	dq DQBCUnApVKoHMQVIee
	dq 0
	dq NLHIVUOWNctvQqMaIo
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000099 */
JmagePPtwrBMFmnXdc:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+80]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, LqIQjMDCNIuiCpxGQc
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QpqOLXFmPHlTMkbstp:
	dq JmagePPtwrBMFmnXdc
	dq 0
	dq LqIQjMDCNIuiCpxGQc
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00009E */
JlICXXPICekBQcCISu:
mov rdx, CkkNDNDLwKsqOdeDoL
jmp BSVM2_TrOp_RETV
align 8
CkkNDNDLwKsqOdeDoL:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq IMFHQQQLBgiXBufsot
	dq IMFHQQQLBgiXBufsot
	dq 0
MRvoQBGQrwKDGKIHPL:
	dq JlICXXPICekBQcCISu
	dq CkkNDNDLwKsqOdeDoL
	dq IMFHQQQLBgiXBufsot
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00009F */
FnFwIgKCXlmrLhVlkT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+80], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PDfbbAMBNOLDHQubMq
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IMFHQQQLBgiXBufsot:
	dq FnFwIgKCXlmrLhVlkT
	dq 0
	dq PDfbbAMBNOLDHQubMq
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0000A4 */
IuNvjVMlavCABuFWKj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+80]
mov ecx, 8
sub eax, ecx
sub ecx, [rsi+80]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, COvnaxBdMIHtGoUhNH
cmp ecx, 0
mov r10, HgvKTnMupbPvLmtStD
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
PDfbbAMBNOLDHQubMq:
	dq IuNvjVMlavCABuFWKj
	dq 0
	dq HgvKTnMupbPvLmtStD
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0000AA */
EJWpcOQKFmkvBsOxqT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, [rsi+112]
mov [rsi+160], r13
mov rcx, rdi
mov rdx, DiTSuMPvXxuUMvWFas
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r13, [rsi+160]
mov r12, [rsi+168]
movsxd rcx, r12d
lea r13, [r13+rcx*4]
mov [rsi+0], r13
mov r13, [rsi+120]
mov r12d, [rsi+152]
add r12d, [rsi+80]
imul r12d, [rsi+128]
movsxd rcx, r12d
lea r13, [r13+rcx]
mov r12d, [rsi+144]
movsxd rcx, r12d
lea r13, [r13+rcx]
mov [rsi+8], r13
mov r13, [rsi+0]
mov r13d, [r13]
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+4]
or r13d, r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+8]
or r13d, r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+12]
or r13d, r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+16]
or r13d, r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+20]
or r13d, r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+24]
or r13d, r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+28]
mov [rsi+168], r12
or r13d, r12d
mov [rsi+88], r13d
mov [rsi+160], r13
mov rcx, rdi
mov rdx, AnTfkBIiFMSVEfmxtA
call BSVM2_Op_SARI_LLC /* OP:01C7-0000 */
mov ecx, [rsi+160]
mov rax, FQuskUIvJnvVONxWiC
cmp ecx, 0
mov r10, JcCgBgMFiosgQJWtQw
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
add rsp, 504
ret
align 8
DiTSuMPvXxuUMvWFas:
	dd 0x000A0015
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000003
	dd 0x00000000
	dq 0
AnTfkBIiFMSVEfmxtA:
	dd 0x000B0014
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
COvnaxBdMIHtGoUhNH:
	dq EJWpcOQKFmkvBsOxqT
	dq 0
	dq JcCgBgMFiosgQJWtQw
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0000FF */
BnOmDbBsLxxTElfRrI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r12d, [r12]
mov [rsi+16], r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+4]
mov [rsi+24], r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+8]
mov [rsi+32], r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+12]
mov [rsi+40], r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+16]
mov [rsi+48], r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+20]
mov [rsi+56], r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+24]
mov [rsi+64], r12d
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+28]
mov [rsi+72], r12d
mov eax, [rsi+16]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, ONAbCgKnCmXCAJveRJ
cmp ecx, 0
mov r10, PmpgwlJQsskKFGBNXC
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
FQuskUIvJnvVONxWiC:
	dq BnOmDbBsLxxTElfRrI
	dq 0
	dq PmpgwlJQsskKFGBNXC
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00013C */
MJoekJPAFCWHNcRjBL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PmpgwlJQsskKFGBNXC
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
ONAbCgKnCmXCAJveRJ:
	dq MJoekJPAFCWHNcRjBL
	dq 0
	dq PmpgwlJQsskKFGBNXC
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000140 */
DixjSGCGrIQTPJgNph:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+24]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+24]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, QmFKOKIPJeQvKPFITK
cmp ecx, 0
mov r10, PakAcvIVANfRJBelvh
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
PmpgwlJQsskKFGBNXC:
	dq DixjSGCGrIQTPJgNph
	dq 0
	dq PakAcvIVANfRJBelvh
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000145 */
LSancDAIPUaWHDlLVn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+24], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PakAcvIVANfRJBelvh
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QmFKOKIPJeQvKPFITK:
	dq LSancDAIPUaWHDlLVn
	dq 0
	dq PakAcvIVANfRJBelvh
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000149 */
IdRMHOPrntMNOJAGqx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+32]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+32]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, QaDDGQHmNLWkAgftuB
cmp ecx, 0
mov r10, GKAgvTPUvtSEHXoXhW
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
PakAcvIVANfRJBelvh:
	dq IdRMHOPrntMNOJAGqx
	dq 0
	dq GKAgvTPUvtSEHXoXhW
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00014E */
KqNQEOBcBgAkGeiLKQ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+32], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GKAgvTPUvtSEHXoXhW
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QaDDGQHmNLWkAgftuB:
	dq KqNQEOBcBgAkGeiLKQ
	dq 0
	dq GKAgvTPUvtSEHXoXhW
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000152 */
NmVUfjKdliCHMACVdR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+40]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+40]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, JrjdECERrMiKJbhgHd
cmp ecx, 0
mov r10, HuaHiwNmwOxoGLElJJ
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
GKAgvTPUvtSEHXoXhW:
	dq NmVUfjKdliCHMACVdR
	dq 0
	dq HuaHiwNmwOxoGLElJJ
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000157 */
HMOBxdNIJJqwJOtqea:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+40], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, HuaHiwNmwOxoGLElJJ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JrjdECERrMiKJbhgHd:
	dq HMOBxdNIJJqwJOtqea
	dq 0
	dq HuaHiwNmwOxoGLElJJ
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00015B */
COsfbWJmopxTCxDsTi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+48]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+48]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, DPBouaMllEHOHEbSfb
cmp ecx, 0
mov r10, PLePKJGoKutuDbOWqe
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
HuaHiwNmwOxoGLElJJ:
	dq COsfbWJmopxTCxDsTi
	dq 0
	dq PLePKJGoKutuDbOWqe
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000160 */
JIDAUaLaUEFVEjAPVo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+48], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PLePKJGoKutuDbOWqe
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DPBouaMllEHOHEbSfb:
	dq JIDAUaLaUEFVEjAPVo
	dq 0
	dq PLePKJGoKutuDbOWqe
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000164 */
BGVBpiCDxDwMNvfiKt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+56]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+56]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, BsfXGHCbxCbQGSTnKh
cmp ecx, 0
mov r10, FoUrftJnoeOfPjMPJQ
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
PLePKJGoKutuDbOWqe:
	dq BGVBpiCDxDwMNvfiKt
	dq 0
	dq FoUrftJnoeOfPjMPJQ
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000169 */
JXhTaQDvgivfKXTWif:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+56], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FoUrftJnoeOfPjMPJQ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
BsfXGHCbxCbQGSTnKh:
	dq JXhTaQDvgivfKXTWif
	dq 0
	dq FoUrftJnoeOfPjMPJQ
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00016D */
ISGdPUQaEaHOBGhouo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+64]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+64]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, BrQRjbOtUUHdDQXNUC
cmp ecx, 0
mov r10, LLqBGsAaEKLDNtROGX
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
FoUrftJnoeOfPjMPJQ:
	dq ISGdPUQaEaHOBGhouo
	dq 0
	dq LLqBGsAaEKLDNtROGX
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000173 */
OqlpjuBxHspLIasopi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+64], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LLqBGsAaEKLDNtROGX
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
BrQRjbOtUUHdDQXNUC:
	dq OqlpjuBxHspLIasopi
	dq 0
	dq LLqBGsAaEKLDNtROGX
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000178 */
DhXlAVDuTvINHuTvgd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+72]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+72]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, LiVwBuANgqUmJCoAiJ
cmp ecx, 0
mov r10, MdNCwCIUQtbKOqUvSo
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
LLqBGsAaEKLDNtROGX:
	dq DhXlAVDuTvINHuTvgd
	dq 0
	dq MdNCwCIUQtbKOqUvSo
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00017E */
QqhSqsBUkxiXJBqMxD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+72], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, MdNCwCIUQtbKOqUvSo
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LiVwBuANgqUmJCoAiJ:
	dq QqhSqsBUkxiXJBqMxD
	dq 0
	dq MdNCwCIUQtbKOqUvSo
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000183 */
GrBobpCPphujKtkGFK:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+16]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+16]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, DqahRgJvrndvEvxRmM
cmp ecx, 0
mov r10, NedXdJLrAjoCFEICEV
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
MdNCwCIUQtbKOqUvSo:
	dq GrBobpCPphujKtkGFK
	dq 0
	dq NedXdJLrAjoCFEICEV
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000189 */
BjlBoTEWMJJHIrTAQj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+16], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NedXdJLrAjoCFEICEV
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DqahRgJvrndvEvxRmM:
	dq BjlBoTEWMJJHIrTAQj
	dq 0
	dq NedXdJLrAjoCFEICEV
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00018E */
AsHaIrDQiXoWGjslNe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+24]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+24]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, BXndOCHeKJJaAsoMEc
cmp ecx, 0
mov r10, BoXsPDHucUPtImjGMn
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
NedXdJLrAjoCFEICEV:
	dq AsHaIrDQiXoWGjslNe
	dq 0
	dq BoXsPDHucUPtImjGMn
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000194 */
CONKCxNJIsALNBNKnx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+24], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, BoXsPDHucUPtImjGMn
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
BXndOCHeKJJaAsoMEc:
	dq CONKCxNJIsALNBNKnx
	dq 0
	dq BoXsPDHucUPtImjGMn
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000199 */
LOKWFEKvkLBOIkwmtp:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+32]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+32]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, NMHtVbOgpwWpQjgofP
cmp ecx, 0
mov r10, NNcLeMPBPxXNAKHSPL
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
BoXsPDHucUPtImjGMn:
	dq LOKWFEKvkLBOIkwmtp
	dq 0
	dq NNcLeMPBPxXNAKHSPL
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00019F */
FhqhWFGEksaGJwvAwq:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+32], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NNcLeMPBPxXNAKHSPL
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NMHtVbOgpwWpQjgofP:
	dq FhqhWFGEksaGJwvAwq
	dq 0
	dq NNcLeMPBPxXNAKHSPL
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001A4 */
PdxCmTKoSMneGnJJIe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+40]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+40]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, IamFQmBudBLKLWGsgK
cmp ecx, 0
mov r10, GSJKDfPwvBCdLJFUPk
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
NNcLeMPBPxXNAKHSPL:
	dq PdxCmTKoSMneGnJJIe
	dq 0
	dq GSJKDfPwvBCdLJFUPk
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001AA */
QlenCeItdDDgKsoxAs:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+40], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GSJKDfPwvBCdLJFUPk
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
IamFQmBudBLKLWGsgK:
	dq QlenCeItdDDgKsoxAs
	dq 0
	dq GSJKDfPwvBCdLJFUPk
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001AF */
PdQLBKNJEbtOALNlJm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+48]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+48]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, HVawqkHLapNxAuvWaa
cmp ecx, 0
mov r10, QPNoUfPqFraTEVpkev
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
GSJKDfPwvBCdLJFUPk:
	dq PdQLBKNJEbtOALNlJm
	dq 0
	dq QPNoUfPqFraTEVpkev
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001B5 */
LJJWTSALIjmbHEiKQe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+48], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, QPNoUfPqFraTEVpkev
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HVawqkHLapNxAuvWaa:
	dq LJJWTSALIjmbHEiKQe
	dq 0
	dq QPNoUfPqFraTEVpkev
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001BA */
JwNpQsOruTwSHvUUrL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+56]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+56]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, NCfPuSAluHKtMprseJ
cmp ecx, 0
mov r10, KQfoCXIRFIdlMcGXhb
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
QPNoUfPqFraTEVpkev:
	dq JwNpQsOruTwSHvUUrL
	dq 0
	dq KQfoCXIRFIdlMcGXhb
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001C0 */
MtuPNmFnaEmJIpWNHt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+56], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KQfoCXIRFIdlMcGXhb
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NCfPuSAluHKtMprseJ:
	dq MtuPNmFnaEmJIpWNHt
	dq 0
	dq KQfoCXIRFIdlMcGXhb
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001C5 */
MtQnSJHumDUxMTGpst:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+64]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+64]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, PdCCgsEnVOGrGhmGxg
cmp ecx, 0
mov r10, MFWgFRHUoqQfAgGnaD
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
KQfoCXIRFIdlMcGXhb:
	dq MtQnSJHumDUxMTGpst
	dq 0
	dq MFWgFRHUoqQfAgGnaD
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001CB */
DbkHWwLISUrcPfwhja:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+64], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, MFWgFRHUoqQfAgGnaD
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
PdCCgsEnVOGrGhmGxg:
	dq DbkHWwLISUrcPfwhja
	dq 0
	dq MFWgFRHUoqQfAgGnaD
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001D0 */
QnLcBBOkIbSbHLIlvN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+72]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+72]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+160], eax
mov ecx, [rsi+160]
mov rax, FjooCXMiPrRbFPQjVr
cmp ecx, 0
mov r10, CInSbxGjHtaHLCLHve
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
MFWgFRHUoqQfAgGnaD:
	dq QnLcBBOkIbSbHLIlvN
	dq 0
	dq CInSbxGjHtaHLCLHve
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001D6 */
ORHHVXQlBjTWOTvBjt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+72], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CInSbxGjHtaHLCLHve
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FjooCXMiPrRbFPQjVr:
	dq ORHHVXQlBjTWOTvBjt
	dq 0
	dq CInSbxGjHtaHLCLHve
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 0001DB */
OqJgHMIDVFFIOOqfVD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+16]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13], r12b
mov r12d, [rsi+24]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+1], r12b
mov r12d, [rsi+32]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+2], r12b
mov r12d, [rsi+40]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+3], r12b
mov r12d, [rsi+48]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+4], r12b
mov r12d, [rsi+56]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+5], r12b
mov r12d, [rsi+64]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+6], r12b
mov r12d, [rsi+72]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [rsi+168], r13
mov [rsi+160], r12
mov [r13+7], r12b
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, PIiOWpAUdWdIMVtIpE
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CInSbxGjHtaHLCLHve:
	dq OqJgHMIDVFFIOOqfVD
	dq 0
	dq PIiOWpAUdWdIMVtIpE
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00021E */
NQbuGeCxXMJVJpXKJk:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+0]
mov r12d, [r12]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13], r12b
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+4]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+1], r12b
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+8]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+2], r12b
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+12]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+3], r12b
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+16]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+4], r12b
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+20]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+5], r12b
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+24]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [r13+6], r12b
mov r12, [rsi+0]
mov rax, r12
mov r12d, [r12+28]
movzxb r12d, r12b
mov r13, [rsi+8]
mov [rsi+168], r13
mov [rsi+160], r12
mov [r13+7], r12b
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, PIiOWpAUdWdIMVtIpE
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JcCgBgMFiosgQJWtQw:
	dq NQbuGeCxXMJVJpXKJk
	dq 0
	dq PIiOWpAUdWdIMVtIpE
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 000277 */
KaAHsoFMKDCAAHnxqx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+80]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, PDfbbAMBNOLDHQubMq
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
PIiOWpAUdWdIMVtIpE:
	dq KaAHsoFMKDCAAHnxqx
	dq 0
	dq PDfbbAMBNOLDHQubMq
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_CopyOutBlock8B 00027C */
CuJujVNBgdSPPpqHIx:
mov rdx, BjKiMDOEdeHQQCjqmd
jmp BSVM2_TrOp_RETV
align 8
BjKiMDOEdeHQQCjqmd:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq HgvKTnMupbPvLmtStD
	dq 0
HgvKTnMupbPvLmtStD:
	dq CuJujVNBgdSPPpqHIx
	dq BjKiMDOEdeHQQCjqmd
	dq HgvKTnMupbPvLmtStD
	dq 0x000001DF1776CDB0
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_TransIDCT_Horiz 000000 */
LlppdbEpGnfVJJtuJJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+112]
mov r12d, [r12]
imul r12d, 91
mov [rsi+0], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+16]
imul r12d, 91
mov [rsi+8], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+8]
imul r12d, 118
mov [rsi+16], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+8]
imul r12d, 49
mov [rsi+24], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+24]
imul r12d, 118
mov [rsi+32], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+24]
imul r12d, 49
mov [rsi+40], r12d
mov r13, [rsi+0]
mov r14, [rsi+16]
mov r12d, r13d
add r12d, r14d
add r12d, [rsi+8]
add r12d, [rsi+40]
mov [rsi+48], r12d
mov r15, [rsi+24]
mov r12d, r13d
add r12d, r15d
sub r12d, [rsi+8]
sub r12d, [rsi+32]
mov [rsi+56], r12d
mov r12d, r13d
sub r12d, r15d
sub r12d, [rsi+8]
add r12d, [rsi+32]
mov [rsi+64], r12d
mov r12d, r13d
sub r12d, r14d
add r12d, [rsi+8]
sub r12d, [rsi+40]
mov [rsi+72], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+4]
imul r12d, 126
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+12]
imul r13d, 106
add r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+20]
imul r13d, 71
add r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+28]
imul r13d, 25
add r12d, r13d
mov [rsi+80], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+4]
imul r12d, 106
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+12]
imul r13d, 25
sub r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+20]
imul r13d, 126
sub r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+28]
imul r13d, 71
sub r12d, r13d
mov [rsi+88], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+4]
imul r12d, 71
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+12]
imul r13d, 126
sub r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+20]
imul r13d, 25
add r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+28]
imul r13d, 106
add r12d, r13d
mov [rsi+96], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+4]
imul r12d, 25
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+12]
imul r13d, 71
sub r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+20]
imul r13d, 106
add r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+28]
imul r13d, 126
sub r12d, r13d
mov [rsi+104], r12d
mov r14, [rsi+48]
mov r9, [rsi+80]
mov r12d, r14d
add r12d, r9d
mov r13, [rsi+120]
mov [r13], r12d
mov r15, [rsi+56]
mov r10, [rsi+88]
mov r12d, r15d
add r12d, r10d
mov r13, [rsi+120]
mov [r13+4], r12d
mov rbx, [rsi+64]
mov r11, [rsi+96]
mov r12d, ebx
add r12d, r11d
mov r13, [rsi+120]
mov [r13+8], r12d
mov r8, [rsi+72]
mov r12d, r8d
add r12d, [rsi+104]
mov r13, [rsi+120]
mov [r13+12], r12d
mov r12d, r8d
sub r12d, [rsi+104]
mov r13, [rsi+120]
mov [r13+16], r12d
mov r12d, ebx
sub r12d, r11d
mov r13, [rsi+120]
mov [r13+20], r12d
mov r12d, r15d
sub r12d, r10d
mov r13, [rsi+120]
mov [r13+24], r12d
mov r12d, r14d
sub r12d, r9d
mov r13, [rsi+120]
mov [rsi+136], r13
mov [rsi+128], r12
mov [r13+28], r12d
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, MvhnfWCjOWWPJxqaRe
add rsp, 504
jmp BSVM2_TrOp_RETV
align 8
MvhnfWCjOWWPJxqaRe:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq AAoqpcJFKfGbJMfGTH
	dq 0
AAoqpcJFKfGbJMfGTH:
	dq LlppdbEpGnfVJJtuJJ
	dq MvhnfWCjOWWPJxqaRe
	dq AAoqpcJFKfGbJMfGTH
	dq 0x000001DF1776BC30
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* BGBBTJ_JPG_TransIDCT_Vert2 000000 */
DBGKcAIvQQRTCIlWpF:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+112]
mov r12d, [r12]
imul r12d, 91
mov [rsi+0], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+128]
imul r12d, 91
mov [rsi+8], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+64]
imul r12d, 118
mov [rsi+16], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+64]
imul r12d, 49
mov [rsi+24], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+192]
imul r12d, 118
mov [rsi+32], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+192]
imul r12d, 49
mov [rsi+40], r12d
mov r13, [rsi+0]
mov r14, [rsi+16]
mov r12d, r13d
add r12d, r14d
add r12d, [rsi+8]
add r12d, [rsi+40]
mov [rsi+48], r12d
mov r15, [rsi+24]
mov r12d, r13d
add r12d, r15d
sub r12d, [rsi+8]
sub r12d, [rsi+32]
mov [rsi+56], r12d
mov r12d, r13d
sub r12d, r15d
sub r12d, [rsi+8]
add r12d, [rsi+32]
mov [rsi+64], r12d
mov r12d, r13d
sub r12d, r14d
add r12d, [rsi+8]
sub r12d, [rsi+40]
mov [rsi+72], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+32]
imul r12d, 126
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+96]
imul r13d, 106
add r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+160]
imul r13d, 71
add r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+224]
imul r13d, 25
add r12d, r13d
mov [rsi+80], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+32]
imul r12d, 106
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+96]
imul r13d, 25
sub r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+160]
imul r13d, 126
sub r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+224]
imul r13d, 71
sub r12d, r13d
mov [rsi+88], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+32]
imul r12d, 71
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+96]
imul r13d, 126
sub r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+160]
imul r13d, 25
add r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+224]
imul r13d, 106
add r12d, r13d
mov [rsi+96], r12d
mov r12, [rsi+112]
mov rax, r12
mov r12d, [r12+32]
imul r12d, 25
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+96]
imul r13d, 71
sub r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+160]
imul r13d, 106
add r12d, r13d
mov r13, [rsi+112]
mov rax, r13
mov r13d, [r13+224]
imul r13d, 126
sub r12d, r13d
mov [rsi+104], r12d
mov r14, [rsi+48]
mov r9, [rsi+80]
mov r12d, r14d
add r12d, r9d
sar r12d, 16
add r12d, [rsi+128]
mov r13, [rsi+120]
mov [r13], r12d
mov r15, [rsi+56]
mov r10, [rsi+88]
mov r12d, r15d
add r12d, r10d
sar r12d, 16
add r12d, [rsi+128]
mov r13, [rsi+120]
mov [r13+32], r12d
mov rbx, [rsi+64]
mov r11, [rsi+96]
mov r12d, ebx
add r12d, r11d
sar r12d, 16
add r12d, [rsi+128]
mov r13, [rsi+120]
mov [r13+64], r12d
mov r8, [rsi+72]
mov r12d, r8d
add r12d, [rsi+104]
sar r12d, 16
add r12d, [rsi+128]
mov r13, [rsi+120]
mov [r13+96], r12d
mov r12d, r8d
sub r12d, [rsi+104]
sar r12d, 16
add r12d, [rsi+128]
mov r13, [rsi+120]
mov [r13+128], r12d
mov r12d, ebx
sub r12d, r11d
sar r12d, 16
add r12d, [rsi+128]
mov r13, [rsi+120]
mov [r13+160], r12d
mov r12d, r15d
sub r12d, r10d
sar r12d, 16
add r12d, [rsi+128]
mov r13, [rsi+120]
mov [r13+192], r12d
mov r12d, r14d
sub r12d, r9d
sar r12d, 16
add r12d, [rsi+128]
mov r13, [rsi+120]
mov [rsi+144], r13
mov [rsi+136], r12
mov [r13+224], r12d
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, AlkAvTBasXWGMnXRtH
add rsp, 504
jmp BSVM2_TrOp_RETV
align 8
AlkAvTBasXWGMnXRtH:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq DUbrJUGXeikrJHcddD
	dq 0
DUbrJUGXeikrJHcddD:
	dq DBGKcAIvQQRTCIlWpF
	dq AlkAvTBasXWGMnXRtH
	dq DUbrJUGXeikrJHcddD
	dq 0x000001DF1776BF10
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_GetImageRGBA 000000 */
KNMuIhEdOurXPkjDdN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+336]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov edx, [rax+240]
mov [rsi+368], edx
mov ecx, [rsi+368]
mov rax, QjKJbTEvKNRsLAELkN
cmp ecx, 0
mov r10, IWKWETCeUAwhGNLxwK
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
add rsp, 504
ret
align 8
QOqhUXJPploJErmIuM:
	dq KNMuIhEdOurXPkjDdN
	dq 0
	dq IWKWETCeUAwhGNLxwK
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000006 */
EoflwTQSGJFgOfHIhb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C88A
mov [rsi+368], rax
xor rax, rax
mov [rsi+376], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DXCJUWDjJpLANaRAGp
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
DXCJUWDjJpLANaRAGp:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq PKnVFmCkdKAEMwKJAi
	dq PKnVFmCkdKAEMwKJAi
	dq 0
QjKJbTEvKNRsLAELkN:
	dq EoflwTQSGJFgOfHIhb
	dq DXCJUWDjJpLANaRAGp
	dq PKnVFmCkdKAEMwKJAi
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00000B */
LXQPAKBwDbagEjqnjL:
mov rdx, ERLEqQBLgMrDIQEsdr
jmp BSVM2_TrOp_NatCallG0
align 8
ERLEqQBLgMrDIQEsdr:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq PrMxTWAqWjWXNErKIh
	dq PrMxTWAqWjWXNErKIh
	dq 0
PKnVFmCkdKAEMwKJAi:
	dq LXQPAKBwDbagEjqnjL
	dq ERLEqQBLgMrDIQEsdr
	dq PrMxTWAqWjWXNErKIh
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00000D */
POpJiLMlVDnXOprHVt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+368]
mov [rsi+72], r12d
mov rax, [rsi+336]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+192]
mov r12, rdx
mov [rsi+368], r12
mov rcx, rdi
mov rdx, OimrFEDKCPGKPhXVHA
call BSVM2_Op_LDIXAC /* OP:015C-0000 */
mov rcx, rdi
mov rdx, LAwpNgIcoGStFhjnvm
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+368]
mov [rsi+0], r12
mov rax, [rsi+336]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+192]
mov r12, rdx
mov [rsi+368], r12
mov rcx, rdi
mov rdx, ANAwVkNJrSBwLWRGPv
call BSVM2_Op_LDIXAC /* OP:005C-0000 */
mov rcx, rdi
mov rdx, KcViajCAOvQxLELhoO
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+368]
mov [rsi+8], r12
mov rax, [rsi+336]
mov rdx, 0x0000FFFFFFFFFFFF
and rax, rdx
mov rdx, [rax+192]
mov r12, rdx
mov [rsi+368], r12
mov rcx, rdi
mov rdx, GqGHVJGThBebPKnmoi
call BSVM2_Op_LDIXAC /* OP:005C-0000 */
mov rcx, rdi
mov rdx, MdjaemFaobCSCLKdtn
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov rax, [rsi+368]
mov [rsi+16], rax
mov rcx, rdi
mov rdx, FehaJsMvpTHfFTOBuo
call BSVM2_Op_SARI_LLC /* OP:01E7-0000 */
mov rcx, rdi
mov rdx, FUEICWPUrLXkLdsgEO
call BSVM2_Op_SARI_LLC /* OP:01E7-0000 */
mov eax, 0x00000000
mov [rsi+264], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, GCuhJhGSaHoQNRXDrk
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OimrFEDKCPGKPhXVHA:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
LAwpNgIcoGStFhjnvm:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ANAwVkNJrSBwLWRGPv:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
KcViajCAOvQxLELhoO:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
GqGHVJGThBebPKnmoi:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000002
	dd 0x00000000
	dq 0
MdjaemFaobCSCLKdtn:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
FehaJsMvpTHfFTOBuo:
	dd 0x002C0023
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
FUEICWPUrLXkLdsgEO:
	dd 0x002D0024
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
PrMxTWAqWjWXNErKIh:
	dq POpJiLMlVDnXOprHVt
	dq 0
	dq GCuhJhGSaHoQNRXDrk
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00003A */
CdllcABAphlQBvvmvD:
mov rdx, EbkHXtLfOvkIMcIQNr
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
EbkHXtLfOvkIMcIQNr:
	dd 0x00240021
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq HJksFuKgGjbjJfTPcv
	dq PhSGFuHVVuthJRIBeQ
	dq 0
GCuhJhGSaHoQNRXDrk:
	dq CdllcABAphlQBvvmvD
	dq EbkHXtLfOvkIMcIQNr
	dq PhSGFuHVVuthJRIBeQ
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000040 */
GQRoQwKeRaEMLeLDmx:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r15, [rsi+264]
mov r13d, [rsi+288]
sub r13d, r15d
dec dword r13d
mov [rsi+272], r13d
mov r13, [rsi+0]
mov [rsi+368], r13
mov rcx, rdi
mov rdx, EqXIAwCuaCdXIWWMSm
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+376]
add r12d, 0
imul r12d, [rsi+352]
mov r13, [rsi+368]
movsxd rcx, r12d
lea r13, [r13+rcx]
mov [rsi+32], r13
mov r13, [rsi+0]
mov [rsi+376], r12
mov [rsi+368], r13
mov rcx, rdi
mov rdx, POMeLNIbrSsLPvAIol
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+376]
inc dword r12d
imul r12d, [rsi+352]
mov r13, [rsi+368]
movsxd rcx, r12d
lea r13, [r13+rcx]
mov [rsi+24], r13
mov r13, [rsi+8]
mov r14, [rsi+272]
mov rbx, [rsi+280]
mov r12d, r14d
imul r12d, ebx
movsxd rcx, r12d
lea r13, [r13+rcx]
mov [rsi+40], r13
mov r13, [rsi+16]
mov r12d, r14d
imul r12d, ebx
movsxd rcx, r12d
lea r13, [r13+rcx]
mov [rsi+48], r13
mov r13, [rsi+344]
mov [rsi+376], r12
mov [rsi+368], r13
mov rcx, rdi
mov rdx, JbWElxMoWHudCNrucC
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+376]
add r12d, 0
imul r12d, [rsi+352]
shl r12d, 2
mov r13, [rsi+368]
movsxd rcx, r12d
lea r13, [r13+rcx]
mov [rsi+56], r13
mov r13, [rsi+344]
mov [rsi+376], r12
mov [rsi+368], r13
mov rcx, rdi
mov rdx, KKNKssIROGijCABnDp
call BSVM2_Op_SHLI_LLC /* OP:01C6-0000 */
mov r12, [rsi+376]
inc dword r12d
imul r12d, [rsi+352]
shl r12d, 2
mov r13, [rsi+368]
mov [rsi+376], r12
movsxd rcx, r12d
lea r13, [r13+rcx]
mov [rsi+368], r13
mov [rsi+64], r13
mov eax, 0x00000000
mov [rsi+256], eax
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, IcSoNlKXHatTEppjBd
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
EqXIAwCuaCdXIWWMSm:
	dd 0x0022002F
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
POMeLNIbrSsLPvAIol:
	dd 0x0022002F
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
JbWElxMoWHudCNrucC:
	dd 0x0021002F
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
KKNKssIROGijCABnDp:
	dd 0x0021002F
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
HJksFuKgGjbjJfTPcv:
	dq GQRoQwKeRaEMLeLDmx
	dq 0
	dq IcSoNlKXHatTEppjBd
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0000A5 */
OdKHcACwlamlNOouef:
mov rdx, FEQsuOAOVgdiFFgrjw
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
FEQsuOAOVgdiFFgrjw:
	dd 0x00230020
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq QPnxXMPSxbBDClngnl
	dq CFOQhaCHbDRwPmUKrQ
	dq 0
IcSoNlKXHatTEppjBd:
	dq OdKHcACwlamlNOouef
	dq FEQsuOAOVgdiFFgrjw
	dq CFOQhaCHbDRwPmUKrQ
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0000AB */
KAfDchJQoWGUFIJxvt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+24]
movzxb r12d, [r12]
mov [rsi+96], r12d
mov r12, [rsi+24]
mov rax, r12
movzxb r12d, [r12+1]
mov [rsi+104], r12d
mov r12, [rsi+24]
lea r12, [r12+2]
mov [rsi+24], r12
mov r12, [rsi+32]
movzxb r12d, [r12]
mov [rsi+112], r12d
mov r12, [rsi+32]
mov rax, r12
movzxb r12d, [r12+1]
mov [rsi+120], r12d
mov r12, [rsi+32]
lea r12, [r12+2]
mov [rsi+32], r12
mov r12, [rsi+40]
mov r13, r12
lea r13, [r13+1]
mov [rsi+40], r13
movzxb r12d, [r12]
mov [rsi+224], r12d
mov r12, [rsi+48]
mov r13, r12
lea r13, [r13+1]
mov [rsi+376], r13
mov [rsi+48], r13
movzxb r12d, [r12]
mov [rsi+232], r12d
mov r13d, [rsi+224]
sub r13d, 128
mov r14d, [rsi+232]
sub r14d, 128
mov r15, [rsi+96]
mov ebx, r15d
add ebx, r14d
mov [rsi+160], r15d
mov eax, r15d
add eax, r13d
mov [rsi+192], eax
mov r15, [rsi+104]
mov r8d, r15d
add r8d, r14d
mov [rsi+168], r15d
mov eax, r15d
add eax, r13d
mov [rsi+200], eax
mov r15, [rsi+112]
mov eax, r15d
add eax, r14d
mov [rsi+144], eax
mov [rsi+176], r15d
mov eax, r15d
add eax, r13d
mov [rsi+208], eax
mov r15, [rsi+120]
mov [rsi+248], r14
mov eax, r15d
add eax, r14d
mov [rsi+152], eax
mov [rsi+184], r15d
mov [rsi+240], r13
mov eax, r15d
add eax, r13d
mov [rsi+216], eax
mov [rsi+128], rbx
mov [rsi+136], r8
mov r12d, ebx
or r12d, r8d
or r12d, [rsi+144]
or r12d, [rsi+152]
mov [rsi+328], r12d
mov [rsi+368], r12
mov rcx, rdi
mov rdx, QNEqDlELnRjHOdbrgu
call BSVM2_Op_SARI_LLC /* OP:01C7-0000 */
mov ecx, [rsi+368]
mov rax, NTQvJwIKfPohOHdCxQ
cmp ecx, 0
mov r10, CSOiIRMHLgDCMjfoKG
cmove rax, r10
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
add rsp, 504
ret
align 8
QNEqDlELnRjHOdbrgu:
	dd 0x0029002E
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
QPnxXMPSxbBDClngnl:
	dq KAfDchJQoWGUFIJxvt
	dq 0
	dq CSOiIRMHLgDCMjfoKG
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000145 */
PWbrmtCLSxFNDrWhNl:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+128]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+128]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, MVOBAaQbqoIxHbBTNC
cmp ecx, 0
mov r10, NJtKKPLTSrptKPhvMj
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
NTQvJwIKfPohOHdCxQ:
	dq PWbrmtCLSxFNDrWhNl
	dq 0
	dq NJtKKPLTSrptKPhvMj
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00014B */
NMGAIDKbqDLFQOGHfv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+128], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NJtKKPLTSrptKPhvMj
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
MVOBAaQbqoIxHbBTNC:
	dq NMGAIDKbqDLFQOGHfv
	dq 0
	dq NJtKKPLTSrptKPhvMj
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000150 */
FbasWQNRduCEFBbhdL:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+136]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+136]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, EVktaDBwFdWBQltxSE
cmp ecx, 0
mov r10, LrUaImCpbLiNPwtRWQ
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
NJtKKPLTSrptKPhvMj:
	dq FbasWQNRduCEFBbhdL
	dq 0
	dq LrUaImCpbLiNPwtRWQ
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000156 */
MaFrANAvERlqFQqbNi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+136], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LrUaImCpbLiNPwtRWQ
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
EVktaDBwFdWBQltxSE:
	dq MaFrANAvERlqFQqbNi
	dq 0
	dq LrUaImCpbLiNPwtRWQ
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00015B */
LVjcesGoaUlDBnnVRv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+144]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+144]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, LwjDKhOibTxiOpuEPK
cmp ecx, 0
mov r10, FEueVPKmvGsxQoHonw
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
LrUaImCpbLiNPwtRWQ:
	dq LVjcesGoaUlDBnnVRv
	dq 0
	dq FEueVPKmvGsxQoHonw
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000161 */
KlejDCGTNElOOKgrjH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+144], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FEueVPKmvGsxQoHonw
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LwjDKhOibTxiOpuEPK:
	dq KlejDCGTNElOOKgrjH
	dq 0
	dq FEueVPKmvGsxQoHonw
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000166 */
LSTLFIKJBGsdOhIoQN:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+152]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+152]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, NgecfoMCjFxSNSFKjF
cmp ecx, 0
mov r10, MfckeOGFBPQoQDRQwd
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
FEueVPKmvGsxQoHonw:
	dq LSTLFIKJBGsdOhIoQN
	dq 0
	dq MfckeOGFBPQoQDRQwd
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00016C */
OcNdJMBrcpxwCemPcR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+152], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, MfckeOGFBPQoQDRQwd
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NgecfoMCjFxSNSFKjF:
	dq OcNdJMBrcpxwCemPcR
	dq 0
	dq MfckeOGFBPQoQDRQwd
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000171 */
JaxPllCBoOFxDbooCa:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+128]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+128]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, FoRedWNfFRoRMKaefe
cmp ecx, 0
mov r10, NGUONeMvCHTjDSKkfH
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
MfckeOGFBPQoQDRQwd:
	dq JaxPllCBoOFxDbooCa
	dq 0
	dq NGUONeMvCHTjDSKkfH
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000177 */
ECePWmPlUNfXMHkBWo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+128], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NGUONeMvCHTjDSKkfH
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FoRedWNfFRoRMKaefe:
	dq ECePWmPlUNfXMHkBWo
	dq 0
	dq NGUONeMvCHTjDSKkfH
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00017C */
HdahPIAWDmFaPsfvBR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+136]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+136]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, DUHJgKBrNNMxEtPJlp
cmp ecx, 0
mov r10, DWfXHCGuMStNIINEEU
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
NGUONeMvCHTjDSKkfH:
	dq HdahPIAWDmFaPsfvBR
	dq 0
	dq DWfXHCGuMStNIINEEU
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000182 */
BCOPvGJBCVBVCFSdvX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+136], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DWfXHCGuMStNIINEEU
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
DUHJgKBrNNMxEtPJlp:
	dq BCOPvGJBCVBVCFSdvX
	dq 0
	dq DWfXHCGuMStNIINEEU
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000187 */
MEvewSPpFeckJtVDXe:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+144]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+144]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, ESjpEnFVUdqTPxSPfH
cmp ecx, 0
mov r10, EJMnaVLTmsEMImBiwH
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
DWfXHCGuMStNIINEEU:
	dq MEvewSPpFeckJtVDXe
	dq 0
	dq EJMnaVLTmsEMImBiwH
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00018D */
ETWjbhNrXeGVGDxfTM:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+144], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, EJMnaVLTmsEMImBiwH
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
ESjpEnFVUdqTPxSPfH:
	dq ETWjbhNrXeGVGDxfTM
	dq 0
	dq EJMnaVLTmsEMImBiwH
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000192 */
NiqNjbNnRUBNOJIKjh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+152]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+152]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, JiqKGcLHiHkDBlfChJ
cmp ecx, 0
mov r10, CSOiIRMHLgDCMjfoKG
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
EJMnaVLTmsEMImBiwH:
	dq NiqNjbNnRUBNOJIKjh
	dq 0
	dq CSOiIRMHLgDCMjfoKG
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000198 */
CKIQgbMHIDMLDktsVQ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+152], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CSOiIRMHLgDCMjfoKG
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JiqKGcLHiHkDBlfChJ:
	dq CKIQgbMHIDMLDktsVQ
	dq 0
	dq CSOiIRMHLgDCMjfoKG
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00019D */
JufbWKHhdpiNAVgEpb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+160]
or r12d, [rsi+168]
or r12d, [rsi+176]
or r12d, [rsi+184]
mov [rsi+328], r12d
mov [rsi+368], r12
mov rcx, rdi
mov rdx, IKnLkwAtOBMvGHtpsr
call BSVM2_Op_SARI_LLC /* OP:01C7-0000 */
mov ecx, [rsi+368]
mov rax, GJhkEQDaASaiQOWGfR
cmp ecx, 0
mov r10, GoLvMBHfrlCqKuFMNh
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
IKnLkwAtOBMvGHtpsr:
	dd 0x0029002E
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
CSOiIRMHLgDCMjfoKG:
	dq JufbWKHhdpiNAVgEpb
	dq 0
	dq GoLvMBHfrlCqKuFMNh
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001AF */
IjOcOSELqKshGrgqLV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+160]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+160]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, CMvHvTQXSfGrJmhXJe
cmp ecx, 0
mov r10, DlKmStHFidnlGMTchf
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
GJhkEQDaASaiQOWGfR:
	dq IjOcOSELqKshGrgqLV
	dq 0
	dq DlKmStHFidnlGMTchf
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001B5 */
KxcXcsQmGGGBJwepgA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DlKmStHFidnlGMTchf
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CMvHvTQXSfGrJmhXJe:
	dq KxcXcsQmGGGBJwepgA
	dq 0
	dq DlKmStHFidnlGMTchf
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001BA */
LFRWbfDhaGRJDrlQpd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+168]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+168]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, CuVCIUDnANAeBIhNME
cmp ecx, 0
mov r10, AenQEhHXdLNTDkJwlr
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
DlKmStHFidnlGMTchf:
	dq LFRWbfDhaGRJDrlQpd
	dq 0
	dq AenQEhHXdLNTDkJwlr
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001C0 */
JMPhxbIlHbXVDvGMsD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+168], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, AenQEhHXdLNTDkJwlr
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CuVCIUDnANAeBIhNME:
	dq JMPhxbIlHbXVDvGMsD
	dq 0
	dq AenQEhHXdLNTDkJwlr
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001C5 */
LJGatTAlnVCrQWxxuj:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+176]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+176]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, FgXqJICagQwcDpTamA
cmp ecx, 0
mov r10, DpmIcOOnOGGcDcQleK
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
AenQEhHXdLNTDkJwlr:
	dq LJGatTAlnVCrQWxxuj
	dq 0
	dq DpmIcOOnOGGcDcQleK
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001CB */
DtLiCMCLQRWWPdIdqp:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+176], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, DpmIcOOnOGGcDcQleK
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FgXqJICagQwcDpTamA:
	dq DtLiCMCLQRWWPdIdqp
	dq 0
	dq DpmIcOOnOGGcDcQleK
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001D0 */
OolSRuMxpQgNDisEQn:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+184]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+184]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, ODeDUiEOAUFfLLuosm
cmp ecx, 0
mov r10, OwpBeFMLBwOlDkFcVD
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
DpmIcOOnOGGcDcQleK:
	dq OolSRuMxpQgNDisEQn
	dq 0
	dq OwpBeFMLBwOlDkFcVD
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001D6 */
KEiXkoIrceLrBGRSSt:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+184], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OwpBeFMLBwOlDkFcVD
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
ODeDUiEOAUFfLLuosm:
	dq KEiXkoIrceLrBGRSSt
	dq 0
	dq OwpBeFMLBwOlDkFcVD
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001DB */
EOLKrcKGucvDPqNFUb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+160]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+160]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, QTngIuEcJBQtOidQnC
cmp ecx, 0
mov r10, NiGPRpIxVlVVFbuPoC
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
OwpBeFMLBwOlDkFcVD:
	dq EOLKrcKGucvDPqNFUb
	dq 0
	dq NiGPRpIxVlVVFbuPoC
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001E1 */
HUalGsNHUwJdHUJObc:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+160], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NiGPRpIxVlVVFbuPoC
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QTngIuEcJBQtOidQnC:
	dq HUalGsNHUwJdHUJObc
	dq 0
	dq NiGPRpIxVlVVFbuPoC
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001E6 */
KSwLbILOSsMnArvuTC:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+168]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+168]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, NhVEHhKSKXDXCulSuW
cmp ecx, 0
mov r10, PespPQNsDukmPaivTX
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
NiGPRpIxVlVVFbuPoC:
	dq KSwLbILOSsMnArvuTC
	dq 0
	dq PespPQNsDukmPaivTX
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001EC */
IILhCINeeCaUODocrd:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+168], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, PespPQNsDukmPaivTX
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
NhVEHhKSKXDXCulSuW:
	dq IILhCINeeCaUODocrd
	dq 0
	dq PespPQNsDukmPaivTX
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001F1 */
INirqAJClaSDOUSDBT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+176]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+176]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, HJUwhIDGeDlOOBlTNS
cmp ecx, 0
mov r10, LvSEpxAxDMwRBAmFpV
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
PespPQNsDukmPaivTX:
	dq INirqAJClaSDOUSDBT
	dq 0
	dq LvSEpxAxDMwRBAmFpV
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001F7 */
GfRhhUKpVRkhAJJCSi:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+176], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LvSEpxAxDMwRBAmFpV
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HJUwhIDGeDlOOBlTNS:
	dq GfRhhUKpVRkhAJJCSi
	dq 0
	dq LvSEpxAxDMwRBAmFpV
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 0001FC */
AUWXdHFwsrmsEvipxT:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+184]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+184]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, QTBdtNFCjXssNKjuhU
cmp ecx, 0
mov r10, GoLvMBHfrlCqKuFMNh
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
LvSEpxAxDMwRBAmFpV:
	dq AUWXdHFwsrmsEvipxT
	dq 0
	dq GoLvMBHfrlCqKuFMNh
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000202 */
NripTEBitpffFajEbh:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+184], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GoLvMBHfrlCqKuFMNh
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QTBdtNFCjXssNKjuhU:
	dq NripTEBitpffFajEbh
	dq 0
	dq GoLvMBHfrlCqKuFMNh
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000207 */
CExlxEGmjwttDkDOwX:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+192]
or r12d, [rsi+200]
or r12d, [rsi+208]
or r12d, [rsi+216]
mov [rsi+328], r12d
mov [rsi+368], r12
mov rcx, rdi
mov rdx, GSOWPgFOgotSMfUaNr
call BSVM2_Op_SARI_LLC /* OP:01C7-0000 */
mov ecx, [rsi+368]
mov rax, AQXftcBwTHlSGVFFEq
cmp ecx, 0
mov r10, EHJjbmQOuIrjLqeVkH
cmove rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
add rsp, 504
ret
align 8
GSOWPgFOgotSMfUaNr:
	dd 0x0029002E
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
GoLvMBHfrlCqKuFMNh:
	dq CExlxEGmjwttDkDOwX
	dq 0
	dq EHJjbmQOuIrjLqeVkH
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000219 */
OWHHgqEjBVHPCtluWF:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+192]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+192]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, GpxAmxJQmqweGCGjcc
cmp ecx, 0
mov r10, InCCGpDqPHGJOAcLgf
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
AQXftcBwTHlSGVFFEq:
	dq OWHHgqEjBVHPCtluWF
	dq 0
	dq InCCGpDqPHGJOAcLgf
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00021F */
NxucHCJvOQrgLsWfSp:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+192], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, InCCGpDqPHGJOAcLgf
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
GpxAmxJQmqweGCGjcc:
	dq NxucHCJvOQrgLsWfSp
	dq 0
	dq InCCGpDqPHGJOAcLgf
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000224 */
DSeNSUMwEbsKNENbNJ:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+200]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+200]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, OTeBoUGTsbGBLihdIS
cmp ecx, 0
mov r10, GiFTRMLhjmilAWtOJw
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
InCCGpDqPHGJOAcLgf:
	dq DSeNSUMwEbsKNENbNJ
	dq 0
	dq GiFTRMLhjmilAWtOJw
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00022A */
LbQVsKJxKTiuDWAsvV:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+200], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, GiFTRMLhjmilAWtOJw
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OTeBoUGTsbGBLihdIS:
	dq LbQVsKJxKTiuDWAsvV
	dq 0
	dq GiFTRMLhjmilAWtOJw
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00022F */
AxVkBFFDVRbCDHqFuw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+208]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+208]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, HbALeIMJFnCXCEIQeG
cmp ecx, 0
mov r10, CWOoeHMjtWPPJDepgB
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
GiFTRMLhjmilAWtOJw:
	dq AxVkBFFDVRbCDHqFuw
	dq 0
	dq CWOoeHMjtWPPJDepgB
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000235 */
LcLrOTCEhlDwGRmdLf:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+208], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CWOoeHMjtWPPJDepgB
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
HbALeIMJFnCXCEIQeG:
	dq LcLrOTCEhlDwGRmdLf
	dq 0
	dq CWOoeHMjtWPPJDepgB
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00023A */
PBsuaxEdfLEhHTQsTO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+216]
mov ecx, 0
sub eax, ecx
sub ecx, [rsi+216]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, JPbJNfEwoqxuJvDFQB
cmp ecx, 0
mov r10, CBGtOxGnsECdBWMOSx
cmovge rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
CWOoeHMjtWPPJDepgB:
	dq PBsuaxEdfLEhHTQsTO
	dq 0
	dq CBGtOxGnsECdBWMOSx
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000240 */
JKCHLBCHpDvLKBgJTg:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x00000000
mov [rsi+216], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, CBGtOxGnsECdBWMOSx
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
JPbJNfEwoqxuJvDFQB:
	dq JKCHLBCHpDvLKBgJTg
	dq 0
	dq CBGtOxGnsECdBWMOSx
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000245 */
EnkLVFLMlWOaGtThxk:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+192]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+192]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, CXaOrUOrtcwXGsOWdN
cmp ecx, 0
mov r10, OsSpbHBfESinPuDixE
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
CBGtOxGnsECdBWMOSx:
	dq EnkLVFLMlWOaGtThxk
	dq 0
	dq OsSpbHBfESinPuDixE
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00024B */
EWNcSrEXuDHVOMChwD:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+192], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, OsSpbHBfESinPuDixE
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CXaOrUOrtcwXGsOWdN:
	dq EWNcSrEXuDHVOMChwD
	dq 0
	dq OsSpbHBfESinPuDixE
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000250 */
QqxokkDgAsCIMNJkbP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+200]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+200]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, FnbUCvNFfOGJClLrjw
cmp ecx, 0
mov r10, KSjsCNNJFEGxFgudKx
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
OsSpbHBfESinPuDixE:
	dq QqxokkDgAsCIMNJkbP
	dq 0
	dq KSjsCNNJFEGxFgudKx
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000256 */
NGsXIjAXdMNcDNtbId:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+200], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, KSjsCNNJFEGxFgudKx
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
FnbUCvNFfOGJClLrjw:
	dq NGsXIjAXdMNcDNtbId
	dq 0
	dq KSjsCNNJFEGxFgudKx
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00025B */
BOeIfKAHmBREQJPIHm:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+208]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+208]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, QRVXXxKdfmNuDfroxE
cmp ecx, 0
mov r10, AMlaXcPLFmDeJUTLvd
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
KSjsCNNJFEGxFgudKx:
	dq BOeIfKAHmBREQJPIHm
	dq 0
	dq AMlaXcPLFmDeJUTLvd
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000261 */
BVQrcGBCcxBOEdpTeG:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+208], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, AMlaXcPLFmDeJUTLvd
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
QRVXXxKdfmNuDfroxE:
	dq BVQrcGBCcxBOEdpTeG
	dq 0
	dq AMlaXcPLFmDeJUTLvd
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000266 */
NCOklxOtCxAGOSadmO:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+216]
mov ecx, 255
sub eax, ecx
sub ecx, [rsi+216]
sar eax, 31
shr ecx, 31
or eax, ecx
mov [rsi+368], eax
mov ecx, [rsi+368]
mov rax, OAGrqWFSfCWgOcUGVj
cmp ecx, 0
mov r10, EHJjbmQOuIrjLqeVkH
cmovle rax, r10
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
add rsp, 504
ret
align 8
AMlaXcPLFmDeJUTLvd:
	dq NCOklxOtCxAGOSadmO
	dq 0
	dq EHJjbmQOuIrjLqeVkH
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00026C */
OhghHFQLatFlFdHcWo:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, 0x000000FF
mov [rsi+216], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, EHJjbmQOuIrjLqeVkH
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
OAGrqWFSfCWgOcUGVj:
	dq OhghHFQLatFlFdHcWo
	dq 0
	dq EHJjbmQOuIrjLqeVkH
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000271 */
OTqDPdJcavuiBhsMdv:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+128]
movzxb r12d, r12b
mov r13, [rsi+56]
mov [r13], r12b
mov r12d, [rsi+160]
movzxb r12d, r12b
mov r13, [rsi+56]
mov [r13+1], r12b
mov r12d, [rsi+192]
movzxb r12d, r12b
mov r13, [rsi+56]
mov [r13+2], r12b
mov r12d, 0x000000FF
mov r13, [rsi+56]
mov [r13+3], r12b
mov r12d, [rsi+136]
movzxb r12d, r12b
mov r13, [rsi+56]
mov [r13+4], r12b
mov r12d, [rsi+168]
movzxb r12d, r12b
mov r13, [rsi+56]
mov [r13+5], r12b
mov r12d, [rsi+200]
movzxb r12d, r12b
mov r13, [rsi+56]
mov [r13+6], r12b
mov r12d, 0x000000FF
mov r13, [rsi+56]
mov [r13+7], r12b
mov r12d, [rsi+144]
movzxb r12d, r12b
mov r13, [rsi+64]
mov [r13], r12b
mov r12d, [rsi+176]
movzxb r12d, r12b
mov r13, [rsi+64]
mov [r13+1], r12b
mov r12d, [rsi+208]
movzxb r12d, r12b
mov r13, [rsi+64]
mov [r13+2], r12b
mov r12d, 0x000000FF
mov r13, [rsi+64]
mov [r13+3], r12b
mov r12d, [rsi+152]
movzxb r12d, r12b
mov r13, [rsi+64]
mov [r13+4], r12b
mov r12d, [rsi+184]
movzxb r12d, r12b
mov r13, [rsi+64]
mov [r13+5], r12b
mov r12d, [rsi+216]
movzxb r12d, r12b
mov r13, [rsi+64]
mov [r13+6], r12b
mov r12d, 0x000000FF
mov r13, [rsi+64]
mov [rsi+376], r13
mov [r13+7], r12b
mov r12, [rsi+56]
lea r12, [r12+8]
mov [rsi+56], r12
mov r12, [rsi+64]
lea r12, [r12+8]
mov [rsi+368], r12
mov [rsi+64], r12
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, LFuBvqGSJPPEJJqOke
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
EHJjbmQOuIrjLqeVkH:
	dq OTqDPdJcavuiBhsMdv
	dq 0
	dq LFuBvqGSJPPEJJqOke
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000302 */
NOkHBMFjicPlLfEKDl:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+256]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, IcSoNlKXHatTEppjBd
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
LFuBvqGSJPPEJJqOke:
	dq NOkHBMFjicPlLfEKDl
	dq 0
	dq IcSoNlKXHatTEppjBd
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000307 */
PbJHxWOnhnaTECjnNR:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+264]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, GCuhJhGSaHoQNRXDrk
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
CFOQhaCHbDRwPmUKrQ:
	dq PbJHxWOnhnaTECjnNR
	dq 0
	dq GCuhJhGSaHoQNRXDrk
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00030C */
NEfHoJGVGaDaNCmxvC:
mov rdx, DuTTOGPaTkFTKgTKiK
jmp BSVM2_TrOp_NatCallG0
align 8
DuTTOGPaTkFTKgTKiK:
	dd 0x00060000
	dd 0x00000000
	dd 0x036D4750
	dd 0x00007FFF
	dq ItEJGFNudImPHHLmTK
	dq ItEJGFNudImPHHLmTK
	dq 0
PhSGFuHVVuthJRIBeQ:
	dq NEfHoJGVGaDaNCmxvC
	dq DuTTOGPaTkFTKgTKiK
	dq ItEJGFNudImPHHLmTK
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00030E */
EQHJhFDPxlRcCjVbQP:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+368]
mov [rsi+80], r12d
mov rax, 0x008D01DF1853C8AE
mov [rsi+368], rax
mov rcx, rdi
mov rdx, MaKrQeMAfcimLnWrET
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+80]
sub r12d, [rsi+72]
mov [rsi+384], r12
mov rcx, rdi
mov rdx, DcWKpUNBvNSkJrqlNP
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, CvINEKFDmkWaPmDaRd
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, IdfXqFOHnwKMBauQve
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
MaKrQeMAfcimLnWrET:
	dd 0x00040001
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DcWKpUNBvNSkJrqlNP:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
CvINEKFDmkWaPmDaRd:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IdfXqFOHnwKMBauQve:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq PcEcsIHcOhkpBfUico
	dq PcEcsIHcOhkpBfUico
	dq 0
ItEJGFNudImPHHLmTK:
	dq EQHJhFDPxlRcCjVbQP
	dq IdfXqFOHnwKMBauQve
	dq PcEcsIHcOhkpBfUico
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 00031F */
KmLhwtJtBbkrPASvNW:
mov rdx, FbMIUINbBwUEPxTvhf
jmp BSVM2_TrOp_RETIC
align 8
FbMIUINbBwUEPxTvhf:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq IWKWETCeUAwhGNLxwK
	dq IWKWETCeUAwhGNLxwK
	dq 0
PcEcsIHcOhkpBfUico:
	dq KmLhwtJtBbkrPASvNW
	dq FbMIUINbBwUEPxTvhf
	dq IWKWETCeUAwhGNLxwK
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000321 */
BPAsVOAjTwRAEMptIk:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, 0x008D01DF1853C8BE
mov [rsi+368], rax
xor rax, rax
mov [rsi+376], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LbEMQSMancJeANudnL
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
LbEMQSMancJeANudnL:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq ARgAdFLiMPHjGsTRxO
	dq ARgAdFLiMPHjGsTRxO
	dq 0
IWKWETCeUAwhGNLxwK:
	dq BPAsVOAjTwRAEMptIk
	dq LbEMQSMancJeANudnL
	dq ARgAdFLiMPHjGsTRxO
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_GetImageRGBA 000326 */
PvloXoCTUbSaBjrjUG:
mov rdx, CvsFaQCCOwhkLojePr
jmp BSVM2_TrOp_RETIC
align 8
CvsFaQCCOwhkLojePr:
	dd 0x00000000
	dd 0x00000000
	dd 0xFFFFFFFF
	dd 0x00000000
	dq 0
	dq ARgAdFLiMPHjGsTRxO
	dq 0
ARgAdFLiMPHjGsTRxO:
	dq PvloXoCTUbSaBjrjUG
	dq CvsFaQCCOwhkLojePr
	dq ARgAdFLiMPHjGsTRxO
	dq 0x000001DF1776E350
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_StoreTGA 000000 */
CKfcVIQjSrniEItDoq:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+40]
imul r12d, [rsi+48]
shl r12d, 2
add r12d, 64
mov [rsi+56], r12
mov rcx, rdi
mov rdx, ELpEJwQldqiPLgxdWr
call BSVM2_Op_NEWARR_UB /* OP:0089-0000 */
mov r12, [rsi+56]
mov [rsi+8], r12
mov r12, [rsi+8]
mov [rsi+56], r12
mov rcx, rdi
mov rdx, DdrvrQMPrmqxNCeChb
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov r12, [rsi+32]
mov [rsi+64], r12
mov rcx, rdi
mov rdx, JdvReGOEmOiELIPKoi
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, [rsi+40]
mov [rsi+72], eax
mov eax, [rsi+48]
mov [rsi+80], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, IXEdptAtipDdILPbNs
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
ELpEJwQldqiPLgxdWr:
	dd 0x00060000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
DdrvrQMPrmqxNCeChb:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
JdvReGOEmOiELIPKoi:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
IXEdptAtipDdILPbNs:
	dd 0x00000000
	dd 0x00000000
	dd 0x1776ED20
	dd 0x000001DF
	dq MELQvOFPVaEIAuvVSX
	dq MELQvOFPVaEIAuvVSX
	dq 0
AbsQQhPmgPIuDBfjel:
	dq CKfcVIQjSrniEItDoq
	dq IXEdptAtipDdILPbNs
	dq MELQvOFPVaEIAuvVSX
	dq 0x000001DF1776EF70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_StoreTGA 000019 */
CSURphHNGggtBxNUPH:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+16], r12d
mov rax, [rsi+24]
mov [rsi+56], rax
mov rax, 0x008D01DF1853C8E3
mov [rsi+64], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LgogIVFkeloqAFrbkm
add rsp, 504
jmp BSVM2_TrOp_NatCallG1
align 8
LgogIVFkeloqAFrbkm:
	dd 0x00000000
	dd 0x00000000
	dd 0x17766FA0
	dd 0x000001DF
	dq KeNwKTHrNkwvAPmqed
	dq KeNwKTHrNkwvAPmqed
	dq 0
MELQvOFPVaEIAuvVSX:
	dq CSURphHNGggtBxNUPH
	dq LgogIVFkeloqAFrbkm
	dq KeNwKTHrNkwvAPmqed
	dq 0x000001DF1776EF70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_StoreTGA 000021 */
DFebaPMdmejfQmfOih:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov r12, [rsi+56]
mov [rsi+0], r12
mov r12, [rsi+8]
mov [rsi+56], r12
mov rcx, rdi
mov rdx, CwTAerBSuTXqGQBQpq
call BSVM2_Op_CVTA2PTR /* OP:01B0-0000 */
mov eax, 0x00000001
mov [rsi+64], eax
mov eax, [rsi+16]
mov [rsi+72], eax
mov rax, [rsi+0]
mov [rsi+80], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, NVsESCDpdcFPOjSMad
add rsp, 504
jmp BSVM2_TrOp_NatCallG1
align 8
CwTAerBSuTXqGQBQpq:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NVsESCDpdcFPOjSMad:
	dd 0x00000000
	dd 0x00000000
	dd 0x17767240
	dd 0x000001DF
	dq DjCPiXCGnqJIPnqaet
	dq DjCPiXCGnqJIPnqaet
	dq 0
KeNwKTHrNkwvAPmqed:
	dq DFebaPMdmejfQmfOih
	dq NVsESCDpdcFPOjSMad
	dq DjCPiXCGnqJIPnqaet
	dq 0x000001DF1776EF70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_StoreTGA 00002F */
GGbdCCOcdVvTDEobHc:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+0]
mov [rsi+56], rax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, LVthkqMFKCkxLjdPhQ
add rsp, 504
jmp BSVM2_TrOp_NatCallG1
align 8
LVthkqMFKCkxLjdPhQ:
	dd 0x00000000
	dd 0x00000000
	dd 0x17767080
	dd 0x000001DF
	dq JssQnRANsqOAJTTnaK
	dq JssQnRANsqOAJTTnaK
	dq 0
DjCPiXCGnqJIPnqaet:
	dq GGbdCCOcdVvTDEobHc
	dq LVthkqMFKCkxLjdPhQ
	dq JssQnRANsqOAJTTnaK
	dq 0x000001DF1776EF70
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_StoreTGA 000034 */
IWExpnBLKKwlCWhOdI:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov rdi, rcx
mov rsi, [rdi+16]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov rdx, FvRcDuCrEKwnFtXqEE
add rsp, 504
jmp BSVM2_TrOp_RETIC
align 8
FvRcDuCrEKwnFtXqEE:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq JssQnRANsqOAJTTnaK
	dq 0
JssQnRANsqOAJTTnaK:
	dq IWExpnBLKKwlCWhOdI
	dq FvRcDuCrEKwnFtXqEE
	dq JssQnRANsqOAJTTnaK
	dq 0x000001DF1776EF70
	dq 0
	dq 0
	dq 0
	dq 0

[section .text]
/* PDJPG_FlattenTGA 000000 */
JItGPPKiXrgxOFFCqA:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov rax, [rsi+40]
mov [rsi+0], rax
xor r12, r12
mov r13, [rsi+0]
mov [r13], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+1], r12b
mov r12d, 0x00000002
mov r13, [rsi+0]
mov [r13+2], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+3], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+4], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+5], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+6], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+7], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+8], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+9], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+10], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+11], r12b
mov r12d, [rsi+56]
movzxb r12d, r12b
mov r13, [rsi+0]
mov [r13+12], r12b
mov [rsi+72], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, EWvDSEDhDUJNOMqRPQ
call BSVM2_Op_SARI_LLC /* OP:01C7-0000 */
mov r12, [rsi+72]
movzxb r12d, r12b
mov r13, [rsi+0]
mov [r13+13], r12b
mov r12d, [rsi+64]
movzxb r12d, r12b
mov r13, [rsi+0]
mov [r13+14], r12b
mov [rsi+72], r12
mov [rsi+80], r13
mov rcx, rdi
mov rdx, BebaNmIIAGqJQpOFvx
call BSVM2_Op_SARI_LLC /* OP:01C7-0000 */
mov r12, [rsi+72]
movzxb r12d, r12b
mov r13, [rsi+0]
mov [r13+15], r12b
mov r12d, 0x00000018
mov r13, [rsi+0]
mov [r13+16], r12b
xor r12, r12
mov r13, [rsi+0]
mov [r13+17], r12b
mov rax, 0x008D01DF1853C8EE
mov [rsi+72], rax
mov [rsi+80], r13
mov rcx, rdi
mov rdx, FaEajSCFJkFuBwIHuS
call BSVM2_Op_NEWARR_AC /* OP:0089-0000 */
mov r12d, [rsi+56]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, NbnfFVKVQnGGIjGTkB
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, PhmomUAgDFKrFhwjjK
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov r12d, [rsi+64]
mov [rsi+88], r12
mov rcx, rdi
mov rdx, AfSJmSIFgkeLKqesGq
call BSVM2_Op_CVTI2AA /* OP:0110-0000 */
mov rcx, rdi
mov rdx, ChlpvRLRkHhtJpbXkP
call BSVM2_Op_STIXAC /* OP:01AC-0000 */
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, IqmefIBcKMtvNvcjHS
add rsp, 504
jmp BSVM2_TrOp_CALLG
align 8
EWvDSEDhDUJNOMqRPQ:
	dd 0x00070009
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
BebaNmIIAGqJQpOFvx:
	dd 0x00080009
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000008
	dd 0x00000000
	dq 0
FaEajSCFJkFuBwIHuS:
	dd 0x00040002
	dd 0x00010000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
NbnfFVKVQnGGIjGTkB:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
PhmomUAgDFKrFhwjjK:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
AfSJmSIFgkeLKqesGq:
	dd 0x00000000
	dd 0x00020000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
ChlpvRLRkHhtJpbXkP:
	dd 0x00000000
	dd 0x00010000
	dd 0x00000002
	dd 0x00000000
	dd 0x00000001
	dd 0x00000000
	dq 0
IqmefIBcKMtvNvcjHS:
	dd 0x00000000
	dd 0x00000000
	dd 0x17770460
	dd 0x000001DF
	dq BWDXUANvxMVCLxTnVh
	dq BWDXUANvxMVCLxTnVh
	dq 0
OMSKvEPoJmMkFjildu:
	dq JItGPPKiXrgxOFFCqA
	dq IqmefIBcKMtvNvcjHS
	dq BWDXUANvxMVCLxTnVh
	dq 0x000001DF1776EE00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_FlattenTGA 000091 */
NhuBPrCoPhKfPWlgid:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov rdi, rcx
mov rsi, [rdi+16]
mov eax, [rsi+56]
imul eax, [rsi+64]
mov [rsi+32], eax
mov eax, 0x00000000
mov [rsi+8], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov rdx, JFNcVdMjMNMKAEAkKs
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
BWDXUANvxMVCLxTnVh:
	dq NhuBPrCoPhKfPWlgid
	dq 0
	dq JFNcVdMjMNMKAEAkKs
	dq 0x000001DF1776EE00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_FlattenTGA 000099 */
PcQfqJFdKnBILDgsOA:
mov rdx, PiuCHWEtxUtXBaCmlt
jmp BSVM2_TrOp_JCMPLL_GEI
align 8
PiuCHWEtxUtXBaCmlt:
	dd 0x00040001
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq EEKdMqKNwPAGNOmLJE
	dq NPsUjnKNkmbuOXtSeb
	dq 0
JFNcVdMjMNMKAEAkKs:
	dq PcQfqJFdKnBILDgsOA
	dq PiuCHWEtxUtXBaCmlt
	dq NPsUjnKNkmbuOXtSeb
	dq 0x000001DF1776EE00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_FlattenTGA 00009E */
JHFskoNTfeQrKoBOCw:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+472], rbx
mov [rsp+464], r12
mov [rsp+456], r13
mov [rsp+448], r14
mov [rsp+440], r15
mov rdi, rcx
mov rsi, [rdi+16]
mov r13, [rsi+8]
mov r15d, r13d
imul r15d, 4
mov r12d, r13d
imul r12d, 3
add r12d, 18
mov [rsi+24], r12d
mov r12, [rsi+48]
mov r13d, r15d
add r13d, 2
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov r13, [rsi+40]
mov rbx, [rsi+24]
mov r14d, ebx
add r14d, 0
movsxd rcx, r14d
mov [r13+rcx], r12b
mov r12, [rsi+48]
mov r13d, r15d
add r13d, 1
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov r13, [rsi+40]
mov r14d, ebx
add r14d, 1
movsxd rcx, r14d
mov [r13+rcx], r12b
mov r12, [rsi+48]
mov [rsi+16], r15
mov r13d, r15d
add r13d, 0
movsxd rcx, r13d
movzxb r12d, [r12+rcx]
mov r13, [rsi+40]
mov r14d, ebx
add r14d, 2
mov [rsi+80], r13
mov [rsi+88], r14
mov [rsi+72], r12
movsxd rcx, r14d
mov [r13+rcx], r12b
mov rcx, rdi
mov rbx, [rsp+472]
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov r14, [rsp+448]
mov r15, [rsp+440]
mov rdx, BBPMWQADFDNqDqSJFO
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
EEKdMqKNwPAGNOmLJE:
	dq JHFskoNTfeQrKoBOCw
	dq 0
	dq BBPMWQADFDNqDqSJFO
	dq 0x000001DF1776EE00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_FlattenTGA 0000D4 */
ChDRSKBkpxKiAGKgPb:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov rdi, rcx
mov rsi, [rdi+16]
inc dword [rsi+8]
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov rdx, JFNcVdMjMNMKAEAkKs
add rsp, 504
mov rax, [rdx+0]
jmp rax
align 8
BBPMWQADFDNqDqSJFO:
	dq ChDRSKBkpxKiAGKgPb
	dq 0
	dq JFNcVdMjMNMKAEAkKs
	dq 0x000001DF1776EE00
	dq 0
	dq 0
	dq 0
	dq 0
[section .text]
/* PDJPG_FlattenTGA 0000D9 */
AOthWUMMDtulNhKOfa:
sub rsp, 504
mov [rsp+488], rsi
mov [rsp+480], rdi
mov [rsp+464], r12
mov [rsp+456], r13
mov rdi, rcx
mov rsi, [rdi+16]
mov r12d, [rsi+32]
imul r12d, 3
mov [rsi+72], r12
mov eax, [rsi+72]
add eax, 18
mov [rsi+72], eax
mov rcx, rdi
mov rdi, [rsp+480]
mov rsi, [rsp+488]
mov r12, [rsp+464]
mov r13, [rsp+456]
mov rdx, NmixIoAgorSCQnqwkl
add rsp, 504
jmp BSVM2_TrOp_RETI
align 8
NmixIoAgorSCQnqwkl:
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dd 0x00000000
	dq 0
	dq NPsUjnKNkmbuOXtSeb
	dq 0
NPsUjnKNkmbuOXtSeb:
	dq AOthWUMMDtulNhKOfa
	dq NmixIoAgorSCQnqwkl
	dq NPsUjnKNkmbuOXtSeb
	dq 0x000001DF1776EE00
	dq 0
	dq 0
	dq 0
	dq 0

