//AHSRC:bsvm2/mm/mm_cell.c
int BGBDT_MM_AllocSObjChk();
int BGBDT_MM_AllocMObjChk();
int BGBDT_FindFreeCellsChk(BGBDT_MM_ChunkInfo *chk, int cells);
int BGBDT_MM_AllocCellsChk(BGBDT_MM_ChunkInfo *chk, int cells);
int BGBDT_FreeCellsChk(BGBDT_MM_ChunkInfo *chk, int idx, int cells);
int BGBDT_MM_LookupSObjChunkPtr(byte *ptr);
int BGBDT_MM_LookupMObjChunkPtr(byte *ptr);
int BGBDT_MM_LookupSObjChunkCellPtr(byte *ptr, int *rcell);
int BGBDT_MM_LookupMObjChunkCellPtr(byte *ptr, int *rcell);
int BGBDT_MM_LookupSObjChunkCellBasePtr(byte *ptr, int *rcell);
int BGBDT_MM_LookupMObjChunkCellBasePtr(byte *ptr, int *rcell);
byte *BGBDT_MM_LookupSObjPtrBase(byte *ptr);
byte *BGBDT_MM_LookupMObjPtrBase(byte *ptr);
void BGBDT_MM_FreeSObjPtr(byte *ptr);
void BGBDT_MM_FreeMObjPtr(byte *ptr);
byte *BGBDT_MM_AllocSObjCells(int cells);
byte *BGBDT_MM_AllocMObjCells(int cells);
byte *BGBDT_MM_AllocObjectInner(int size);
void BGBDT_MM_FreeObjectInner(byte *ptr);
byte *BGBDT_MM_GetObjectPtrBase(byte *ptr);
BS2VM_API void *BGBDT_MM_GetPtrForObjId(int objid);
BS2VM_API int BGBDT_MM_GetObjIdForPtr(void *ptr);
BS2VM_API void *BGBDT_MM_GetDataPtrForObjId(int objid);
//AHSRC:bsvm2/mm/mm_clsobj.c
BGBDTC_ClassInfo *BGBDTC_AllocClass();
BS2VM_API BGBDTC_ClassInfo *BGBDTC_LookupClassQName(char *qname);
BS2VM_API BGBDTC_ClassInfo *BGBDTC_GetClassQName(char *qname);
BGBDTC_ClassInfo *BGBDTC_LookupClassSqGix(int sqid, int gix);
BGBDTC_ClassInfo *BGBDTC_GetClassSqGix(int sqid, int gix);
void *BGBDTC_SlotI_GetPtr_Dfl(dtcObject obj, dtcField fi);
s32 BGBDTC_SlotI_GetI_DflSB(dtcObject obj, dtcField fi);
s32 BGBDTC_SlotI_GetI_DflUB(dtcObject obj, dtcField fi);
s32 BGBDTC_SlotI_GetI_DflSS(dtcObject obj, dtcField fi);
s32 BGBDTC_SlotI_GetI_DflUS(dtcObject obj, dtcField fi);
s32 BGBDTC_SlotI_GetI_DflI(dtcObject obj, dtcField fi);
s32 BGBDTC_SlotI_GetI_DeL(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DflSI(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DflUI(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DflL(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DeI(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DeF(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DeD(dtcObject obj, dtcField fi);
f32 BGBDTC_SlotI_GetF_DflF(dtcObject obj, dtcField fi);
f32 BGBDTC_SlotI_GetF_DflD(dtcObject obj, dtcField fi);
f32 BGBDTC_SlotI_GetF_DeL(dtcObject obj, dtcField fi);
f64 BGBDTC_SlotI_GetD_DflF(dtcObject obj, dtcField fi);
f64 BGBDTC_SlotI_GetD_DflD(dtcObject obj, dtcField fi);
f64 BGBDTC_SlotI_GetD_DeL(dtcObject obj, dtcField fi);
dtVal BGBDTC_SlotI_GetA_DflA(dtcObject obj, dtcField fi);
dtVal BGBDTC_SlotI_GetA_DflP(dtcObject obj, dtcField fi);
dtVal BGBDTC_SlotI_GetA_DflPF(dtcObject obj, dtcField fi);
dtVal BGBDTC_SlotI_GetA_DflArr(dtcObject obj, dtcField fi);
u16 bgbdtc_bswap_us(u16 v);
u32 bgbdtc_bswap_ui(u32 v);
u64 bgbdtc_bswap_ul(u64 v);
s16 bgbdtc_bswap_ss(s16 v);
s32 bgbdtc_bswap_si(s32 v);
s64 bgbdtc_bswap_sl(s64 v);
s32 BGBDTC_SlotI_GetI_DflSwSS(dtcObject obj, dtcField fi);
s32 BGBDTC_SlotI_GetI_DflSwUS(dtcObject obj, dtcField fi);
s32 BGBDTC_SlotI_GetI_DflSwI(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DflSwSI(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DflSwUI(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DflSwL(dtcObject obj, dtcField fi);
void BGBDTC_SlotI_SetI_DflSwS(dtcObject obj, dtcField fi, s32 v);
void BGBDTC_SlotI_SetI_DflSwI(dtcObject obj, dtcField fi, s32 v);
void BGBDTC_SlotI_SetL_DflSwL(dtcObject obj, dtcField fi, s64 v);
dtVal BGBDTC_SlotI_GetA_DeI(dtcObject obj, dtcField fi);
dtVal BGBDTC_SlotI_GetA_DeUI(dtcObject obj, dtcField fi);
dtVal BGBDTC_SlotI_GetA_DeL(dtcObject obj, dtcField fi);
dtVal BGBDTC_SlotI_GetA_DeF(dtcObject obj, dtcField fi);
dtVal BGBDTC_SlotI_GetA_DeD(dtcObject obj, dtcField fi);
s32 BGBDTC_SlotI_GetI_DeA(dtcObject obj, dtcField fi);
s64 BGBDTC_SlotI_GetL_DeA(dtcObject obj, dtcField fi);
f32 BGBDTC_SlotI_GetF_DeA(dtcObject obj, dtcField fi);
f64 BGBDTC_SlotI_GetD_DeA(dtcObject obj, dtcField fi);
void BGBDTC_SlotI_SetI_DflB(dtcObject obj, dtcField fi, s32 v);
void BGBDTC_SlotI_SetI_DflS(dtcObject obj, dtcField fi, s32 v);
void BGBDTC_SlotI_SetI_DflI(dtcObject obj, dtcField fi, s32 v);
void BGBDTC_SlotI_SetL_DflL(dtcObject obj, dtcField fi, s64 v);
void BGBDTC_SlotI_SetF_DflF(dtcObject obj, dtcField fi, f32 v);
void BGBDTC_SlotI_SetD_DflD(dtcObject obj, dtcField fi, f64 v);
void BGBDTC_SlotI_SetA_DflA(dtcObject obj, dtcField fi, dtVal v);
void BGBDTC_SlotI_SetA_DflP(dtcObject obj, dtcField fi, dtVal v);
void BGBDTC_SlotI_SetA_DflPF(dtcObject obj, dtcField fi, dtVal v);
void BGBDTC_SlotI_SetI_DeL(dtcObject obj, dtcField fi, s32 v);
void BGBDTC_SlotI_SetI_DeF(dtcObject obj, dtcField fi, s32 v);
void BGBDTC_SlotI_SetI_DeD(dtcObject obj, dtcField fi, s32 v);
void BGBDTC_SlotI_SetL_DeI(dtcObject obj, dtcField fi, s64 v);
void BGBDTC_SlotI_SetL_DeF(dtcObject obj, dtcField fi, s64 v);
void BGBDTC_SlotI_SetL_DeD(dtcObject obj, dtcField fi, s64 v);
void BGBDTC_SlotI_SetF_DeI(dtcObject obj, dtcField fi, f32 v);
void BGBDTC_SlotI_SetF_DeL(dtcObject obj, dtcField fi, f32 v);
void BGBDTC_SlotI_SetF_DeD(dtcObject obj, dtcField fi, f32 v);
void BGBDTC_SlotI_SetD_DeI(dtcObject obj, dtcField fi, f64 v);
void BGBDTC_SlotI_SetD_DeL(dtcObject obj, dtcField fi, f64 v);
void BGBDTC_SlotI_SetD_DeF(dtcObject obj, dtcField fi, f64 v);
void BGBDTC_SlotI_SetA_DeI(dtcObject obj, dtcField fi, dtVal v);
void BGBDTC_SlotI_SetA_DeL(dtcObject obj, dtcField fi, dtVal v);
void BGBDTC_SlotI_SetA_DeF(dtcObject obj, dtcField fi, dtVal v);
void BGBDTC_SlotI_SetA_DeD(dtcObject obj, dtcField fi, dtVal v);
void BGBDTC_SlotI_SetI_DeA(dtcObject obj, dtcField fi, s32 v);
void BGBDTC_SlotI_SetL_DeA(dtcObject obj, dtcField fi, s64 v);
void BGBDTC_SlotI_SetF_DeA(dtcObject obj, dtcField fi, f32 v);
void BGBDTC_SlotI_SetD_DeA(dtcObject obj, dtcField fi, f64 v);
dtVal BGBDTC_SlotI_GetA_ClsA(dtcObject obj, dtcField fi);
void BGBDTC_SlotI_SetA_ClsA(dtcObject obj, dtcField fi, dtVal v);
dtVal BGBDTC_SlotI_GetA_StrA(dtcObject obj, dtcField fi);
void BGBDTC_SlotI_SetA_StrA(dtcObject obj, dtcField fi, dtVal v);
dtVal BGBDTC_SlotI_GetA_IfaceA(dtcObject obj, dtcField fi);
void BGBDTC_SlotI_SetA_IfaceA(dtcObject obj, dtcField fi, dtVal v);
int BGBDTC_SlotSetupVtGetSet(BGBDTC_ClassInfo *cls, BGBDTC_SlotInfo *vi);
BS2VM_API int BGBDTC_FinishLayoutClass(BGBDTC_ClassInfo *cls);
BS2VM_API int BGBDTC_BeginLayoutClass(BGBDTC_ClassInfo *cls);
BS2VM_API int BGBDTC_EndLayoutClass(BGBDTC_ClassInfo *cls);
BS2VM_API BGBDTC_SlotInfo *BGBDTC_FetchClassSlotIndex(BGBDTC_ClassInfo *cls, int idx);
int BGBDTC_CheckExpandClassSlotIndex(BGBDTC_ClassInfo *cls, int idx);
BS2VM_API BGBDTC_SlotInfo *BGBDTC_GetClassSlotIndex(BGBDTC_ClassInfo *cls, int idx);
BS2VM_API BGBDTC_SlotInfo *BGBDTC_LookupClassSlotName(BGBDTC_ClassInfo *cls, char *name);
BS2VM_API BGBDTC_SlotInfo *BGBDTC_GetClassSlotName(BGBDTC_ClassInfo *cls, char *name);
BS2VM_API BGBDTC_SlotInfo *BGBDTC_LookupClassSlotNameSig(BGBDTC_ClassInfo *cls, char *name, char *sig);
BS2VM_API BGBDTC_SlotInfo *BGBDTC_LookupClassMatchSlot(BGBDTC_ClassInfo *cls, BGBDTC_SlotInfo *svi);
BS2VM_API dtcObject BGBDTC_AllocClassInstance(BGBDTC_ClassInfo *cls);
int BGBDTC_CheckExpandClassIfaceIndex(BGBDTC_ClassInfo *cls, int idx);
BS2VM_API int BGBDTC_CheckClassExtends(BGBDTC_ClassInfo *clsa, BGBDTC_ClassInfo *clsb);
BS2VM_API int BGBDTC_CheckClassImplements(BGBDTC_ClassInfo *clsa, BGBDTC_ClassInfo *clsb);
BS2VM_API int BGBDTC_CheckObjInstanceof(dtcObject obj, BGBDTC_ClassInfo *cls);
BS2VM_API int BGBDTC_CheckObjvObjectP(dtVal obj);
BS2VM_API int BGBDTC_CheckObjvInstanceof(dtVal obj, BGBDTC_ClassInfo *cls);
BS2VM_API s32 BGBDTC_GetCacheNameI(dtcObject obj,dtcField *rfi, char *qn, char *fn);
BS2VM_API s64 BGBDTC_GetCacheNameL(dtcObject obj,dtcField *rfi, char *qn, char *fn);
BS2VM_API f32 BGBDTC_GetCacheNameF(dtcObject obj,dtcField *rfi, char *qn, char *fn);
BS2VM_API f64 BGBDTC_GetCacheNameD(dtcObject obj,dtcField *rfi, char *qn, char *fn);
BS2VM_API dtVal BGBDTC_GetCacheNameA(dtcObject obj,dtcField *rfi, char *qn, char *fn);
BS2VM_API void *BGBDTC_GetCacheNamePtr(dtcObject obj,dtcField *rfi, char *qn, char *fn);
BS2VM_API int BGBDTC_SetCacheNameI(dtcObject obj,dtcField *rfi, char *qn, char *fn, s32 val);
BS2VM_API int BGBDTC_SetCacheNameL(dtcObject obj,dtcField *rfi, char *qn, char *fn, s64 val);
BS2VM_API int BGBDTC_SetCacheNameF(dtcObject obj,dtcField *rfi, char *qn, char *fn, f32 val);
BS2VM_API int BGBDTC_SetCacheNameD(dtcObject obj,dtcField *rfi, char *qn, char *fn, f64 val);
BS2VM_API int BGBDTC_SetCacheNameA(dtcObject obj,dtcField *rfi, char *qn, char *fn, dtVal val);
//AHSRC:bsvm2/mm/mm_lobj.c
int BGBDT_MM_AllocLObjInfo(void);
void BGBDT_MM_FreeLObjInfo(int cni);
int BGBDT_MM_LObjInfoToIndex(BGBDT_MM_LObjInfo *inf);
int BGBDT_MM_LObjRebalNode(int cni);
int BGBDT_MM_InsertLObjR(int cni, int lni);
int BGBDT_MM_InsertLObj(int lni);
int BGBDT_MM_AllocLObj(int sz);
byte *BGBDT_MM_AllocLObjPtr(int sz);
int BGBDT_MM_UnlinkLObjR(int cni, int lni);
int BGBDT_MM_UnlinkLObj(int lni);
int BGBDT_MM_LookupLObjR(int cni, byte *ptr);
int BGBDT_MM_LookupLObj(byte *ptr);
byte *BGBDT_MM_LookupLObjBase(byte *ptr);
void BGBDT_MM_FreeLObjPtr(byte *ptr);
byte *BGBDT_MM_GetLObjPtrForIndex(int lni);
//AHSRC:bsvm2/mm/mm_mapobj.c
int BGBDT_MapObj_HashNameSig(char *name, char *sig, char *flsig);
int BGBDT_MapObj_CheckStrMatch(char *str, char *ref);
int BGBDT_MapObj_CheckStrMatch2(char *str, char *ref);
BGBDT_MapObjFieldInfo *BGBDT_MapObj_GetFieldInfoForIndex(int sli);
int BGBDT_MapObj_LookupFieldIndex(char *name, char *sig, char *flsig);
int BGBDT_MapObj_GetFieldIndex(char *name, char *sig, char *flsig);
char *BGBDT_MapObj_GetFieldIndexName(int fidx);
char *BGBDT_MapObj_GetFieldIndexSig(int fidx);
char *BGBDT_MapObj_GetFieldIndexFlSig(int fidx);
BGBDT_MapObjHead *BGBDT_MapObj_AllocObj();
BGBDT_MapObjNode *BGBDT_MapObj_AllocNode();
void BGBDT_MapObj_FreeObjNodes(BGBDT_MapObjNode *no);
void BGBDT_MapObj_FreeObj(BGBDT_MapObjHead *obj);
int BGBDT_MapObj_SlotSoftMatch(int sli, int sref);
dtVal *BGBDT_MapObj_LookupNodeSlotSoftRef(BGBDT_MapObjHead *obj,BGBDT_MapObjNode *no, int sli);
dtVal *BGBDT_MapObj_LookupObjSlotSoftRef(BGBDT_MapObjHead *obj, int sli);
dtVal *BGBDT_MapObj_LookupNodeSlotRef(BGBDT_MapObjHead *obj,BGBDT_MapObjNode *no, int sli);
dtVal *BGBDT_MapObj_LookupObjSlotRef(BGBDT_MapObjHead *obj, int sli);
void BGBDT_MapObj_InsertOrSplitNode(BGBDT_MapObjHead *obj,BGBDT_MapObjNode *no, BGBDT_MapObjNode *cno1, BGBDT_MapObjNode *cno2);
dtVal *BGBDT_MapObj_GetNodeSlotRef(BGBDT_MapObjHead *obj,BGBDT_MapObjNode *no, int sli);
dtVal *BGBDT_MapObj_GetObjSlotRef(BGBDT_MapObjHead *obj, int sli);
dtVal BGBDT_MapObj_LookupObjSlotValueName(BGBDT_MapObjHead *obj, char *name);
int BGBDT_MapObj_SetObjSlotValueName(BGBDT_MapObjHead *obj, char *name, dtVal val);
int BGBDT_MapObj_BindObjSlotValueName(BGBDT_MapObjHead *obj, char *name, dtVal val);
BS2VM_API dtVal BGBDT_MapObj_AllocObjv();
BS2VM_API int BGBDT_MapObj_BindObjvSlotValueName(dtVal objv, char *name, dtVal val);
BS2VM_API dtVal BGBDT_MapObj_GetObjvSlotValue(dtVal objv, int sli);
BS2VM_API dtVal BGBDT_MapObj_GetObjvSlotValueName(dtVal objv, char *name);
BS2VM_API int BGBDT_MapObj_IsObjectP(dtVal objv);
int BGBDT_MapObj_QueryNodeSlotList(BGBDT_MapObjHead *obj,BGBDT_MapObjNode *no, int *slis, int mslis);
BS2VM_API int BGBDT_MapObj_GetObjSlotCount(dtVal objv);
BS2VM_API int BGBDT_MapObj_QueryObjSlotList(dtVal objv, int *slis, int mslis);
//AHSRC:bsvm2/mm/mm_objty.c
int BGBDT_MM_QHashName(char *name);
BS2VM_API int BGBDT_MM_LookupIndexObjTypeName(char *name);
BS2VM_API int BGBDT_MM_GetIndexObjTypeName(char *name);
BS2VM_API char *BGBDT_MM_GetObjTypeNameForIndex(int idx);
int BGBDT_MM_GetIndexObjLLn(char *fn, int ln);
int BGBDT_MM_QHashBytes(byte *buf, int sz);
BS2VM_API byte *BGBDT_MM_AllocObject(int tyid, int size, int lln);
BS2VM_API void *BGBDT_MM_AllocLLn(char *type, int size, char *fn, int ln);
BS2VM_API void *BGBDT_MM_ReallocLLn(void *ptr, int size, char *fn, int ln);
BS2VM_API int BGBDT_MM_GetSize(void *ptr);
BS2VM_API int BGBDT_MM_GetTypeID(void *ptr);
BS2VM_API char *BGBDT_MM_GetTypeName(void *ptr);
BS2VM_API void *BGBDT_MM_GetBase(void *ptr);
BS2VM_API void BGBDT_MM_FreeAny(void *ptr);
BS2VM_API void BGBDT_MM_Free(void *ptr);
BS2VM_API void BGBDT_MM_Destroy(void *ptr);
BS2VM_API dtVal BGBDT_MM_DtvWrapObjPtrF(void *ptr);
BS2VM_API dtVal BGBDT_MM_DtvWrapObjPtr(void *ptr);
//AHSRC:bsvm2/mm/mm_tagarith.c
dtVal BGBDT_TagAri_Add(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Sub(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Mul(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Div(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Mod(dtVal a, dtVal b);
dtVal BGBDT_TagAri_And(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Or(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Xor(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Shl(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Shr(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Sar(dtVal a, dtVal b);
dtVal BGBDT_TagAri_Neg(dtVal a);
dtVal BGBDT_TagAri_Not(dtVal a);
dtVal BGBDT_TagAri_LNot(dtVal a);
int BGBDT_TagAri_Compare(dtVal a, dtVal b);
//AHSRC:bsvm2/mm/mm_tagarr.c
int BGBDT_TagArr_BaseTypeSize(int bty);
BS2VM_API dtVal BGBDT_TagArr_NewArray(int size, int bty);
BS2VM_API int BGBDT_TagArr_FreeArray(dtVal objv);
int BGBDT_TagArr_IsArrayP(dtVal objv);
int BGBDT_TagArr_IsArrayBtyP(dtVal objv, int bty);
dtVal BGBDT_TagArr_GetIndexVariant(dtVal arr, int idx);
void BGBDT_TagArr_SetIndexVariant(dtVal arr, int idx, dtVal val);
BS2VM_API dtVal BGBDT_TagTy_EncodeRotLong(s64 value);
BS2VM_API s64 BGBDT_TagTy_DecodeRotLong(dtVal val);
//AHSRC:bsvm2/mm/mm_tagparse.c
char *BGBDT_TagParse_EatWhiteOnly(char *s);
char *BGBDT_TagParse_EatWhite(char *s);
int BGBDT_TagParse_ParseHexN(char *s, int n);
char *BGBDT_TagParse_ReadUtf8(char *sb, int *rv);
char *BGBDT_TagParse_EmitUtf8(char *t, int v);
char *BGBDT_TagParse_ParseTokenBasic(char *s, char *tb);
s64 BGBDT_TagParse_ParseInt(char *s);
double BGBDT_TagParse_ParseFloat(char *s);
dtVal BGBDT_TagParse_ParseValueArr(BGBDT_MM_ParsePrintInfo *inf);
dtVal BGBDT_TagParse_ParseValue(BGBDT_MM_ParsePrintInfo *inf);
dtVal BGBDT_TagParse_ParseEntObj(BGBDT_MM_ParsePrintInfo *inf);
BS2VM_API BGBDT_MM_ParsePrintInfo *BGBDT_TagParse_NewStringParser(char *strbuf, int szbuf);
BS2VM_API dtVal BGBDT_TagParse_ParseValueFromStrBuf(char *strbuf, int szbuf);
BS2VM_API dtVal BGBDT_TagParse_ParseValueFromLoadFile(char *name);
//AHSRC:bsvm2/mm/mm_tagprint.c
BS2VM_API BGBDT_MM_ParsePrintInfo *BGBDT_MM_AllocParsePrintInfo();
BS2VM_API int BGBDT_MM_FreeParsePrintInfo(BGBDT_MM_ParsePrintInfo *inf);
int bgbdt_mm_strprint_putstr(BGBDT_MM_ParsePrintInfo *inf, char *str);
int bgbdt_mm_strprint_putdystr(BGBDT_MM_ParsePrintInfo *inf, char *str);
BS2VM_API void BGBDT_MM_SetPuts(int (*fp)(char *str));
int bgbdt_mm_printf(char *str, ...);
int bgbdt_mm_conprint_putstr(BGBDT_MM_ParsePrintInfo *inf, char *str);
BS2VM_API BGBDT_MM_ParsePrintInfo *BGBDT_MM_NewStringPrinter(char *strbuf, int szbuf);
BS2VM_API BGBDT_MM_ParsePrintInfo *BGBDT_MM_NewConsolePrinter(void);
BS2VM_API BGBDT_MM_ParsePrintInfo *BGBDT_MM_NewDynamicStringPrinter(int szbuf);
int BGBDT_MM_PrintPutStr(BGBDT_MM_ParsePrintInfo *inf, char *str);
int BGBDT_MM_PrintPutInt(BGBDT_MM_ParsePrintInfo *inf, s64 v);
int BGBDT_MM_PrintPutIntHex64(BGBDT_MM_ParsePrintInfo *inf, s64 v);
int BGBDT_MM_PrintPutIntHex64B(BGBDT_MM_ParsePrintInfo *inf, s64 v);
int BGBDT_MM_PrintPutFloat(BGBDT_MM_ParsePrintInfo *inf, double v);
int BGBDT_MM_PrintPutPrintf(BGBDT_MM_ParsePrintInfo *inf, char *str, ...);
int BGBDT_MM_PrintPutString(BGBDT_MM_ParsePrintInfo *inf, char *str);
int BGBDT_MM_PrintObjValue(BGBDT_MM_ParsePrintInfo *inf, dtVal val);
int BGBDT_MM_PrintMapObjValue(BGBDT_MM_ParsePrintInfo *inf, dtVal val);
int BGBDT_MM_PrintTagArr(BGBDT_MM_ParsePrintInfo *inf, dtVal val);
BS2VM_API int BGBDT_MM_PrintValue(BGBDT_MM_ParsePrintInfo *inf, dtVal val);
BS2VM_API int BGBDT_MM_PrintValueToStrBuf(char *strbuf, int szbuf, dtVal val);
BS2VM_API int BGBDT_MM_FormatPrintTabs(BGBDT_MM_ParsePrintInfo *inf, int ntab);
int BGBDT_MM_FormatObjValue(BGBDT_MM_ParsePrintInfo *inf, dtVal val);
int BGBDT_MM_FormatMapObjValue(BGBDT_MM_ParsePrintInfo *inf, dtVal val);
int BGBDT_MM_FormatTagArr(BGBDT_MM_ParsePrintInfo *inf, dtVal val);
BS2VM_API int BGBDT_MM_FormatValue(BGBDT_MM_ParsePrintInfo *inf, dtVal val);
BS2VM_API int BGBDT_MM_FormatValueToStrBuf(char *strbuf, int szbuf, dtVal val);
//AHSRC:bsvm2/mm/mm_tagstr.c
void BGBDT_TagStr_InitTypes(void);
char *BGBDT_TagStr_TabStrdup(BGBDT_TagStrTab *tab, char *str);
int bgbdt_strcmp16(u16 *s1, u16 *s2);
int bgbdt_strlen16(u16 *str);
void bgbdt_strcpy16(u16 *sdst, u16 *ssrc);
u16 *BGBDT_TagStr_TabStrdup16(BGBDT_TagStrTab16 *tab, u16 *str);
BS2VM_API char *BGBDT_TagStr_Strdup(char *str);
BS2VM_API char *BGBDT_TagStr_StrdupL1(char *str);
BS2VM_API u16 *BGBDT_TagStr_Strdup16(u16 *str);
BS2VM_API char *BGBDT_TagStr_StrSymbol(char *str);
BS2VM_API char *BGBDT_TagStr_StrKeyword(char *str);
BS2VM_API u16 *BGBDT_TagStr_Strdup16u8(char *str);
BS2VM_API dtVal BGBDT_TagStr_String(char *str);
BS2VM_API dtVal BGBDT_TagStr_StringAsc(char *str);
BS2VM_API dtVal BGBDT_TagStr_String16(u16 *str);
BS2VM_API dtVal BGBDT_TagStr_String16u8(byte *str);
BS2VM_API dtVal BGBDT_TagStr_Symbol(char *str);
BS2VM_API dtVal BGBDT_TagStr_Keyword(char *str);
BS2VM_API int BGBDT_TagStr_IsStringP(dtVal val);
BS2VM_API int BGBDT_TagStr_IsSymbolP(dtVal val);
BS2VM_API int BGBDT_TagStr_IsKeywordP(dtVal val);
BS2VM_API char *BGBDT_TagStr_GetUtf8(dtVal val);
BS2VM_API char *BGBDT_TagStr_GetChars(dtVal val);
BS2VM_API int BGBDT_TagStr_SymbolIsP(dtVal val, char *name);
BS2VM_API dtVal BGBDT_TagStr_StringAdjustOffset(dtVal val, int idx);
//AHSRC:bsvm2/mm/mm_thread.c
thContext *thGetContext();
void *BIPRO_LookupLabelOS(char *name);
void bipro_thread_markctx(thContext *inf);
void bipro_thread_mark();
void bipro_thread_init();
int thAllocTls();
int thAllocTlsName(char *name, int sz);
void thFreeTls(int idx);
void *thGetTlsValue(int idx);
void thSetTlsValue(int idx, void *val);
void *thGetTlsPtr(int idx);
void *thThread(int (*fcn)(void *ptr), void *ptr);
void BIPRO_SuspendThreads();
void BIPRO_ResumeThreads();
void BIPRO_HandleThreadStates(void (*fcn)(thContext *inf));
void BIPRO_GetThreadRegisterState(thContext *inf, BIPRO_RegisterState *regs);
void *thMutex();
void thLockMutex(void *p);
int thTryLockMutex(void *p);
void thUnlockMutex(void *p);
void thFreeMutex(void *p);
void *thFastMutex();
void thLockFastMutex(void *p);
int thTryLockFastMutex(void *p);
void thLockFastMutexLLn(void *p, char *fn, int ln);
int thTryLockFastMutexLLn(void *p, char *fn, int ln);
void thUnlockFastMutex(void *p);
void thFreeFastMutex(void *p);
void thSleep(int ms);
thContext *thGetContext();
int thGetTlsTlsW32();
void thWaitPtr(void *ptr);
void thSignalPtr(void *ptr);
void BIPRO_SuspendThreads();
void BIPRO_ResumeThreads();
void *BIPRO_ThreadProcLnx(void *parm);
void *thThread(int (*fcn)(void *ptr), void *ptr);
void *thMutexLL();
void *thMutex();
void thLockMutex(void *p);
int thTryLockMutex(void *p);
void thUnlockMutex(void *p);
void thFreeMutex(void *p);
void *thFastMutex();
void thLockFastMutex(void *p);
int thTryLockFastMutex(void *p);
void thUnlockFastMutex(void *p);
void thFreeFastMutex(void *p);
void thSleep(int ms);
thContext *thGetContext();
void thWaitPtr(void *ptr);
void thSignalPtr(void *ptr);
char *bipro_strdup(char *str);
void BIPRO_AddExeSection(char *name, s64 va, s64 sz, int fl);
char *BIPRO_LookupExeSectionPtrName(void *ptr);
void BIPRO_AddSym(char *name, void *ptr);
void *BIPRO_LookupLabel(char *name);
int BIPRO_GetModuleListOS(char **buf, int max);
char **BIPRO_GetEnvironOS();
void BIPRO_ProbeTst(byte *buf, int sz);
void BIPRO_UpdateDllsOS(void *hmod);
int BIPRO_InitDllsOS();
int BIPRO_LoadDynamicOS(char *name);
void *BIPRO_LoadModuleFileDataOS(char *name, int *rsz);
void BIPRO_FreeModuleDataOS(void *buf);
void BIPRO_UpdateProxyOS(char *name, void *ptr);
void *BIPRO_LookupLabelOS_1(char *name);
void *BIPRO_LookupLabelOS_2(char *name, int *rfl);
void *BIPRO_LookupLabelOS(char *name);
int BIPRO_InitDbgHelpOS();
char *BIPRO_NameOS(void *addr, void **addr2);
int BIPRO_ProcessMAP(char *name);
int BIPRO_ProcessEXE(char *name);
void *BLNK_LookupLabelOS(char *name);
void *BIPRO_LookupLabelOS(char *name);
char *BLNK_LookupAddrNameOS(void *addr, void **addr2);
char *BIPRO_LookupAddrNameOS(void *ptr, void **rbase);
void *BIPRO_LookupLabelOS(char *name);
char *BIPRO_LookupAddrNameOS(void *ptr, void **rbase);
char *BIPRO_GetNamePtr(void *ptr);
char *BIPRO_GetLastNamePtr(void *ptr, void **rbp);
char *BIPRO_GetAddrName(void *ptr);
char *BIPRO_GetAddrLastName(void *ptr, void **rbp);
char *BIPRO_LookupSectionAddrName(void *ptr);
//AHSRC:bsvm2/mm/mm_typesig.c
char *BGBDTC_SigNext(char *sig);
char *BGBDTC_SigGetRet(char *sig);
int BGBDTC_GetSigOpZ(char *sig);
int BGBDTC_GetSigBType(char *sig);
int BGBDTC_GetSigSizeAlign(char *sig, int *rsz, int *ral);
//AHSRC:bsvm2/mm/mm_util.c
BS2VM_API void *bgbdt_mm_malloc(int sz);
BS2VM_API void *bgbdt_mm_realloc(void *ptr, int sz);
BS2VM_API void bgbdt_mm_free(void *ptr);
BS2VM_API char *bgbdt_mm_strdup(char *str);
BS2VM_API void *bgbdt_mm_ralloc(int sz);
BS2VM_API char *bgbdt_mm_rstrdup(char *str);
BS2VM_API s64 bgbdt_mm_ratoi(char *str);
BS2VM_API char **bgbdt_mm_rsplit(char *s);
BS2VM_API char *bgbdt_mm_rsgets(char *buf, int lim, char *str);
//AHSRC:bsvm2/mm/mm_vfs.c
void *bgbdt_mm_fopen_tmp(char *name, char *mode);
s64 bgbdt_mm_tell_tmp(void *fd);
int bgbdt_mm_seek_tmp(void *fd, s64 pos, int rel);
BGBDT_MM_IOFuncs *bgbdt_mm_getio();
BS2VM_API BGBDT_MM_IOFuncs *BGBDT_MM_GetIOFuncs();
void bgbdt_mm_initvfs();
BS2VM_API void *bgbdt_mm_fopen(char *name, char *mode);
BS2VM_API void bgbdt_mm_fclose(void *fd);
BS2VM_API int bgbdt_mm_fread(void *buf, int m, int n, void *fd);
BS2VM_API int bgbdt_mm_fwrite(void *buf, int m, int n, void *fd);
BS2VM_API int bgbdt_mm_feof(void *fd);
BS2VM_API s64 bgbdt_mm_ftell(void *fd);
BS2VM_API int bgbdt_mm_fseek(void *fd, s64 pos, int rel);
BS2VM_API int bgbdt_mm_fgetc(void *fd);
BS2VM_API void bgbdt_mm_fputc(int c, void *fd);
BS2VM_API void *bgbdt_mm_loadfile(char *name, int *rsz);
BS2VM_API int bgbdt_mm_storefile(char *name, void *buf, int sz);
BS2VM_API int bgbdt_mm_storetextfile(char *name, char *buf);
//AHSRC:bsvm2/mm/mm_worker.c
int bgbdt_work_worker(void *ptr);
BS2VM_API void BGBDT_Work_SubmitItem(BGBDT_WorkItem *item);
BS2VM_API BGBDT_WorkItem *BGBDT_Work_AllocItem();
BS2VM_API void BGBDT_Work_FreeItem(BGBDT_WorkItem *item);
BS2VM_API void BGBDT_Work_KillWorkers(void);
//AHSRC:bsvm2/mm/mm_xi128.c
BS2VM_API BGBDTC_X128 *BGBDT_XI128_AllocInt128(void);
BS2VM_API void BGBDT_XI128_FreeInt128(BGBDTC_X128 *xp);
BS2VM_API bool BGBDT_XI128_IsInt128P(dtVal objv);
BS2VM_API bool BGBDT_XI128_IsSmallInt128P(dtVal objv);
BS2VM_API BGBDTC_X128 BGBDT_XI128_FromLong(s64 li);
BS2VM_API BGBDTC_X128 BGBDT_XI128_FromLong2(u64 lo, u64 hi);
BS2VM_API s64 BGBDT_XI128_ToLong(BGBDTC_X128 a);
BS2VM_API char *BGBDT_XI128_DumpString(BGBDTC_X128 a);
BS2VM_API void BGBDT_XI128_ToStringBuf(BGBDTC_X128 a, char *buf, int wfl);
BS2VM_API char *BGBDT_XI128_ToString(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_FromString(char *str);
BS2VM_API BGBDTC_X128 BGBDT_XI128_FromStringD(char *str, int w);
BS2VM_API BGBDTC_X128 BGBDT_XI128_FromStringRx(char *str, int rx);
BS2VM_API BGBDTC_X128 BGBDT_XI128_AddIX(BGBDTC_X128 a, int b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_AddX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_NegX(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_NotX(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_SubX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_SubX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API void BGBDT_XI128_AddWX(BGBDTC_X128 aa, BGBDTC_X128 ab, BGBDTC_X128 ba, BGBDTC_X128 bb, BGBDTC_X128 *rca, BGBDTC_X128 *rcb);
BS2VM_API void BGBDT_XI128_NegWX(BGBDTC_X128 aa, BGBDTC_X128 ab,BGBDTC_X128 *rca, BGBDTC_X128 *rcb);
BS2VM_API void BGBDT_XI128_NotWX(BGBDTC_X128 aa, BGBDTC_X128 ab,BGBDTC_X128 *rca, BGBDTC_X128 *rcb);
BS2VM_API void BGBDT_XI128_SubWX(BGBDTC_X128 aa, BGBDTC_X128 ab, BGBDTC_X128 ba, BGBDTC_X128 bb, BGBDTC_X128 *rca, BGBDTC_X128 *rcb);
BS2VM_API BGBDTC_X128 BGBDT_XI128_MulX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API int BGBDT_XI128_MulwX(BGBDTC_X128 a, BGBDTC_X128 b,BGBDTC_X128 *rc, BGBDTC_X128 *rd);
BS2VM_API BGBDTC_X128 BGBDT_XI128_AndX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_OrX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_XorX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_ShlpX(BGBDTC_X128 a, int b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_ShrpX(BGBDTC_X128 a, int b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_SarpX(BGBDTC_X128 a, int b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_ShlX(BGBDTC_X128 a, int b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_ShrX(BGBDTC_X128 a, int b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_SarX(BGBDTC_X128 a, int b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_ShrlX(BGBDTC_X128 a, int b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_ShlrX(BGBDTC_X128 a, int b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shr1X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shr2X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shr4X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shr8X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shr16X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shr32X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shl1X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shl2X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shl4X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shl8X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shl16X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shl32X(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XI128_ShrdpX(BGBDTC_X128 a, BGBDTC_X128 b, int n);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shrd1X(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shrd2X(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shrd4X(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shrd8X(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shrd16X(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shrd32X(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_ShldpX(BGBDTC_X128 a, BGBDTC_X128 b, int n);
BS2VM_API BGBDTC_X128 BGBDT_XI128_Shld1X(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API bool BGBDT_XI128_ZeroXP(BGBDTC_X128 a);
BS2VM_API bool BGBDT_XI128_NegXP(BGBDTC_X128 a);
BS2VM_API int BGBDT_XI128_CmpSgX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API int BGBDT_XI128_CmpX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API int BGBDT_XI128_CmpWX(BGBDTC_X128 aa, BGBDTC_X128 ab, BGBDTC_X128 ba, BGBDTC_X128 bb);
BS2VM_API BGBDTC_X128 BGBDT_XI128_OrBitX(BGBDTC_X128 a, int pos);
BS2VM_API int BGBDT_XI128_DivuXI(BGBDTC_X128 a, BGBDTC_X128 b,BGBDTC_X128 *rq, BGBDTC_X128 *rr);
BS2VM_API int BGBDT_XI128_DivW1XI(BGBDTC_X128 al, BGBDTC_X128 ah, BGBDTC_X128 b, BGBDTC_X128 *rq, BGBDTC_X128 *rr);
BS2VM_API int BGBDT_XI128_Divu2nXI(BGBDTC_X128 a, u32 bv, BGBDTC_X128 *rq, BGBDTC_X128 *rr);
BS2VM_API int BGBDT_XI128_DivXI(BGBDTC_X128 a, BGBDTC_X128 b,BGBDTC_X128 *rq, BGBDTC_X128 *rr);
BS2VM_API int BGBDT_XI128_Div2XI(BGBDTC_X128 a, BGBDTC_X128 b,BGBDTC_X128 *rq);
BS2VM_API BGBDTC_X128 BGBDT_XI128_DivX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XI128_ModX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API dtVal BGBDT_XI128_WrapInt128(BGBDTC_X128 a);
BS2VM_API dtVal BGBDT_XI128_WrapInt128L(s64 l);
BS2VM_API dtVal BGBDT_XI128_WrapInt128L2(u64 lo, u64 hi);
BS2VM_API void BGBDT_XI128_GetInt128v(dtVal vec, BGBDTC_X128 *v);
BS2VM_API BGBDTC_X128 BGBDT_XI128_UnwrapInt128(dtVal vec);
dtVal BGBDT_XI128_Add(dtVal a, dtVal b);
dtVal BGBDT_XI128_Sub(dtVal a, dtVal b);
dtVal BGBDT_XI128_Mul(dtVal a, dtVal b);
dtVal BGBDT_XI128_Div(dtVal a, dtVal b);
dtVal BGBDT_XI128_Mod(dtVal a, dtVal b);
dtVal BGBDT_XI128_And(dtVal a, dtVal b);
dtVal BGBDT_XI128_Or(dtVal a, dtVal b);
dtVal BGBDT_XI128_Xor(dtVal a, dtVal b);
dtVal BGBDT_XI128_Shl(dtVal a, dtVal b);
dtVal BGBDT_XI128_Shr(dtVal a, dtVal b);
dtVal BGBDT_XI128_Sar(dtVal a, dtVal b);
dtVal BGBDT_XI128_Neg(dtVal a);
dtVal BGBDT_XI128_Not(dtVal a);
dtVal BGBDT_XI128_LNot(dtVal a);
int BGBDT_XI128_Compare(dtVal a, dtVal b);
int BGBDT_XI128_CompareB(dtVal a, dtVal b);
//AHSRC:bsvm2/mm/mm_xf128.c
BS2VM_API BGBDTC_X128 *BGBDT_XF128_AllocFloat128(void);
BS2VM_API void BGBDT_XF128_FreeFloat128(BGBDTC_X128 *xp);
BS2VM_API BGBDTC_X128 BGBDT_XF128_FromInt128(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XF128_FromLong(s64 a);
BS2VM_API BGBDTC_X128 BGBDT_XF128_FromDouble(double v);
BS2VM_API double BGBDT_XF128_ToDouble(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XF128_ToInt128(BGBDTC_X128 a);
BS2VM_API void BGBDT_XF128_ToStringBuf(BGBDTC_X128 a,char *buf, int wfl);
BS2VM_API char *BGBDT_XF128_ToString(BGBDTC_X128 a);
BS2VM_API char *BGBDT_XF128_ToStringWd(BGBDTC_X128 a, int wfl);
BS2VM_API BGBDTC_X128 BGBDT_XF128_FromString(char *str);
BS2VM_API BGBDTC_X128 BGBDT_XF128_Exp10x(int exe);
BS2VM_API BGBDTC_X128 BGBDT_XF128_NegX(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XF128_GetMantissaX(BGBDTC_X128 a);
BS2VM_API int BGBDT_XF128_GetExponentX(BGBDTC_X128 a);
BS2VM_API int BGBDT_XF128_FixupMantissaNarrowX(BGBDTC_X128 a, BGBDTC_X128 *rc, int *rexp);
BS2VM_API int BGBDT_XF128_FixupMantissaWideX(BGBDTC_X128 a, BGBDTC_X128 b, BGBDTC_X128 *rc, int *rexp);
BS2VM_API BGBDTC_X128 BGBDT_XF128_AddX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XF128_SubX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XF128_MulX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XF128_RcpX(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XF128_DivX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API int BGBDT_XF128_CmpX(BGBDTC_X128 a, BGBDTC_X128 b, int ord);
BS2VM_API int BGBDT_XF128_IsFloat128P(dtVal objv);
BS2VM_API int BGBDT_XF128_IsSmallFloat128P(dtVal objv);
BS2VM_API dtVal BGBDT_XF128_WrapFloat128(BGBDTC_X128 a);
BS2VM_API dtVal BGBDT_XF128_WrapFloat128L2(u64 lo, u64 hi);
BS2VM_API BGBDTC_X128 BGBDT_XF128_UnwrapFloat128(dtVal vec);
BS2VM_API dtVal BGBDT_XF128_Add(dtVal a, dtVal b);
//AHSRC:bsvm2/mm/mm_xd128.c
BS2VM_API void BGBDT_XD128_UnpackDPD(BGBDTC_X128 a, s32 *tb);
BS2VM_API BGBDTC_X128 BGBDT_XD128_PackDPD(s32 *ta);
BS2VM_API void BGBDT_XD128_AdjustAddDPD(s32 *ta, s32 *tc);
BS2VM_API void BGBDT_XD128_ShrDPD1(s32 *ta, s32 *tb);
BS2VM_API void BGBDT_XD128_ShrDPD(s32 *ta, s32 *tc, int c);
void BGBDT_XD128_NormDPD(s32 *ta, s32 *tc);
void BGBDT_XD128_NegDPD(s32 *ta, s32 *tb);
BS2VM_API BGBDTC_X128 BGBDT_XD128_AddX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XD128_SubX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XD128_MulX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API BGBDTC_X128 BGBDT_XD128_RcpX(BGBDTC_X128 a);
BS2VM_API BGBDTC_X128 BGBDT_XD128_DivX(BGBDTC_X128 a, BGBDTC_X128 b);
BS2VM_API void BGBDT_XD128_DumpStr(BGBDTC_X128 a, char *buf);
s32 bgbdt_xd128_readdgts(char **rs, int n);
BS2VM_API BGBDTC_X128 BGBDT_XD128_ReadDumpStr(char *buf);
//AHSRC:bsvm2/mm/mm_xvec.c
BGBDTC_X128 *BGBDT_XV128_AllocVec3f(void);
BGBDTC_X128 *BGBDT_XV128_AllocVec4f(void);
BGBDTC_X128 *BGBDT_XV128_AllocQuatf(void);
void BGBDT_XV128_FreeVec3f(BGBDTC_X128 *xp);
void BGBDT_XV128_FreeVec4f(BGBDTC_X128 *xp);
void BGBDT_XV128_FreeQuatf(BGBDTC_X128 *xp);
BS2VM_API dtVal BGBDT_XV128_WrapVec3fv(float *fv);
BS2VM_API dtVal BGBDT_XV128_WrapVec3f(float x, float y, float z);
BS2VM_API dtVal BGBDT_XV128_WrapVec4fv(float *fv);
BS2VM_API dtVal BGBDT_XV128_WrapVec4f(float x, float y, float z, float w);
BS2VM_API dtVal BGBDT_XV128_WrapQuatfv(float *fv);
BS2VM_API dtVal BGBDT_XV128_WrapQuatf(float x, float y, float z, float w);
BS2VM_API int BGBDT_XV128_IsVec3fP(dtVal objv);
BS2VM_API int BGBDT_XV128_IsVec4fP(dtVal objv);
BS2VM_API int BGBDT_XV128_IsQuatfP(dtVal objv);
BS2VM_API void BGBDT_XV128_GetVec3fv(dtVal vec, float *fv);
BS2VM_API void BGBDT_XV128_GetVec4fv(dtVal vec, float *fv);
BS2VM_API void BGBDT_XV128_GetQuatfv(dtVal vec, float *fv);
dtVal BGBDT_XV128_Add(dtVal a, dtVal b);
dtVal BGBDT_XV128_Sub(dtVal a, dtVal b);
dtVal BGBDT_XV128_Mul(dtVal a, dtVal b);
dtVal BGBDT_XV128_Div(dtVal a, dtVal b);
//AHSRC:bsvm2/bsvm2c/bs2p_astnode.c
char *BS2P_GenSym(BS2CC_CompileContext *ctx);
char *BS2P_StrSym(BS2CC_CompileContext *ctx, char *str);
dtVal BS2P_NewAstNode(BS2CC_CompileContext *ctx, char *tag);
void BS2P_SetAstNodeAttr(dtVal obj, char *attr, dtVal val);
void BS2P_SetAstNodeAttrS(dtVal obj, char *attr, char *val);
void BS2P_SetAstNodeAttrStr(dtVal obj, char *attr, char *val);
void BS2P_SetAstNodeAttrI(dtVal obj, char *attr, s64 val);
void BS2P_SetAstNodeAttrF(dtVal obj, char *attr, double val);
dtVal BS2P_GetAstNodeAttr(dtVal obj, char *attr);
char *BS2P_GetAstNodeAttrS(dtVal obj, char *attr);
s64 BS2P_GetAstNodeAttrI(dtVal obj, char *attr);
f64 BS2P_GetAstNodeAttrF(dtVal obj, char *attr);
int BS2P_CheckAstNodeTag(dtVal obj, char *tag);
char *BS2P_GetAstNodeTag(dtVal obj);
dtVal BS2P_NewAstArray(BS2CC_CompileContext *ctx, int sz);
int BS2P_GetAstArraySize(dtVal obj);
dtVal BS2P_GetAstArrayIdx(dtVal obj, int idx);
void BS2P_SetAstArrayIdx(dtVal obj, int idx, dtVal val);
dtVal BS2P_NewAstWrapArray(BS2CC_CompileContext *ctx, dtVal *arrd, int sz);
dtVal BS2P_ParseWrapString(BS2CC_CompileContext *ctx, char *str);
dtVal BS2P_ParseWrapIdentifier(BS2CC_CompileContext *ctx, char *str);
dtVal BS2P_ParseWrapQName(BS2CC_CompileContext *ctx, char *str);
dtVal BS2P_ParseWrapSimpleCmd(BS2CC_CompileContext *ctx, char *str);
dtVal BS2P_ParseWrapSimpleCmdInt(BS2CC_CompileContext *ctx,char *str, int val);
dtVal BS2P_ParseWrapSimpleCmdVal(BS2CC_CompileContext *ctx,char *str, dtVal val);
dtVal BS2P_ParseWrapSimpleCmdStr(BS2CC_CompileContext *ctx,char *str, char *sval);
dtVal BS2P_ParseWrapSimpleTag(BS2CC_CompileContext *ctx, char *tag);
dtVal BS2P_ParseWrapSimpleTagInt(BS2CC_CompileContext *ctx,char *tag, int val);
dtVal BS2P_ParseWrapSimpleTagVal(BS2CC_CompileContext *ctx,char *tag, dtVal val);
dtVal BS2P_ParseWrapSimpleTagStr(BS2CC_CompileContext *ctx,char *tag, char *sval);
dtVal BS2P_ParseWrapUnTag(BS2CC_CompileContext *ctx,char *op, dtVal ln);
dtVal BS2P_ParseWrapBinTag(BS2CC_CompileContext *ctx,char *op, dtVal ln, dtVal rn);
dtVal BS2P_ParseWrapUnary(BS2CC_CompileContext *ctx,char *op, dtVal ln);
dtVal BS2P_ParseWrapBinary(BS2CC_CompileContext *ctx,char *op, dtVal ln, dtVal rn);
dtVal BS2P_ParseWrapTern(BS2CC_CompileContext *ctx,dtVal cc, dtVal ln, dtVal rn);
dtVal BS2P_ParseWrapTagIf(BS2CC_CompileContext *ctx,char *tag, dtVal cc, dtVal ln);
dtVal BS2P_ParseWrapTagIfElse(BS2CC_CompileContext *ctx,char *tag, dtVal cc, dtVal ln, dtVal rn);
dtVal BS2P_ParseWrapTagFor(BS2CC_CompileContext *ctx,char *tag, dtVal in, dtVal cc, dtVal st, dtVal th);
dtVal BS2P_ParseWrapTagBody(BS2CC_CompileContext *ctx,char *tag, dtVal ln);
dtVal BS2P_ParseWrapTagCatch(BS2CC_CompileContext *ctx,char *tag, dtVal cc, dtVal ln, dtVal rn);
dtVal BS2P_ParseWrapTagBinary(BS2CC_CompileContext *ctx,char *tag, char *op, dtVal ln, dtVal rn);
dtVal BS2P_ParseWrapArray(BS2CC_CompileContext *ctx, dtVal lst);
dtVal BS2P_ParseWrapObject(BS2CC_CompileContext *ctx, dtVal lst);
dtVal BS2P_ParseWrapVector(BS2CC_CompileContext *ctx, dtVal lst);
dtVal BS2P_ParseWrapImaginary(BS2CC_CompileContext *ctx,char *sfx, double val);
//AHSRC:bsvm2/bsvm2c/bs2p_decl.c
int BS2P_DeclTypeRejectKeyword(BS2CC_CompileContext *ctx, char *str);
dtVal BS2P_ParseModifierList(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseQName(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseQNameList(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseTypeExpr(BS2CC_CompileContext *ctx);
dtVal BS2P_TryParseDeclList(BS2CC_CompileContext *ctx,dtVal modif, dtVal tyexp);
dtVal BS2P_TryParseDecl(BS2CC_CompileContext *ctx);
dtVal BS2P_TryParseDeclSingle(BS2CC_CompileContext *ctx,dtVal modif, dtVal tyexp);
dtVal BS2P_TryParseArgDecl(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseFunVars(BS2CC_CompileContext *ctx);
//AHSRC:bsvm2/bsvm2c/bs2p_litexpr.c
void BS2P_RaiseError(BS2CC_CompileContext *ctx, char *errn);
void BS2P_RaiseError1(BS2CC_CompileContext *ctx, char *errn,char *parm0);
dtVal BS2P_ParseWrapStringL(BS2CC_CompileContext *ctx, char *str);
dtVal BS2P_ParseStringMulti(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseStringTriple(BS2CC_CompileContext *ctx);
void BS2P_ParseExpectToken(BS2CC_CompileContext *ctx, char *tok);
int BS2P_ParseExpectOptToken(BS2CC_CompileContext *ctx, char *tok);
dtVal BS2P_ParseLitExpr(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprPostfix(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprPrefixCast(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprPrefix(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprMulDiv(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprAddSub(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprBitOp(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprShlr(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprRelCmp(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprEqCmp(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprLogOp(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprTern(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprAssignOp(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExpr(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseOptExpr(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseExprList(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseNameExpr(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseNameExprList(BS2CC_CompileContext *ctx);
//AHSRC:bsvm2/bsvm2c/bs2p_stmt.c
int BS2P_ParseError(BS2CC_CompileContext *ctx, int errn);
void BS2P_WarnExpectSemi(BS2CC_CompileContext *ctx);
void BS2P_ErrSyntaxError(BS2CC_CompileContext *ctx);
int BS2P_LangIsBS2(BS2CC_CompileContext *ctx);
int BS2P_LangIsC(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseInnerStatement(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseStatementBlock(BS2CC_CompileContext *ctx, int flag);
dtVal BS2P_ParseBlockStatement(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseBlockStatementTail(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseBlockStatementTail2(BS2CC_CompileContext *ctx);
dtVal BS2P_ParseBlockStatementI(BS2CC_CompileContext *ctx, int flag);
dtVal BS2P_ParsePackageStatement(BS2CC_CompileContext *ctx);
dtVal BS2P_ParsePackageStatementBlock(BS2CC_CompileContext *ctx);
BS2VM_API dtVal BS2P_ParseBuffer(BS2CC_CompileContext *ctx,char *srcbuf, int szsrcbuf);
BS2VM_API dtVal BS2P_ParseBufferExpression(BS2CC_CompileContext *ctx,char *srcbuf, int szsrcbuf);
BS2VM_API BS2CC_CompileContext *BS2CC_AllocCompileContext();
BS2VM_API void BS2P_FreeCompileContext(BS2CC_CompileContext *ctx);
//AHSRC:bsvm2/bsvm2c/bs2p_token.c
char *BS2P_EatWhiteOnly(char *s);
char *BS2P_EatWhite(char *s);
int BS2P_ParseHexN(char *s, int n);
char *BS2P_ReadUtf8(char *sb, int *rv);
char *BS2P_EmitUtf8(char *t, int v);
char *BS2P_ParseTokenBasic(char *s, char *tb);
int BS2P_LexBuffer(BS2CC_CompileContext *ctx, char *ibuf, int szbuf);
int BS2P_CleanupLexBuffer(BS2CC_CompileContext *ctx);
char *BS2P_PeekToken(BS2CC_CompileContext *ctx, int idx);
void BS2P_NextTokenN(BS2CC_CompileContext *ctx, int cnt);
void BS2P_NextToken(BS2CC_CompileContext *ctx);
char *BS2P_GetCurSrcPosition(BS2CC_CompileContext *ctx, int idx);
void BS2P_SetCurSrcPosition(BS2CC_CompileContext *ctx, char *pos);
int BS2P_GetCurPosition(BS2CC_CompileContext *ctx);
void BS2P_SetCurPosition(BS2CC_CompileContext *ctx, int tok);
int BS2P_GetCurSourceLine(BS2CC_CompileContext *ctx,char **rlfn, int *rlln);
//AHSRC:bsvm2/bsvm2c/bs2p_preproc.c
char *BS2PP_GetFilename();
int BS2PP_CalcLinenum(char *spos);
void BS2PP_FlushToken(char *str);
void BS2PP_PushLinenum();
void BS2PP_SetLinenum(char *fn, char *buf, int ln);
void BS2PP_PopLinenum();
int BS2PP_OpChar(int ch);
int BS2PP_CheckIncludeHashName(char *str);
int BS2PP_CheckIncludeHashNext(int hash);
int BS2PP_CheckIncludeCache(char *str, byte **rbuf, int *rsz);
int BS2PP_AddIncludeCache(char *str, byte *buf, int sz);
int BS2PP_AddIncludePathFront(char *str);
int BS2PP_AddIncludePathBack(char *str);
int BS2PP_ParseChar(char **str);
int BS2PP_EmitChar(char **str, int j);
char *BS2PP_EmitString(char *t, char *s);
char *BS2PP_EmitCharString(char *t, char *s);
void BS2PP_Trigraphs(BS2CC_CompileContext *ctx, char *str);
void BS2PP_UniEscape(BS2CC_CompileContext *ctx, char *str);
int BS2PP_Error(BS2CC_CompileContext *ctx, char *str, ...);
BS2CC_PpDef *BS2PP_AllocDefine(BS2CC_CompileContext *ctx);
void BS2PP_FreeDefine(BS2CC_CompileContext *ctx, BS2CC_PpDef *def);
BS2CC_PpDef *BS2PP_LookupDefine(BS2CC_CompileContext *ctx, char *name);
void BS2PP_DeleteDefine(BS2CC_CompileContext *ctx, char *name);
void BS2PP_CleanupDefines(BS2CC_CompileContext *ctx);
void BS2PP_AddDefine(BS2CC_CompileContext *ctx, char *name, char *str);
void BS2PP_AddDefineArgs(BS2CC_CompileContext *ctx,char *name, char **args, char *str);
void BS2PP_AddStaticDefine(BS2CC_CompileContext *ctx,char *name, char *str);
void BS2PP_AddStaticDefineArgs(BS2CC_CompileContext *ctx,char *name, char **args, char *str);
char *BS2PP_LoadInclude(BS2CC_CompileContext *ctx, char *name, int *rsz);
void BS2PP_Include(BS2CC_CompileContext *ctx, char *str);
char *BS2PP_TokenCtx(BS2CC_CompileContext *ctx,char *str, char *buf, int *rty);
void BS2PP_Directive2(BS2CC_CompileContext *ctx, char *str);
void BS2PP_Directive(BS2CC_CompileContext *ctx, char *str);
char *BS2PP_ParseArg(BS2CC_CompileContext *ctx, char *s, char *b);
char *BS2PP_PrintName(char *t, char *s);
char *BS2PP_PrintToken(char *t, char *s, int ty);
int BS2PP_Expand(BS2CC_CompileContext *ctx,char **src, char **dst, char *op, char *dste);
int BS2PP_Line(BS2CC_CompileContext *ctx, char *str);
int BS2PP_LineDigraph(BS2CC_CompileContext *ctx, char *str);
int BS2PP_LinePostFilter(BS2CC_CompileContext *ctx, char *str);
char *BS2PP_ParseLine(BS2CC_CompileContext *ctx, char *s, char *b);
int BS2PP_BufferLine(BS2CC_CompileContext *ctx, char *b);
int BS2PP_Buffer(BS2CC_CompileContext *ctx, char *ibuf);
int BS2PP_Filter(BS2CC_CompileContext *ctx,char *ibuf, char *obuf, int osz);
//AHSRC:bsvm2/bsvm2c/bs2c_compile.c
int BS2C_CompileErrorGetSourceLine(BS2CC_CompileContext *ctx);
int BS2C_CompileErrorIndexName(BS2CC_CompileContext *ctx, char *name);
int BS2C_CompileError(BS2CC_CompileContext *ctx, int errn);
void BS2C_CaseError(BS2CC_CompileContext *ctx);
void BS2C_StubError(BS2CC_CompileContext *ctx);
void BS2C_WarnConstRange(BS2CC_CompileContext *ctx);
void BS2C_ErrDivZero(BS2CC_CompileContext *ctx);
void BS2C_ErrNoDecl(BS2CC_CompileContext *ctx, char *name);
void BS2C_ErrTooFewArgs(BS2CC_CompileContext *ctx);
void BS2C_ErrTooManyArgs(BS2CC_CompileContext *ctx);
void BS2C_ErrStackMisalign(BS2CC_CompileContext *ctx);
void BS2C_ErrStackUnderflow(BS2CC_CompileContext *ctx);
void BS2C_WarnImplicitConv(BS2CC_CompileContext *ctx, int dty, int sty);
void BS2C_WarnNarrowingConv(BS2CC_CompileContext *ctx, int dty, int sty);
void BS2C_WarnNotTypedef(BS2CC_CompileContext *ctx, char *name);
BS2CC_VarInfo *BS2C_AllocVarInfo(BS2CC_CompileContext *ctx);
BS2CC_CcFrame *BS2C_AllocCcFrame(BS2CC_CompileContext *ctx);
BS2CC_PkgFrame *BS2C_AllocPkgFrame(BS2CC_CompileContext *ctx);
int BS2C_CleanupFreeVarInfo(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari);
int BS2C_CleanupFreeCcFrame(BS2CC_CompileContext *ctx, BS2CC_CcFrame *frm);
BS2CC_PkgFrame *BS2C_LookupPkgFrame(BS2CC_CompileContext *ctx, char *qname);
BS2CC_PkgFrame *BS2C_GetPkgFrame(BS2CC_CompileContext *ctx, char *qname);
BS2CC_PkgFrame *BS2C_EnterPkgFrame(BS2CC_CompileContext *ctx, char *name);
void BS2C_ExitPkgFrame(BS2CC_CompileContext *ctx);
void BS2C_CompileFuncBodyCleanupVar(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vi, int ix);
void BS2C_CompileFuncBodyInitVar(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vi, int ix);
void BS2C_CompileFuncBodyCleanup(BS2CC_CompileContext *ctx);
void BS2C_CompileFuncBodyInit(BS2CC_CompileContext *ctx);
void BS2C_CompileFuncBody(BS2CC_CompileContext *ctx, BS2CC_VarInfo *func);
BS2CC_VarInfo *BS2C_GetNewGlobalVari(BS2CC_CompileContext *ctx);
dtVal BS2C_CompileVarInit_NormalizeValueType(BS2CC_CompileContext *ctx, dtVal ni, int ty);
void BS2C_CompileVarInit(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari);
void BS2C_CompileRebuildVarType(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari);
void BS2C_CompileRebuildFuncType(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari);
void BS2C_CompileRebuildStructType(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari);
BS2VM_API void BS2C_CompileFuncs(BS2CC_CompileContext *ctx);
BS2VM_API void BS2C_CompileFuncs2(BS2CC_CompileContext *ctx, int base);
BS2VM_API char *BS2C_ErrStringForMsg(BS2CC_CompileContext *ctx, int ix, int cn, int pix);
BS2VM_API void BS2C_DumpErrors(BS2CC_CompileContext *ctx);
BS2VM_API int BS2C_CompileModuleBuffer(BS2CC_CompileContext *ctx, char *buf, int szbuf);
BS2VM_API int BS2C_CompileModuleList(BS2CC_CompileContext *ctx, char *base, char **names);
BS2VM_API int BS2C_CompileImageDef(char *img, char *def);
BS2VM_API dtVal BS2C_EvalExpr(char *str);
//AHSRC:bsvm2/bsvm2c/bs2c_conv.c
void BS2C_CompileConvType(BS2CC_CompileContext *ctx, int dty);
void BS2C_CompileCastType(BS2CC_CompileContext *ctx, int dty);
void BS2C_CompileConvTypeI(BS2CC_CompileContext *ctx, int dty,int flag);
//AHSRC:bsvm2/bsvm2c/bs2c_disasm.c
int bs2c_disasm_decnbl(char *ps);
int bs2c_disasm_decbyte(char *ps);
int bs2c_disasm_matchPrefix(byte *cs, char *pat,byte **rcs1, char **rpa1);
byte *bs2c_disasm_ReadVLI(byte *cs, int *rv);
byte *bs2c_disasm_ReadVLI2(byte *cs, s64 *rv);
byte *bs2c_disasm_ReadVLI_Inner(byte *cs, u64 *rv, int *rl);
byte *bs2c_disasm_ReadSplitVLI(byte *cs, int *rvh, int *rvl);
byte *bs2c_disasm_ReadTripleVLI(byte *cs, int *rvh, int *rvm, int *rvl);
byte *bs2c_disasm_ReadSplit2VLI(byte *cs, int *rvh, s64 *rvl);
byte *bs2c_disasm_ReadFxVLI(byte *cs, double *rv);
byte *bs2c_disasm_ReadZxVLI(byte *cs, int *rz, int *rv);
byte *bs2c_disasm_ReadZxVLI(byte *cs, int *rz, int *rv);
int bs2c_disasm_matchItem(BS2CC_CcFrame *frm, byte *cs, char *pat, byte **rcs1, char **rpa1);
int bs2c_disasm_PrintItem(BGBDT_MM_ParsePrintInfo *prn, BS2CC_CcFrame *frm, byte *cs, char *pat, byte **rcs1, char **rpa1);
int BS2C_DisAsmOp(BGBDT_MM_ParsePrintInfo *prn, BS2CC_CompileContext *ctx, BS2CC_CcFrame *frm);
void BS2C_DisAsmFuncBody(BGBDT_MM_ParsePrintInfo *prn, BS2CC_CompileContext *ctx, BS2CC_CcFrame *frm);
void BS2C_DisAsmStruct(BGBDT_MM_ParsePrintInfo *prn, BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari);
BS2VM_API void BS2C_DisAsmFuncs(BGBDT_MM_ParsePrintInfo *prn, BS2CC_CompileContext *ctx);
//AHSRC:bsvm2/bsvm2c/bs2c_emit.c
void BS2C_EmitCheckExpand(BS2CC_CompileContext *ctx, int sz);
void BS2C_EmitByte(BS2CC_CompileContext *ctx, int op);
void BS2C_EmitWord(BS2CC_CompileContext *ctx, int op);
void BS2C_EmitWord24(BS2CC_CompileContext *ctx, int op);
void BS2C_EmitDWord(BS2CC_CompileContext *ctx, int op);
void BS2C_EmitOpcode(BS2CC_CompileContext *ctx, int op);
void BS2C_EmitOpcodeIdx(BS2CC_CompileContext *ctx, int ix);
void BS2C_EmitOpcodeUCx(BS2CC_CompileContext *ctx, u64 ix);
void BS2C_EmitOpcodeSCx(BS2CC_CompileContext *ctx, s64 ix);
void BS2C_EmitOpcodeSuCx(BS2CC_CompileContext *ctx, int z, s64 ix);
void BS2C_EmitOpcodeSuCxD(BS2CC_CompileContext *ctx, int z, double v);
void BS2C_EmitOpcodeFxD(BS2CC_CompileContext *ctx, double f);
void BS2C_EmitOpcodeJx(BS2CC_CompileContext *ctx, int vi, int vj);
void BS2C_EmitOpcodeLx(BS2CC_CompileContext *ctx,int vi, int vj, int vk);
void BS2C_EmitOpcodeUKx(BS2CC_CompileContext *ctx, int vi, u64 vj);
void BS2C_EmitOpcodeSKx(BS2CC_CompileContext *ctx, int i, s64 ix);
void BS2C_EmitOpcodeSuKx(BS2CC_CompileContext *ctx, int z, int vi, s64 ix);
void BS2C_EmitOpcodeFKxD(BS2CC_CompileContext *ctx, int vi, double f);
void BS2C_EmitOpcodeUZx(BS2CC_CompileContext *ctx, int z, u64 ix);
void BS2C_EmitOpcodeUZx(BS2CC_CompileContext *ctx, int z, u64 ix);
void BS2C_EmitOpcodeSZx(BS2CC_CompileContext *ctx, int z, s64 ix);
void BS2C_EmitOpcodeUZy(BS2CC_CompileContext *ctx, int z, u64 ix);
void BS2C_EmitOpcodeSZy(BS2CC_CompileContext *ctx, int z, s64 ix);
void BS2C_EmitOpcodeZyStr(BS2CC_CompileContext *ctx, char *str);
void BS2C_EmitOpcodeZySymbol(BS2CC_CompileContext *ctx, char *str);
void BS2C_EmitOpcodeZyKeyword(BS2CC_CompileContext *ctx, char *str);
void BS2C_EmitOpcodeZxF(BS2CC_CompileContext *ctx, double f);
void BS2C_EmitOpcodeZxFI(BS2CC_CompileContext *ctx, double f, int z);
void BS2C_EmitOpcodeZxD(BS2CC_CompileContext *ctx, double f);
int BS2C_GenTempLabel(BS2CC_CompileContext *ctx);
void BS2C_CheckExpandTempLabel(BS2CC_CompileContext *ctx);
void BS2C_CheckExpandTempReloc(BS2CC_CompileContext *ctx);
void BS2C_EmitTempLabel(BS2CC_CompileContext *ctx, int tid);
void BS2C_EmitTempReloc8(BS2CC_CompileContext *ctx, int tid);
void BS2C_EmitTempReloc16(BS2CC_CompileContext *ctx, int tid);
void BS2C_EmitTempReloc24(BS2CC_CompileContext *ctx, int tid);
void BS2C_EmitTempReloc32(BS2CC_CompileContext *ctx, int tid);
void BS2C_EmitTempJump(BS2CC_CompileContext *ctx, int tid);
void BS2C_EmitTempJAddr(BS2CC_CompileContext *ctx, int tid);
void BS2C_EmitSetNewtrace(BS2CC_CompileContext *ctx);
void BS2C_EmitTempLabelB(BS2CC_CompileContext *ctx, int tid);
void BS2C_CheckExpandNamedLabel(BS2CC_CompileContext *ctx);
int BS2C_GetNamedLabel(BS2CC_CompileContext *ctx, char *name);
void BS2C_FixupLabels(BS2CC_CompileContext *ctx);
int BS2C_ImgLookupString(BS2CC_CompileContext *ctx, char *str);
int BS2C_ImgGetString(BS2CC_CompileContext *ctx, char *str);
void BS2C_EmitReturnV(BS2CC_CompileContext *ctx);
void BS2C_EmitReturnVal(BS2CC_CompileContext *ctx);
void BS2C_EmitReturnCleanupV(BS2CC_CompileContext *ctx, int last);
//AHSRC:bsvm2/bsvm2c/bs2c_expr.c
void BS2C_CompileLoadNameAsType(BS2CC_CompileContext *ctx,char *name, int ty);
void BS2C_CompileExprResvPush(BS2CC_CompileContext *ctx, int n);
void BS2C_CompileExprPushType(BS2CC_CompileContext *ctx, int dty);
int BS2C_CompileExprPopType(BS2CC_CompileContext *ctx);
void BS2C_CompileExprPopType1(BS2CC_CompileContext *ctx);
void BS2C_CompileExprPopType2(BS2CC_CompileContext *ctx);
void BS2C_CompileExprPopType3(BS2CC_CompileContext *ctx);
void BS2C_CompileExprPopType4(BS2CC_CompileContext *ctx);
int BS2C_CompileExprPeekType(BS2CC_CompileContext *ctx);
void BS2C_CompilePop(BS2CC_CompileContext *ctx);
void BS2C_CompileBasePop(BS2CC_CompileContext *ctx);
void BS2C_CompileNoexPop(BS2CC_CompileContext *ctx);
void BS2C_CompileNoexPop2(BS2CC_CompileContext *ctx);
void BS2C_CompileNoexPop3(BS2CC_CompileContext *ctx);
void BS2C_CompileNoexPopN(BS2CC_CompileContext *ctx, int n);
void BS2C_CompileNoexPushI(BS2CC_CompileContext *ctx);
void BS2C_CompileNoexPush(BS2CC_CompileContext *ctx, int dty);
void BS2C_CompilePushDummy(BS2CC_CompileContext *ctx, int dty);
void BS2C_CompileDup(BS2CC_CompileContext *ctx);
void BS2C_CompileBinaryOpSS(BS2CC_CompileContext *ctx, char *op, int dty);
void BS2C_CompileCallArg(BS2CC_CompileContext *ctx,BS2CC_VarInfo *vai, dtVal expr);
void BS2C_CompileCallVariArgs(BS2CC_CompileContext *ctx,BS2CC_VarInfo *vari, dtVal an);
void BS2C_CompileExprCall(BS2CC_CompileContext *ctx,dtVal fnn, dtVal an, int dty);
void BS2C_CompileCall(BS2CC_CompileContext *ctx, dtVal expr, int dty);
void BS2C_CompileObjMethodCall(BS2CC_CompileContext *ctx,int clsty, char *name, dtVal args, int dty);
void BS2C_CompileObjMethodCallB(BS2CC_CompileContext *ctx,int clsty, char *name, dtVal args, int dty, int flag);
void BS2C_CompileCallSuper(BS2CC_CompileContext *ctx, dtVal expr, int dty);
void BS2C_CompileExprNew(BS2CC_CompileContext *ctx, dtVal expr, int dty);
void BS2C_CompileStoreExpr(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileExprBinary(BS2CC_CompileContext *ctx,char *op, dtVal ln, dtVal rn, int dty);
void BS2C_CompileExprPushConstInt(BS2CC_CompileContext *ctx, s64 val, int dty);
void BS2C_CompileExprPushConstFloat(BS2CC_CompileContext *ctx, f64 val, int dty);
void BS2C_CompileExpr(BS2CC_CompileContext *ctx,dtVal expr, int dty);
//AHSRC:bsvm2/bsvm2c/bs2c_image.c
byte *BS2C_Image_EmitTag(byte *ct, u64 tag, s64 sz);
byte *BS2C_Image_EmitTagData(byte *ct, u32 tag, int sz,byte *data);
byte *BS2C_Image_EmitUVLI(byte *ct, u64 v);
byte *BS2C_Image_EmitSVLI(byte *ct, s64 v);
byte *BS2C_Image_EmitFVLI(byte *ct, double val);
byte *BS2C_Image_EmitTagUVLI(byte *ct, u32 tag, u64 val);
byte *BS2C_Image_EmitTagSVLI(byte *ct, u32 tag, s64 val);
byte *BS2C_Image_EmitTagFloat(byte *ct, u32 tag, double val);
s64 BS2C_Image_QHashName(char *str);
u32 BS2C_Image_HashData(byte *buf, int sz);
char *BS2C_Image_FlagsToFlSig(BS2CC_CompileContext *ctx, s64 bmfl);
int BS2C_Image_FlagsToFlSigId(BS2CC_CompileContext *ctx, s64 bmfl);
byte *BS2C_Image_FlattenGlobalInfo_GblDefI(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobalInfo_GblVar(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobalInfo_GblFunc(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobalInfo_StrVar(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobalInfo_StrFunc(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobalInfo_StructI(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobalInfo_StructDef(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobalInfo_ClassDef(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobalInfo_IfaceDef(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobalInfo_Package(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *obuf);
int BS2C_Image_FlattenInitMapTagVal(BS2CC_CompileContext *ctx, dtVal val);
int BS2C_Image_BaseTypePackSize(int bty);
byte *BS2C_Image_FlattenGlobalInfo_InitArr(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *obuf);
byte *BS2C_Image_FlattenGlobalInfo(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, byte *ct);
byte *BS2C_Image_FlattenGlobals(BS2CC_CompileContext *ctx, byte *obuf, int *gix);
byte *BS2C_Image_FlattenGixArray(BS2CC_CompileContext *ctx, byte *obuf, int *gix);
BS2VM_API void BS2C_TouchReachable_TouchReachDef(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari);
BS2VM_API void BS2C_TouchReachable_TouchPublicDef(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari);
BS2VM_API int BS2C_TouchReachable(BS2CC_CompileContext *ctx);
int BS2C_Image_CompareMains(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vi1, BS2CC_VarInfo *vi2);
byte *BS2C_Image_FlattenMains(BS2CC_CompileContext *ctx, byte *obuf);
byte *BS2C_Image_FlattenPvbm(BS2CC_CompileContext *ctx, byte *obuf);
BS2VM_API int BS2C_FlattenImage(BS2CC_CompileContext *ctx, byte *obuf, int obmsz);
//AHSRC:bsvm2/bsvm2c/bs2c_infer.c
int BS2C_InferName(BS2CC_CompileContext *ctx, char *name);
int BS2C_InferRetTypeName(BS2CC_CompileContext *ctx, char *name);
int BS2C_InferExprLocalIndex(BS2CC_CompileContext *ctx, dtVal expr);
int BS2C_InferExprObjMethodCall(BS2CC_CompileContext *ctx,int clsty, char *name, dtVal args);
int BS2C_InferExpr(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_InferCaptureStatement(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_InferCaptureFunc(BS2CC_CompileContext *ctx, BS2CC_VarInfo *func);
//AHSRC:bsvm2/bsvm2c/bs2c_jcond.c
int BS2C_CompileGetCondBool(BS2CC_CompileContext *ctx, dtVal cc);
void BS2C_CompileTempJmpIfElse(BS2CC_CompileContext *ctx,dtVal cc, int tt, int tf);
void BS2C_CompileTempJmpIfElse(BS2CC_CompileContext *ctx,dtVal cc, int tt, int tf);
void BS2C_CompileTempJmpThen(BS2CC_CompileContext *ctx,dtVal cc, int tt);
void BS2C_CompileTempJmpThen2(BS2CC_CompileContext *ctx,dtVal cc, int tt, int tfa);
void BS2C_CompileTempJmpElse(BS2CC_CompileContext *ctx,dtVal cc, int tf);
void BS2C_CompileTempJmpElse2(BS2CC_CompileContext *ctx,dtVal cc, int tf, int tta);
//AHSRC:bsvm2/bsvm2c/bs2c_reduce.c
s64 BS2C_ReduceClampConstRangeL(BS2CC_CompileContext *ctx, s64 iv, int dty);
dtVal BS2C_ReduceExprVariConst(BS2CC_CompileContext *ctx,BS2CC_VarInfo *vari);
dtVal BS2C_ReduceExprName(BS2CC_CompileContext *ctx, char *name);
dtVal BS2C_ReduceExpr(BS2CC_CompileContext *ctx, dtVal expr);
dtVal BS2C_ReduceEvaluateExprAs(BS2CC_CompileContext *ctx, dtVal expr, int dty);
//AHSRC:bsvm2/bsvm2c/bs2c_scope.c
int BS2C_LookupLocal(BS2CC_CompileContext *ctx, char *name);
int BS2C_LookupLexical(BS2CC_CompileContext *ctx, char *name);
int BS2C_LookupGlobal(BS2CC_CompileContext *ctx, char *name);
void BS2C_CheckExpandFrameGlobals(BS2CC_CompileContext *ctx);
int BS2C_IndexFrameGlobal(BS2CC_CompileContext *ctx, int gix);
int BS2C_IndexFrameLiteral(BS2CC_CompileContext *ctx, int gix);
int BS2C_LookupFrameGlobal(BS2CC_CompileContext *ctx, char *name);
int BS2C_LookupPkgGlobal(BS2CC_CompileContext *ctx, BS2CC_PkgFrame *pkg, char *name);
int BS2C_LookupPkgImpGlobal(BS2CC_CompileContext *ctx, BS2CC_PkgFrame *pkg, char *name);
int BS2C_LookupVariGlobal(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, char *name);
BS2CC_VarInfo *BS2C_GetFrameGlobalInfo(BS2CC_CompileContext *ctx, int idx);
BS2CC_VarInfo *BS2C_LookupObjectFieldName(BS2CC_CompileContext *ctx, BS2CC_VarInfo *obj, char *name);
BS2CC_VarInfo *BS2C_LookupObjectFuncName(BS2CC_CompileContext *ctx, BS2CC_VarInfo *obj, char *name);
BS2CC_VarInfo *BS2C_LookupObjectFuncNameB(BS2CC_CompileContext *ctx, BS2CC_VarInfo *obj, char *name);
BS2CC_VarInfo *BS2C_LookupObjectFuncNameArgs(BS2CC_CompileContext *ctx,  BS2CC_VarInfo *obj, char *name, int *aty, int na);
int BS2C_CompileLoadName(BS2CC_CompileContext *ctx, char *name);
int BS2C_CompileStoreName(BS2CC_CompileContext *ctx, char *name);
int BS2C_CompileLoadRefName(BS2CC_CompileContext *ctx, char *name);
int BS2C_CompileLoadDerefName(BS2CC_CompileContext *ctx, char *name);
int BS2C_CompileStoreDerefName(BS2CC_CompileContext *ctx, char *name);
int BS2C_LookupDynamicSlotName(BS2CC_CompileContext *ctx, char *name);
int BS2C_GetDynamicSlotName(BS2CC_CompileContext *ctx, char *name);
int BS2C_GetFrameDynamicSlotName(BS2CC_CompileContext *ctx, char *name);
int BS2C_GetFrameSymbol(BS2CC_CompileContext *ctx, char *name);
//AHSRC:bsvm2/bsvm2c/bs2c_stmt.c
void BS2C_CompileStmtVarInit(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vi, dtVal expr);
void BS2C_CompileStmtVar(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileStmtSwitchDiR(BS2CC_CompileContext *ctx,int *swtgt, s64 *swval, int swn, int swdfl);
void BS2C_CompileStmtSwitchDiR_L(BS2CC_CompileContext *ctx,int *swtgt, s64 *swval, int swn, int swdfl);
void BS2C_CompileStmtSwitchDiR_D(BS2CC_CompileContext *ctx,int *swtgt, f64 *swvalm, f64 *swvaln, int swn, int swdfl);
void BS2C_CompileStmtSwitchDouble(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileStmtSwitch(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileStmtTryCatch2(BS2CC_CompileContext *ctx, dtVal expr, int lblf);
void BS2C_CompileStmtTryCatch(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileStatement(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileFuncVarExpr(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileFunVarStatement(BS2CC_CompileContext *ctx, dtVal expr);
//AHSRC:bsvm2/bsvm2c/bs2c_topstmt.c
void BS2C_CompileSetupVarInfo(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vi, dtVal expr);
void BS2C_CompileFunVar(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileStructVar(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileStructFunc(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileStructVarStatement(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileSetupTopVarInfo(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vi, dtVal expr);
void BS2C_CompileTopVar(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileTopFuncArg(BS2CC_CompileContext *ctx,BS2CC_VarInfo *func, dtVal expr);
int BS2C_CompileTopFunc(BS2CC_CompileContext *ctx, dtVal expr);
void BS2C_CompileTopStruct(BS2CC_CompileContext *ctx, dtVal expr);
BS2VM_API void BS2C_CompileTopStatement(BS2CC_CompileContext *ctx, dtVal expr);
//AHSRC:bsvm2/bsvm2c/bs2c_type.c
int BS2C_GetTypeBaseZ(BS2CC_CompileContext *ctx, int ty);
int BS2C_GetTypeVecZ(BS2CC_CompileContext *ctx, int ty);
char *BS2C_GetTypeSig(BS2CC_CompileContext *ctx, int ty);
char *BS2C_GetTypeNameStr(BS2CC_CompileContext *ctx, int ty);
BS2CC_VarInfo *BS2C_GetTypeObject(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeFixedStructP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeClassP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeInterfaceP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeClassOrInterfaceP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeFunctionP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSmallIntP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSmallLongP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSmallInt128P(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSmallFloatP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSmallDoubleP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSmallFloat128P(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSignedP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeUnsignedP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeUnsigned2P(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeAddressP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeNullableP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeNonnullP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeArrayP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVarRefP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypePointerP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeArrayOrPointerP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeFloatP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeDoubleP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeHalfFloatP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeInt128P(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeUInt128P(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeFloat128P(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSizedArrayP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVoidP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVariantP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeStringP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVec2fP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVec3fP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVec4fP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVec2dP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeQuatfP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVec3dP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVec4dP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeVec3xfP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeFComplexP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeDComplexP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSmallFComplexP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSmallDComplexP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeSmallQuatfP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeNumberP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeOpXvCplxP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeX64P(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeX128P(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeOpXNumP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeOpXvP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeOpXvFloatP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeOpXvDoubleP(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeXvGetElemType(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeXvGetElemCount(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeConvIsNarrowingP(BS2CC_CompileContext *ctx,int dty, int sty);
int BS2C_TypeDerefType(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeRefType(BS2CC_CompileContext *ctx, int ty);
int BS2C_TypeGetArraySize(BS2CC_CompileContext *ctx, int ty);
int BS2C_InferSuperType(BS2CC_CompileContext *ctx, int lty, int rty);
int BS2C_TypeAssignSuperType(BS2CC_CompileContext *ctx, int lty, int rty);
int BS2C_TypeBinarySuperType(BS2CC_CompileContext *ctx, char *op, int lty, int rty);
int BS2C_TypeCompareSuperType(BS2CC_CompileContext *ctx, int lty, int rty);
int BS2C_TypeCompatibleP(BS2CC_CompileContext *ctx, int dty, int sty);
int BS2C_TypeBaseType(BS2CC_CompileContext *ctx, dtVal expr);
int BS2C_TypeExtType(BS2CC_CompileContext *ctx, dtVal expr);
int BS2C_TypeExtTypeNew(BS2CC_CompileContext *ctx, dtVal expr);
int BS2C_TypeLookupTypeOverflow(BS2CC_CompileContext *ctx, BS2CC_TypeOverflow *tovf);
int BS2C_TypeGetTypeOverflow(BS2CC_CompileContext *ctx, BS2CC_TypeOverflow *tovf);
int BS2C_TypeFromTypeOverflow(BS2CC_CompileContext *ctx, BS2CC_TypeOverflow *ovf);
int BS2C_TypeRefinedType(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, dtVal expr);
int BS2C_TypeRefinedType2(BS2CC_CompileContext *ctx, BS2CC_VarInfo *vari, dtVal expr, int flag);
//AHSRC:bsvm2/bsvm2c/bs2e_expr.c
dtVal BS2E_LoadName(BS2CC_CompileContext *ctx, char *name);
dtVal BS2E_StoreName(BS2CC_CompileContext *ctx,char *name, dtVal val);
dtVal BS2E_EvalExpr(BS2CC_CompileContext *ctx, dtVal expr);
//AHSRC:bsvm2/bsvm2i/bs2i_fcnblock.c
BSVM2_Opcode *BSVM2_Interp_AllocOpcode(BSVM2_CodeBlock *cblk);
BSVM2_TailOpcode *BSVM2_Interp_AllocTailOpcode(BSVM2_CodeBlock *cblk);
BSVM2_Trace *BSVM2_Interp_AllocTrace(BSVM2_CodeBlock *cblk);
void BSVM2_Interp_FreeOpcode(BSVM2_CodeBlock *cblk, BSVM2_Opcode *tmp);
void BSVM2_Interp_FreeTailOpcode(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *tmp);
int BSVM2_Interp_ReadOpcodeNumber(BSVM2_CodeBlock *cblk);
int BSVM2_Interp_PeekOpcodeNumber(BSVM2_CodeBlock *cblk);
int BSVM2_Interp_PeekIxOpcodeNumber(BSVM2_CodeBlock *cblk);
int BSVM2_Interp_DecodeBlockNoexOp(BSVM2_CodeBlock *cblk, int opn);
BSVM2_Trace *BSVM2_Interp_DecodeBlockTraces(BSVM2_CodeBlock *cblk);
BSVM2_Trace *BSVM2_Interp_TryJitBlock(BSVM2_CodeBlock *cblk);
//AHSRC:bsvm2/bsvm2i/bs2i_interp.c
BS2VM_API int BSVM2_Interp_SetEnable(int parm);
BS2VM_API int BSVM2_Interp_SetDisable(int parm);
BS2VM_API int bsvm2_natfib(int x);
BS2VM_API void bsvm2_natsorttst(int n);
BS2VM_API dtVal bsvm2_vm_printf(dtVal str, dtVal va);
BS2VM_API BSVM2_Context *BSVM2_Interp_AllocContext(void);
BS2VM_API BSVM2_Context *BSVM2_Interp_AllocPoolContext(void);
BS2VM_API void BSVM2_Interp_FreePoolContext(BSVM2_Context *ctx);
BS2VM_API BSVM2_Frame *BSVM2_Interp_AllocFrame(BSVM2_Context *ctx);
BS2VM_API bool BSVM2_Interp_IsLambdaP(dtVal objv);
BS2VM_API BSVM2_Lambda *BSVM2_Interp_AllocLambda(BSVM2_Context *ctx);
BS2VM_API BSVM2_Trace *BSVM2_Interp_SetupCallVM(BSVM2_Context *ctx, BSVM2_ImageGlobal *vi, BSVM2_Value *args);
BS2VM_API BSVM2_Trace *BSVM2_Interp_SetupMethodCallVM(BSVM2_Context *ctx, BSVM2_ImageGlobal *vi, dtVal self, BSVM2_Value *args);
BS2VM_API int BSVM2_Interp_SetupCacheMethodCallVM(BSVM2_Context *ctx, dtVal self, dtcMethod *rfi, BSVM2_Value *args, char *qn, char *fn, char *sig);
BS2VM_API int BSVM2_Interp_CallCacheMethodVM(dtVal self,dtcMethod *rfi, BSVM2_Value *args, char *qn, char *fn, char *sig, int lim);
BS2VM_API BSVM2_Value *BSVM2_Interp_GetGlobalValue(BSVM2_ImageGlobal *vi);
BS2VM_API s32 BSVM2_Interp_GetGlobalI(BSVM2_ImageGlobal *vi);
BS2VM_API s64 BSVM2_Interp_GetGlobalL(BSVM2_ImageGlobal *vi);
BS2VM_API f32 BSVM2_Interp_GetGlobalF(BSVM2_ImageGlobal *vi);
BS2VM_API f64 BSVM2_Interp_GetGlobalD(BSVM2_ImageGlobal *vi);
BS2VM_API dtVal BSVM2_Interp_GetGlobalA(BSVM2_ImageGlobal *vi);
BS2VM_API void *BSVM2_Interp_GetGlobalP(BSVM2_ImageGlobal *vi);
BS2VM_API int BSVM2_Interp_SetGlobalI(BSVM2_ImageGlobal *vi, s32 v);
BS2VM_API int BSVM2_Interp_SetGlobalL(BSVM2_ImageGlobal *vi, s64 v);
BS2VM_API int BSVM2_Interp_SetGlobalF(BSVM2_ImageGlobal *vi, f32 v);
BS2VM_API int BSVM2_Interp_SetGlobalD(BSVM2_ImageGlobal *vi, f64 v);
BS2VM_API int BSVM2_Interp_SetGlobalA(BSVM2_ImageGlobal *vi, dtVal v);
BS2VM_API int BSVM2_Interp_SetGlobal3Xfv(BSVM2_ImageGlobal *vi, double *val);
BS2VM_API int BSVM2_Interp_SetGlobal4fv(BSVM2_ImageGlobal *vi, float *val);
BS2VM_API dtVal BSVM2_Interp_GetGlobalDy(BSVM2_ImageGlobal *vi);
BS2VM_API dtVal BSVM2_Interp_SetGlobalDy(BSVM2_ImageGlobal *vi, dtVal v);
BS2VM_API int BSVM2_Interp_RunContext(BSVM2_Context *ctx, int lim);
int BSVM2_Interp_RunDoWork(BGBDT_WorkItem *item);
BS2VM_API BGBDT_WorkItem *BSVM2_Interp_RunContextWork(BSVM2_Context *ctx);
//AHSRC:bsvm2/bsvm2i/bs2i_load.c
byte *BS2I_ReadTag(byte *cs, u64 *rtag, s64 *rlen);
byte *BS2I_ReadTag2(byte *cs, u32 *rtag, int *rlen);
byte *BS2I_ReadVLI_I(byte *cs, u64 *rv, int *rl);
byte *BS2I_ReadUVLI(byte *cs, s64 *rv);
byte *BS2I_ReadSVLI(byte *cs, s64 *rv);
byte *BS2I_ReadFVLI(byte *cs, double *rv);
byte *BS2I_ReadOpcodeNumber(byte *cs, int *rv);
BSVM2_CodeImage *BS2I_AllocImage(void);
BSVM2_ImageGlobal *BS2I_AllocImageGlobal(BSVM2_CodeImage *img);
BSVM2_CodeBlock *BS2I_AllocImageCodeBlock(BSVM2_CodeImage *img);
int BS2I_ImageTagCharMustUnderstand2P(BSVM2_CodeImage *img, byte tagh);
int BS2I_ImageTagCharMustUnderstandP(BSVM2_CodeImage *img, byte tagh);
int BS2I_ImageTagMustUnderstandP(BSVM2_CodeImage *img, u64 tag);
void BS2I_ImageErrorCorruptTag(BSVM2_CodeImage *img);
void BS2I_ImageCheckUnknownTag(BSVM2_CodeImage *img, u64 tag);
int BS2I_ImageGetGlobalOfs(BSVM2_CodeImage *img, int gix);
byte *BS2I_ImageGetGlobalLump(BSVM2_CodeImage *img, int gix);
int BS2I_ImageDecodeGlobalFunc(BSVM2_CodeImage *img, BSVM2_ImageGlobal *gbl, u32 dtag, byte *data, byte *edata);
char *BS2I_ImageTryGetGlobalQName(BSVM2_CodeImage *img, BSVM2_ImageGlobal *gbl);
s64 BS2I_Image_QHashName(char *str);
u64 BS2I_FlagsFromFlagstr(BSVM2_CodeImage *img, char *str);
int BS2I_ImageDecodeGlobalVar(BSVM2_CodeImage *img, BSVM2_ImageGlobal *gbl, u32 dtag, byte *data, byte *edata);
dtVal BS2I_ImageDecodeTagIndexAddr(BSVM2_CodeImage *img, int gix);
int BS2I_ImageDecodeGlobalArray(BSVM2_CodeImage *img, BSVM2_ImageGlobal *gbl, u32 dtag, byte *data, byte *edata);
int BS2I_ImageDecodeGlobal(BSVM2_CodeImage *img, BSVM2_ImageGlobal *gbl, byte *gdat);
BSVM2_ImageGlobal *BS2I_ImageGetGlobal(BSVM2_CodeImage *img, int gix);
BSVM2_ImageGlobal *BS2I_ImageGetGlobalInitial(BSVM2_CodeImage *img, int gix);
BS2VM_API BSVM2_ImageGlobal *BS2I_ImageLookupFunc(BSVM2_CodeImage *img, char *qname);
BS2VM_API BSVM2_ImageGlobal *BS2I_ImageLookupGlobalVar(BSVM2_CodeImage *img, char *qname);
BS2VM_API BSVM2_ImageGlobal *BS2I_ImageGetMain(BSVM2_CodeImage *img, char *qnpkg);
BS2VM_API BSVM2_Trace *BS2I_ImageGetFuncTrace(BSVM2_ImageGlobal *vi);
BS2VM_API BSVM2_Trace *BS2I_ImageGetMainTrace(BSVM2_CodeImage *img, char *qnpkg);
BS2VM_API BSVM2_CodeImage *BS2I_DecodeImageBuffer(byte *ibuf, int isz);
BS2VM_API BSVM2_ImageGlobal *BS2I_GlobalLookupGlobalVar(char *qname);
//AHSRC:bsvm2/bsvm2i/bs2i_natcall.c
void *BSVM2_NatCall_GetProcAddress(char *name);
void BSVM2_NatCall_Call_0_V(void *fptr,BSVM2_Value *rv, BSVM2_Value *av);
void BSVM2_NatCall_Call_0_I(void *fptr,BSVM2_Value *rv, BSVM2_Value *av);
void BSVM2_NatCall_Call_0_L(void *fptr,BSVM2_Value *rv, BSVM2_Value *av);
void BSVM2_NatCall_Call_0_F(void *fptr,BSVM2_Value *rv, BSVM2_Value *av);
void BSVM2_NatCall_Call_0_D(void *fptr,BSVM2_Value *rv, BSVM2_Value *av);
void BSVM2_NatCall_Call_0_P(void *fptr,BSVM2_Value *rv, BSVM2_Value *av);
void BSVM2_NatCall_Call_0_A(void *fptr,BSVM2_Value *rv, BSVM2_Value *av);
BSVM2_Trace *BSVM2_TrOp_NatCallGFx(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
void BSVM2_NatCall_Call_N(void *fcn, int nc,BSVM2_Value *rv, BSVM2_Value *av);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_NatCallG0(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
char *BSVM2_NatCall_SigNext(char *sig);
char *BSVM2_NatCall_SigGetRet(char *sig);
int BSVM2_NatCall_GetSigOpZ(char *sig);
int BSVM2_NatCall_GetSigBType(char *sig);
int BSVM2_NatCall_GetSigIndexG0(char *sig);
int BSVM2_NatCall_GetSigIndexG1(char *sig,BSVM2_Value *iav, BSVM2_Value *oav);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_NatCallG1(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
dtVal BSVM2_Sig_GetSigPtrDtVal(void *ptr, char *sig);
dtVal BSVM2_Sig_SetSigPtrDtVal(void *ptr, char *sig, dtVal v);
BSVM2_Trace *BSVM2_TrOp_NatCallFail(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_oparith.c
BS2VM_API void BSVM2_Op_ADDI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ANDI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ORI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_XORI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ANDL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ORL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_XORL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHLI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SARI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHRI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SARL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHRL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DIVI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MODI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UDIVI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DIVL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MODL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UDIVL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DIVF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DIVD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEGI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEGL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEGF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEGD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NOTI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NOTL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LNTI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LNTL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RCPF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RCPD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SQRTF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SQRTD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSQRTF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSQRTD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SINF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SIND(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_COSF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_COSD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_TANF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_TAND(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ATANF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ATAND(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SQRF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SQRD(BSVM2_Frame *frm, BSVM2_Opcode *op);
double bsvm2_ssqrt(double x);
BS2VM_API void BSVM2_Op_SSQRTF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SSQRTD(BSVM2_Frame *frm, BSVM2_Opcode *op);
double bsvm2_fabs(double x);
BS2VM_API void BSVM2_Op_ABSF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ABSD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMP2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMP2D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMP2A(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UCMPI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UCMPL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPILL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPILC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DCMPIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMIEQ(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMINE(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMILT(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMIGT(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMILE(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMIGE(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ANDIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ORIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_XORIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ANDLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ORLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_XORLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHLIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SARIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHRIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHLLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SARLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHRLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DIVIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MODIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DIVLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MODLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDFC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBFC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULFC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DIVFC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDDC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBDC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULDC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DIVDC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ANDIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ORIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_XORIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHLIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SARIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_INCI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DECI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_INCIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DECIL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDI_LLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBI_LLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULI_LLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ANDI_LLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ORI_LLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_XORI_LLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHLI_LLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SARI_LLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ADDI_LLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBI_LLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULI_LLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ANDI_LLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ORI_LLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_XORI_LLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHLI_LLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SARI_LLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_oparr.c
BS2VM_API void BSVM2_Op_LDIXI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXI_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXL_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXF_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXD_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXA_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSB_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUB_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSS_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUS_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXI_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXL_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXF_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXD_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXA_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXB_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXS_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXFC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXDC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXAC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSBC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUBC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSSC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUSC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXFC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXDC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXAC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXBC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXSC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXFC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXDC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXAC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXBC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXSC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXIC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXLC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXFC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXDC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXAC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSBC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUBC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSSC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUSC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXIC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXLC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXFC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXDC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXAC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXBC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_RSTIXSC_BC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARFC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARDC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARAC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARBC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEARSC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEAST(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LEASTC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_IC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_UIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_SBC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_UBC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_SSC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_USC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_LC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_ULC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_FC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_DC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_AC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_UI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_SB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_UB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_SS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_US(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_UL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWARR_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_IC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_UIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_SBC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_UBC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_SSC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_USC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_LC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_ULC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_FC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_DC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_AC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_UI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_SB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_UB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_SS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_US(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_UL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXARR_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DFXARR(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXILL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXLLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXFLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXDLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXALL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSBLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUBLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSSLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUSLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXILC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXLLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXFLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXDLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXALC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSBLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUBLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXSSLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXUSLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXILL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXLLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXFLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXDLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXALL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXBLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXSLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXILC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXLLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXFLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXDLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXALC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXBLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXSLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRAL_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRAL_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRAL_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRAL_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRAL_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRAL_SB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRAL_UB(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRAL_SS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRAL_US(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRAL_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRAL_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRAL_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRAL_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRAL_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRAL_B(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRAL_S(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_opcode.c
BSVM2_Opcode *BSVM2_Interp_DecodeOpcode(BSVM2_CodeBlock *cblk, int opn);
//AHSRC:bsvm2/bsvm2i/bs2i_opcvt.c
void BSVM2_Op_NOP(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DUPI(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DUPL(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DUPF(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DUPD(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DUPA(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_PUSHI(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_PUSHL(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_PUSHF(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_PUSHD(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_PUSHA(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_SWAPI(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_SWAPL(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_SWAPF(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_SWAPD(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_SWAPA(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTI2L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTI2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTI2D(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTL2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTL2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTL2D(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTF2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTF2L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTF2D(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTD2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTD2L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTD2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTSB2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTUB2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTSS2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTUS2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CVTUI2L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTI2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTL2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTF2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTD2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2ST(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTST2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CATST(BSVM2_Frame *frm, BSVM2_Opcode *op);
int bsvm2_op_strcmp(byte *s0, byte *s1);
byte *bsvm2_op_strgetutf8(byte *cs, int *rv);
int bsvm2_op_mapucase(int ch);
int bsvm2_op_stricmp(byte *s0, byte *s1);
BS2VM_API void BSVM2_Op_CMPST(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPSST(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPUST(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_opdtvar.c
BS2VM_API void BSVM2_Op_ADDAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SUBAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MULAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ANDAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ORAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_XORAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHLAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SARAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SHRAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DIVAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MODAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEGAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NOTAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LNTAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_opinit.c
int BSVM2_Interp_DecodeOpUCxI(BSVM2_CodeBlock *cblk);
u64 BSVM2_Interp_DecodeOpUCxL(BSVM2_CodeBlock *cblk);
s32 BSVM2_Interp_DecodeOpSCxI(BSVM2_CodeBlock *cblk);
s64 BSVM2_Interp_DecodeOpSCxL(BSVM2_CodeBlock *cblk);
void BSVM2_Interp_DecodeOpUJxI(BSVM2_CodeBlock *cblk,int *ri, int *rj);
void BSVM2_Interp_DecodeOpUKx(BSVM2_CodeBlock *cblk,int *ri, u64 *rj);
void BSVM2_Interp_DecodeOpULxI(BSVM2_CodeBlock *cblk,int *ri, int *rj, int *rk);
s32 bsvm2_interp_decsignfoldi(s32 i);
s64 bsvm2_interp_decsignfoldl(s64 i);
dtVal BSVM2_Interp_DecodeOpAddrConst(BSVM2_CodeBlock *cblk, int ix);
void *BSVM2_Interp_DecodeOpAddrPtr(BSVM2_CodeBlock *cblk, int ix);
void BSVM2_Interp_DecodeOpGx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpIxGx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpGj(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpIx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpJx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpLx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpJxCx(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty);
void BSVM2_Interp_DecodeOpJx_SLL(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty);
void BSVM2_Interp_DecodeOpJx_LSL(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpKx_SLC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty);
void BSVM2_Interp_DecodeOpKx_LSC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty);
void BSVM2_Interp_DecodeOpKx(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty);
void BSVM2_Interp_DecodeOpFx2(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op,int exp, int zty);
void BSVM2_Interp_DecodeOpZx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpZy(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpZn(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpZnIx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpZiIx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpZiCi(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op);
void BSVM2_Interp_DecodeOpFx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op,int zty);
void BSVM2_Interp_DecodeOpCx(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op,int zty);
void BSVM2_Interp_SetupOpBin(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUn(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUnL(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUstL(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUnP(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUnPGx(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUat(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUatL(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUatJx(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUatKx(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUat2(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpPopUn(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpPopBin(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpPopTrin(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpBinC2(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int ztyr, int ztyc, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpBinC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpBinCI(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpBinCJ(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpBinCiSa(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op), void (*run2)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpBinL(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpBinLC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpBinLL(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpBinC2P(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int ztyr, int ztyc, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpTrinC2(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int ztyr, int ztyc, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpTrinCiSa(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int ztyr, int ztyc, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op), void (*run2)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpTrinC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpTrinCI(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpPopTrinC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int ztyc, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpPopTrinCI(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpTrin(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpQuad(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, int zty, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpI_SLL(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOp_LSL(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpI_SLC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpI_LSC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUI_SLC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUI_LSC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpI_LLC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpUI_LLC(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
void BSVM2_Interp_SetupOpI_LLL(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, void (*run)(BSVM2_Frame *frm, BSVM2_Opcode *op));
//AHSRC:bsvm2/bsvm2i/bs2i_opobj.c
BS2VM_API void BSVM2_Op_LDOSI_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSL_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSF_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSD_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSA_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSI_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSL_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSF_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSD_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSA_TN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSLI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSLF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSLD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSLA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSLI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSLL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSLF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSLD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSLA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWOBJ(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DELOBJ(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DZNISTYPE(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DTNISTYPE(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DTRAPNULL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LTRAPNULL(BSVM2_Frame *frm, BSVM2_Opcode *op);
int BSVM2_OpInt_IsTypeA(dtVal v, char *s);
BS2VM_API void BSVM2_Op_DZNISTYPE_AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DTNISTYPE_AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE_AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE_UI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE_UL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE_B(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_ISTYPE_C(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_OpInit_IsTypeS(BSVM2_CodeBlock *cblk,BSVM2_Opcode *op, char *sig);
BS2VM_API void BSVM2_Op_IFXOBJ(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DFXOBJ(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXDYV(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DFXDYV(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDTHISI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDTHISL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDTHISF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDTHISD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDTHISA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STTHISI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STTHISL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STTHISF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STTHISD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STTHISA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSLX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSLX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDTHISX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STTHISX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_NEWDYO(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SBOS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSBOS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTOS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DUPAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DROPAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_SBOSAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSBOSAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTOSAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDOSLAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STOSLAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXAA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDIXAI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STIXAI(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_opptr.c
BS2VM_API void BSVM2_Op_CVTA2PTR(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTPTR2A(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDRL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDRGS(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDROS(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DIFFPTR_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DIFFPTR_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DIFFPTR_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DIFFPTR_B(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DIFFPTR_S(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_DIFFPTR_X(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_CMPA_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXI_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXL_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXF_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXD_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXA_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXSB_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXUB_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXSS_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXUS_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXI_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXL_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXF_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXD_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXA_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXB_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXS_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXIC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXLC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXFC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXDC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXAC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXSBC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXUBC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXSSC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDIXUSC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXIC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXLC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXFC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXDC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXAC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXBC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_RSTIXSC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARI_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARL_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARF_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARD_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARA_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARB_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARS_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARIC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARLC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARFC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARDC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARAC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARBC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LEARSC_P(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDRVL_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDRVL_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDRVL_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDRVL_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDRVL_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDRVL_SB(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDRVL_UB(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDRVL_SS(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDRVL_US(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDRVL_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDRVL_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDRVL_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDRVL_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDRVL_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDRVL_B(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDRVL_S(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDINCZLP_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDINCZLP_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDINCZLP_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDINCZLP_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDINCZLP_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDINCZLP_SB(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDINCZLP_UB(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDINCZLP_SS(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDINCZLP_US(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDINCZLP_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDINCZLP_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDINCZLP_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDINCZLP_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDINCZLP_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDINCZLP_B(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDINCZLP_S(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDDECZLP_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDDECZLP_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDDECZLP_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDDECZLP_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDDECZLP_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDDECZLP_SB(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDDECZLP_UB(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDDECZLP_SS(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDDDECZLP_US(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDDECZLP_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDDECZLP_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDDECZLP_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDDECZLP_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDDECZLP_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDDECZLP_B(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STDDECZLP_S(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_opvars.c
void BSVM2_Op_LDI(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDL(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDF(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDD(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_LDA(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STI(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STL(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STF(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STD(BSVM2_Frame *frm, BSVM2_Opcode *op);
void BSVM2_Op_STA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDCI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDCL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDCF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDCD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDCA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDLXI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDLXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDLXF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDLXD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDLXA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STLXI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STLXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STLXF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STLXD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STLXA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRLXI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRLXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRLXF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRLXD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDDRLXA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRLXI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRLXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRLXF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRLXD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STDRLXA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVIC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVLC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVFC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVDC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MVAC(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDGSI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDGSL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDGSF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDGSD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDGSA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STGSI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STGSL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STGSF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STGSD(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STGSA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDGSX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STGSX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDGS_DY(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STGS_DY(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDCTH(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MKLFCN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXLFCN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DFXLFCN(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZ_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZ_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZ_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZ_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZ_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZL_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZL_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZL_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZL_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZL_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZRL_I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZRL_L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZRL_F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZRL_D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DSTIXUZRL_A(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_opvec2.c
BS2VM_API void BSVM2_Op_MKV2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MKV2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTVI2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTVF2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2VI(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2VF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_ADD_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_SUB_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_MUL_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DIV_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DOT_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CROSS_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CMUL_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CDIV_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
float bsvm2_opf_ssqrtf(float x);
BS2VM_API void BSVM2_Op_UNOPX_NEG_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_RCP_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_SQRT_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_RSQRT_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_LEN_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_LEN2_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDV2IA_V2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDV2IB_V2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDV2FA_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDV2FB_V2F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BSVM2_Opcode *BSVM2_OpVec_DecodeBinOpX(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op, int opn);
BSVM2_Opcode *BSVM2_OpVec_DecodeUnOpX(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op, int opn);
BSVM2_Opcode *BSVM2_OpVec_DecodeVectorOpcode(BSVM2_CodeBlock *cblk, BSVM2_Opcode *op, int opn);
//AHSRC:bsvm2/bsvm2i/bs2i_opvec3.c
BSVM2_ValX128 *BSVM2_FrameAllocX128(BSVM2_Frame *frm);
void BSVM2_FrameFreeX128(BSVM2_Frame *frm, BSVM2_ValX128 *val);
BS2VM_API void BSVM2_Op_BINOPX_ADD_V3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_SUB_V3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_MUL_V3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DIV_V3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DOT_V3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CROSS_V3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CMUL_V3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_ADD_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_SUB_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_MUL_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DIV_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DOT_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CROSS_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CMUL_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CMUL2_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
void bsvm2_opf_qrcp(BSVM2_ValX128 *a, BSVM2_ValX128 *b);
BS2VM_API void BSVM2_Op_BINOPX_CDIV_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CDIV2_V4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DUPX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_POPX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_STXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_DFXX(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_IFXXA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MKX4I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MKX2L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MKX4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_MKX2D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX2LA_X2L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX2LB_X2L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX2DA_X2D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX2DB_X2D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX4IA_X4I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX4IB_X4I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX4IC_X4I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX4ID_X4I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX4FA_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX4FB_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX4FC_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX4FD_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_NEG_X3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_RCP_X3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_SQRT_X3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_RSQRT_X3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_LEN_X3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_LEN2_X3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_NEG_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_RCP_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_SQRT_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_RSQRT_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_LEN_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_LEN2_X4F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTX3F2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTX4F2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTXQF2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2X3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_opvec3x.c
BS2VM_API u64 BSVM2_Double2XFloat(double v);
BS2VM_API double BSVM2_XFloat2Double(u64 lv);
BS2VM_API u64 BSVM2_Double2XFloat2(u64 lv);
BS2VM_API void BSVM2_Pack3DblTo3Xf(u32 *pv, double x, double y, double z);
BS2VM_API void BSVM2_Pack3DvTo3Xf(u32 *pv, double *px);
BS2VM_API void BSVM2_Pack3DvTo3Xf(u32 *pv, double *px);
BS2VM_API void BSVM2_Pack3DblTo3Xf(u32 *pv, double x, double y, double z);
BS2VM_API void BSVM2_Unpack3XfTo3Dv(u32 *pv, double *px);
BS2VM_API void BSVM2_Op_MKX3D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX3DA_X3D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX3DB_X3D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_LDX3DC_X3D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_ADD_V3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_SUB_V3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_MUL_V3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DIV_V3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DOT_V3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_CROSS_V3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTX3F2X3D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTX3D2X3F(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_NEG_X3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_RCP_X3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_SQRT_X3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_RSQRT_X3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_LEN_X3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UNOPX_LEN2_X3XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_opvxi.c
BS2VM_API void BSVM2_Op_BINOPX_ADD_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_SUB_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_MUL_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_AND_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_OR_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_XOR_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_SHL_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_SAR_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_SHR_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DIV_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_MOD_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_NEG_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_NOT_XI128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_ADD_XF128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_SUB_XF128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_MUL_XF128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_DIV_XF128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_BINOPX_NEG_XF128(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_UCMPXL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMPXF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CMP2XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTI2XL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTL2XL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTUI2XL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTUL2XL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTXL2I(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTXL2L(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTD2XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTXF2D(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTXL2XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTXF2XL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTXL2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTXF2AA(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2XL(BSVM2_Frame *frm, BSVM2_Opcode *op);
BS2VM_API void BSVM2_Op_CVTAA2XF(BSVM2_Frame *frm, BSVM2_Opcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_tailop.c
BSVM2_Trace *BSVM2_TrRun_NULL(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Def0(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Def1(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Def2(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Def3(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Def4(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Def5(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Def6(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Def7(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Def8(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_DefN(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_DefN0(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_DefN1(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_DefN2(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_DefN3(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_DefN4(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_DefN5(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_DefN6(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_DefN7(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_ThrowN(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Next0(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Next1(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Next2(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Next3(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Next4(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Next5(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Next6(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Next7(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_Next8(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_NextN0(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_NextN1(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_NextN2(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_NextN3(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_NextN4(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_NextN5(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_NextN6(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_TrRun_NextN7(BSVM2_Frame *frm, BSVM2_Trace *tr);
BSVM2_Trace *BSVM2_Interp_DecodeBlockSetupTraceDfl(BSVM2_CodeBlock *cblk, BSVM2_Opcode **ops, int n_ops, BSVM2_TailOpcode *top, int flag);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_Default(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JMP(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JEQ(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JNE(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JLT(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JGT(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JLE(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JGE(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JEQNULL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JNENULL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JEQNULLL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JNENULLL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_EQI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_NEI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LTI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GTI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LEI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GEI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LTUI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GTUI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LEUI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GEUI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_EQL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_NEL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LTL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GTL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LEL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GEL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LTUL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GTUL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LEUL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GEUL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_EQF(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_NEF(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LTF(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GTF(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LEF(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GEF(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_EQD(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_NED(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LTD(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GTD(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LED(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GED(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_EQIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_NEIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LTIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GTIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LEIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GEIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LTUIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GTUIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_LEUIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMP_GEUIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_EQI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_NEI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_LTI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_GTI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_LEI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_GEI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_LTUI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_GTUI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_LEUI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_JCMPLL_GEUI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETI(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETF(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETD(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETA(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETV(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETIC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETLC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETFC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETDC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETAC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETIL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETLL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETFL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETDL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETAL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_CALLG(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_CALLV(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_CALLTH(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_CALLA(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_CALLL(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BSVM2_Trace *BSVM2_TrOp_ThrowUnwindI(BSVM2_Frame *frm);
BSVM2_Trace *BSVM2_TrOp_ThrowStatusI(BSVM2_Frame *frm, int status);
BSVM2_Trace *BSVM2_TrOp_ThrowI(BSVM2_Frame *frm,BSVM2_TailOpcode *op, dtVal ex);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_THROW(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_RETHROW(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_BEGTRY(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_ENDTRY(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_CATCH(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_BEGLEC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_ENDLEC(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
BS2VM_API BSVM2_Trace *BSVM2_TrOp_ENDLEC2(BSVM2_Frame *frm, BSVM2_TailOpcode *op);
//AHSRC:bsvm2/bsvm2i/bs2i_topinit.c
byte *BSVM2_Interp_DecodeOpJAddr(BSVM2_CodeBlock *cblk);
void BSVM2_Interp_DecodeTopGx(BSVM2_CodeBlock *cblk, BSVM2_TailOpcode *op);
void BSVM2_Interp_DecodeTopZx(BSVM2_CodeBlock *cblk, BSVM2_TailOpcode *op);
void BSVM2_Interp_DecodeTopFx2(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, int exp, int zty);
void BSVM2_Interp_DecodeTopCi(BSVM2_CodeBlock *cblk, BSVM2_TailOpcode *op);
void BSVM2_Interp_DecodeTopZn(BSVM2_CodeBlock *cblk, BSVM2_TailOpcode *op);
void BSVM2_Interp_DecodeTopIx(BSVM2_CodeBlock *cblk, BSVM2_TailOpcode *op);
void BSVM2_Interp_DecodeTopJx(BSVM2_CodeBlock *cblk, BSVM2_TailOpcode *op);
void BSVM2_Interp_DecodeTopGj(BSVM2_CodeBlock *cblk, BSVM2_TailOpcode *op);
void BSVM2_Interp_SetupTopPopUnJmp(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, BSVM2_Trace *(*run)(BSVM2_Frame *frm, BSVM2_TailOpcode *op));
void BSVM2_Interp_SetupTopPopUn(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, BSVM2_Trace *(*run)(BSVM2_Frame *frm, BSVM2_TailOpcode *op));
void BSVM2_Interp_SetupTopUatJmp(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, BSVM2_Trace *(*run)(BSVM2_Frame *frm, BSVM2_TailOpcode *op));
void BSVM2_Interp_SetupTopUat(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, BSVM2_Trace *(*run)(BSVM2_Frame *frm, BSVM2_TailOpcode *op));
void BSVM2_Interp_SetupTopUnJmp(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, BSVM2_Trace *(*run)(BSVM2_Frame *frm, BSVM2_TailOpcode *op));
void BSVM2_Interp_SetupTopUn(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, BSVM2_Trace *(*run)(BSVM2_Frame *frm, BSVM2_TailOpcode *op));
void BSVM2_Interp_SetupTopUnPJmp(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, BSVM2_Trace *(*run)(BSVM2_Frame *frm, BSVM2_TailOpcode *op));
void BSVM2_Interp_SetupTopPopBinJmp(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, BSVM2_Trace *(*run)(BSVM2_Frame *frm, BSVM2_TailOpcode *op));
void BSVM2_Interp_SetupTopPopBin(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op, BSVM2_Trace *(*run)(BSVM2_Frame *frm, BSVM2_TailOpcode *op));
void BSVM2_Interp_SetupTopJCMP(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op);
void BSVM2_Interp_SetupTopCallG(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op);
void BSVM2_Interp_SetupTopCallV(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op);
void BSVM2_Interp_SetupTopCallTh(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op);
void BSVM2_Interp_SetupTopCallA(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op);
void BSVM2_Interp_SetupTopCallL(BSVM2_CodeBlock *cblk,BSVM2_TailOpcode *op);
BSVM2_TailOpcode *BSVM2_Interp_DecodeTailOpcode(BSVM2_CodeBlock *cblk, int opn);
//AHSRC:bsvm2/bsvm2i/bs2j_rvalut.c
char *BSVM2_Interp_ReverseLookupPublicOp(void *ptr);
//AHSRC:bsvm2/bsvm2i/bs2j_tr_x86.c
int BS2J_VirtualEBP(BSVM2_Trace *tr, int ofs);
int BS2J_CheckSavedESI(BSVM2_Trace *tr);
int BS2J_CheckSavedEDI(BSVM2_Trace *tr);
int BS2J_CheckSavedEBX(BSVM2_Trace *tr);
int BS2J_CheckSavedEBP(BSVM2_Trace *tr);
int BS2J_CheckFrameOnStack(BSVM2_Trace *tr);
int BS2J_CheckCacheFrameEDI(BSVM2_Trace *tr);
int BS2J_CheckCacheOpsESI(BSVM2_Trace *tr);
int BS2J_CheckCacheStackEBX(BSVM2_Trace *tr);
int BS2J_CheckCacheLocalsESI(BSVM2_Trace *tr);
char *BS2J_GetMemRefLocal(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStack(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalP(BSVM2_Trace *tr, int idx, int ofs);
char *BS2J_GetMemRefStackP(BSVM2_Trace *tr, int idx, int ofs);
int BS2J_TryJitOpcode(BSVM2_Trace *tr, BSVM2_Opcode *op);
int BS2J_CheckRestoreRegs(BSVM2_Trace *tr);
int BS2J_EmitNormalReturn(BSVM2_Trace *tr);
int BS2J_JitTraceHandleTail(BSVM2_Trace *tr);
int BS2J_CheckSetupJitTrace(BSVM2_Trace *tr);
BS2VM_API int BS2J_DumpMissCounts();
//AHSRC:bsvm2/bsvm2i/bs2j_tr_x64.c
int BS2J_VirtualEBP(BSVM2_Trace *tr, int ofs);
int BS2J_CheckSavedESI(BSVM2_Trace *tr);
int BS2J_CheckSavedEDI(BSVM2_Trace *tr);
int BS2J_CheckSavedEBX(BSVM2_Trace *tr);
int BS2J_CheckSavedEBP(BSVM2_Trace *tr);
int BS2J_CheckSavedR12(BSVM2_Trace *tr);
int BS2J_CheckSavedR13(BSVM2_Trace *tr);
int BS2J_CheckSavedR14(BSVM2_Trace *tr);
int BS2J_CheckSavedR15(BSVM2_Trace *tr);
int BS2J_CheckFrameOnStack(BSVM2_Trace *tr);
int BS2J_CheckFrameInRCX(BSVM2_Trace *tr);
int BS2J_CheckCacheFrameEDI(BSVM2_Trace *tr);
int BS2J_CheckCacheLocalsESI(BSVM2_Trace *tr);
int BS2J_GetLocalRegSpanID(BSVM2_Trace *tr, int idx);
int BS2J_GetLocalRegID(BSVM2_Trace *tr, int idx);
char *BS2J_RegIdxToName(int id);
char *BS2J_RegIdxToNameD(int id);
char *BS2J_RegIdxToNameW(int id);
char *BS2J_RegIdxToNameB(int id);
int BS2J_RegNameToIdx(char *rn);
char *BS2J_RegNameAsNameD(char *rn);
char *BS2J_RegNameAsNameW(char *rn);
char *BS2J_RegNameAsNameB(char *rn);
int BS2J_FlushLocalRegID(BSVM2_Trace *tr, int idx);
int BS2J_FlushStackRegID(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalI(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocal(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStack(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalRd(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalWr(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalRdWr(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalD(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStackD(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalRdD(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalWrD(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalRdWrD(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStackRd(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStackWr(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStackRdWr(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStackRdD(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStackWrD(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStackRdWrD(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStackRdX(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefStackWrX(BSVM2_Trace *tr, int idx);
char *BS2J_GetMemRefLocalP(BSVM2_Trace *tr, int idx, int ofs);
char *BS2J_GetMemRefStackP(BSVM2_Trace *tr, int idx, int ofs);
int BS2J_JitRefIsRegP(BSVM2_Trace *tr, char *dst);
int BS2J_JitBasicMov(BSVM2_Trace *tr, char *dst, char *src);
int BS2J_JitBasicMovD(BSVM2_Trace *tr, char *dst, char *src);
int BS2J_TryJitOpcode(BSVM2_Trace *tr, BSVM2_Opcode *op);
int BS2J_CheckAllocTemp(BSVM2_Trace *tr);
int BS2J_CheckFreeTemp(BSVM2_Trace *tr);
int BS2J_StatAllocRegs_AddLcl(BSVM2_Trace *tr, int pos, int reg);
int BS2J_StatAllocRegs_AddStk(BSVM2_Trace *tr, int pos, int reg);
int BS2J_StatAllocRegs_MoveLcl(BSVM2_Trace *tr, int dst, int src);
int BS2J_StatAllocRegs_CheckCollide(BSVM2_Trace *tr, int dst, int src);
int BS2J_StatAllocRegs(BSVM2_Trace *tr);
int BS2J_CheckSyncRegs(BSVM2_Trace *tr, BSVM2_Opcode *op);
int BS2J_CheckRestoreRegs(BSVM2_Trace *tr);
int BS2J_EmitNormalReturn(BSVM2_Trace *tr);
int BS2J_EmitReturnJumpNext(BSVM2_Trace *tr);
char *BS2J_JitAddrToStr(void *addr);
int BS2J_JitTraceHandleTail(BSVM2_Trace *tr);
int BS2J_CheckSetupJitTrace(BSVM2_Trace *tr);
int BS2J_BeginJitTraces(BSVM2_CodeBlock *cblk);
int BS2J_EndJitTraces(BSVM2_CodeBlock *cblk);
int BS2J_CheckPreSetupJitTrace(BSVM2_Trace *tr);
int BS2J_CheckPostSetupJitTrace(BSVM2_Trace *tr);
BS2VM_API int BS2J_DumpMissCounts();
BS2VM_API int BS2J_DumpUseCounts_MUMB();
BS2VM_API int BS2J_DumpUseCounts_LUSB();
BS2VM_API int BS2J_DumpUseCounts();
