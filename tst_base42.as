; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	F:\bgb.proj.deeptails\tst_base42.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_base42_enc
PUBLIC	??_C@_0CL@IMGLDENI@BCDFGHJKLMNPQRSTVWXYZbcdfghjklmn@ ; `string'
PUBLIC	_base64_enc
PUBLIC	??_C@_0EB@MLOJLFCE@0123456789ABCDEFGHIJKLMNOPQRSTUV@ ; `string'
PUBLIC	_base42_dec
;	COMDAT ??_C@_0EB@MLOJLFCE@0123456789ABCDEFGHIJKLMNOPQRSTUV@
CONST	SEGMENT
??_C@_0EB@MLOJLFCE@0123456789ABCDEFGHIJKLMNOPQRSTUV@ DB '0123456789ABCDEF'
	DB	'GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@IMGLDENI@BCDFGHJKLMNPQRSTVWXYZbcdfghjklmn@
CONST	SEGMENT
??_C@_0CL@IMGLDENI@BCDFGHJKLMNPQRSTVWXYZbcdfghjklmn@ DB 'BCDFGHJKLMNPQRST'
	DB	'VWXYZbcdfghjklmnpqrstvwxyz', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_base42_enc DD	FLAT:??_C@_0CL@IMGLDENI@BCDFGHJKLMNPQRSTVWXYZbcdfghjklmn@
_base64_enc DD	FLAT:??_C@_0EB@MLOJLFCE@0123456789ABCDEFGHIJKLMNOPQRSTUV@
_base42_dec DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	0ffH
	DB	03H
	DB	04H
	DB	05H
	DB	0ffH
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	0aH
	DB	0ffH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	0ffH
	DB	010H
	DB	011H
	DB	012H
	DB	013H
	DB	014H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	015H
	DB	016H
	DB	017H
	DB	0ffH
	DB	018H
	DB	019H
	DB	01aH
	DB	0ffH
	DB	01bH
	DB	01cH
	DB	01dH
	DB	01eH
	DB	01fH
	DB	0ffH
	DB	020H
	DB	021H
	DB	022H
	DB	023H
	DB	024H
	DB	0ffH
	DB	025H
	DB	026H
	DB	027H
	DB	028H
	DB	029H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
_DATA	ENDS
PUBLIC	_Base42_EncUnit
PUBLIC	_Base42_DecUnit
PUBLIC	_Base42_CopyFlipA
PUBLIC	_Base42_CopyFlipB
PUBLIC	_Base42_CopyFlipC
PUBLIC	_main
PUBLIC	??_C@_0P@NIJAPJAO@?$CFd?5?$CFd?5?$CFd?5?$CF04X?6?$AA@ ; `string'
PUBLIC	??_C@_05BFKCDFJD@?$CF08X?6?$AA@			; `string'
PUBLIC	??_C@_0O@PBNKJOKJ@?$CF04X?5?$CF04X?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_06IMOLFEOG@?$CFd?5?$CFf?6?$AA@		; `string'
PUBLIC	__real@4070c6f7a0b5ed8d
PUBLIC	__real@408f400000000000
EXTRN	_printf:PROC
EXTRN	_malloc:PROC
EXTRN	_clock:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4070c6f7a0b5ed8d
CONST	SEGMENT
__real@4070c6f7a0b5ed8d DQ 04070c6f7a0b5ed8dr	; 268.435
CONST	ENDS
;	COMDAT ??_C@_06IMOLFEOG@?$CFd?5?$CFf?6?$AA@
CONST	SEGMENT
??_C@_06IMOLFEOG@?$CFd?5?$CFf?6?$AA@ DB '%d %f', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBNKJOKJ@?$CF04X?5?$CF04X?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0O@PBNKJOKJ@?$CF04X?5?$CF04X?5?$CFs?6?$AA@ DB '%04X %04X %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05BFKCDFJD@?$CF08X?6?$AA@
CONST	SEGMENT
??_C@_05BFKCDFJD@?$CF08X?6?$AA@ DB '%08X', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NIJAPJAO@?$CFd?5?$CFd?5?$CFd?5?$CF04X?6?$AA@
CONST	SEGMENT
??_C@_0P@NIJAPJAO@?$CFd?5?$CFd?5?$CFd?5?$CF04X?6?$AA@ DB '%d %d %d %04X', 0aH
	DB	00H						; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_i0$2$ = -72						; size = 4
_sv$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT
; File f:\bgb.proj.deeptails\tst_base42.c
; Line 178
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+72], eax
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 184
	xor	edi, edi
	mov	esi, 6242				; 00001862H
	npad	7
$LL17@main:
; Line 196
	mov	eax, esi
	and	eax, 32767				; 00007fffH
	push	eax
	lea	eax, DWORD PTR [esi-6694]
	sar	eax, 15					; 0000000fH
	push	eax
	mov	eax, esi
	sar	eax, 15					; 0000000fH
	push	eax
	push	edi
	push	OFFSET ??_C@_0P@NIJAPJAO@?$CFd?5?$CFd?5?$CFd?5?$CF04X?6?$AA@
	call	_printf
	add	esi, 32760				; 00007ff8H
	add	esp, 20					; 00000014H
	inc	edi
	cmp	esi, 1382162				; 00151712H
	jl	SHORT $LL17@main
; Line 217
	push	DWORD PTR _sv$[esp+92]
	movq	xmm0, QWORD PTR _sv$[esp+92]
	push	DWORD PTR _sv$[esp+92]
	mov	eax, DWORD PTR _sv$[esp+104]
	push	OFFSET ??_C@_05BFKCDFJD@?$CF08X?6?$AA@
	movq	QWORD PTR _sv$[esp+116], xmm0
	mov	DWORD PTR _sv$[esp+124], eax
	call	_printf
; Line 220
	mov	ebp, DWORD PTR _base42_enc
	add	esp, 12					; 0000000cH
	xor	edi, edi
$LL14@main:
; Line 35
	mov	eax, -2045222521			; 86186187H
	mov	esi, edi
	mul	edi
; Line 37
	mov	eax, -2045222521			; 86186187H
; Line 84
	mov	ecx, ebp
	sub	esi, edx
	shr	esi, 1
	add	esi, edx
	shr	esi, 5
	mul	esi
	mov	eax, esi
	sub	eax, edx
	shr	eax, 1
	add	eax, edx
	shr	eax, 5
	mov	dh, BYTE PTR [eax+ebp]
	imul	eax, eax, 42
	mov	BYTE PTR _sv$[esp+88], dh
	sub	ecx, eax
	imul	eax, esi, 42
	mov	bl, BYTE PTR [ecx+esi]
; Line 85
	mov	ecx, ebp
	sub	ecx, eax
	mov	BYTE PTR _sv$[esp+89], bl
; Line 94
	movsx	eax, dh
; Line 85
	mov	dl, BYTE PTR [ecx+edi]
; Line 94
	movsx	eax, BYTE PTR _base42_dec[eax-64]
; Line 225
	imul	ecx, eax, 42
; Line 95
	movsx	eax, bl
; Line 85
	mov	BYTE PTR _sv$[esp+90], dl
; Line 224
	mov	BYTE PTR _sv$[esp+91], 0
; Line 95
	movsx	eax, BYTE PTR _base42_dec[eax-64]
; Line 225
	add	ecx, eax
; Line 96
	movsx	eax, dl
; Line 97
	imul	ecx, ecx, 42
	movsx	eax, BYTE PTR _base42_dec[eax-64]
	add	ecx, eax
; Line 226
	cmp	edi, ecx
	jne	SHORT $LN40@main
; Line 220
	inc	edi
	cmp	edi, 65536				; 00010000H
	jl	$LL14@main
; Line 226
	jmp	SHORT $LN12@main
$LN40@main:
; Line 228
	lea	eax, DWORD PTR _sv$[esp+88]
	push	eax
	push	ecx
	push	edi
	push	OFFSET ??_C@_0O@PBNKJOKJ@?$CF04X?5?$CF04X?5?$CFs?6?$AA@
	call	_printf
	add	esp, 16					; 00000010H
$LN12@main:
; Line 234
	push	16777216				; 01000000H
	call	_malloc
	add	esp, 4
	mov	edi, eax
; Line 236
	call	_clock
	mov	ebx, eax
	mov	esi, 64					; 00000040H
	npad	4
$LL9@main:
; Line 239
	push	16777216				; 01000000H
	push	edi
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH
	dec	esi
	jne	SHORT $LL9@main
; Line 242
	call	_clock
; Line 243
	sub	eax, ebx
; Line 244
	movsd	xmm0, QWORD PTR __real@4070c6f7a0b5ed8d
	sub	esp, 8
	movd	xmm1, eax
	cvtdq2pd xmm1, xmm1
	divsd	xmm1, QWORD PTR __real@408f400000000000
	divsd	xmm0, xmm1
	movsd	QWORD PTR [esp], xmm0
	push	eax
	push	OFFSET ??_C@_06IMOLFEOG@?$CFd?5?$CFf?6?$AA@
	call	_printf
	add	esp, 16					; 00000010H
; Line 247
	call	_clock
	mov	DWORD PTR _i0$2$[esp+88], eax
	lea	ebx, DWORD PTR [esi+64]
	npad	9
$LL6@main:
; Line 106
	lea	edx, DWORD PTR [edi+2]
	mov	esi, 4194304				; 00400000H
	npad	8
$LL28@main:
; Line 108
	movsx	ecx, BYTE PTR [edx-2]
	lea	edx, DWORD PTR [edx+4]
; Line 110
	mov	al, BYTE PTR [edx-4]
	mov	BYTE PTR [edx-6], al
; Line 111
	mov	BYTE PTR [edx-4], cl
	dec	esi
	jne	SHORT $LL28@main
; Line 248
	dec	ebx
	jne	SHORT $LL6@main
; Line 253
	call	_clock
; Line 254
	sub	eax, DWORD PTR _i0$2$[esp+88]
; Line 255
	sub	esp, 8
	movsd	xmm1, QWORD PTR __real@4070c6f7a0b5ed8d
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@408f400000000000
	divsd	xmm1, xmm0
	movsd	QWORD PTR [esp], xmm1
	push	eax
	push	OFFSET ??_C@_06IMOLFEOG@?$CFd?5?$CFf?6?$AA@
	call	_printf
	add	esp, 16					; 00000010H
; Line 257
	call	_clock
	mov	ebx, eax
	mov	esi, 64					; 00000040H
	npad	3
$LL3@main:
; Line 260
	push	4194304					; 00400000H
	push	edi
	push	edi
	call	_Base42_CopyFlipC
	add	esp, 12					; 0000000cH
	dec	esi
	jne	SHORT $LL3@main
; Line 263
	call	_clock
; Line 264
	sub	eax, ebx
; Line 265
	movsd	xmm1, QWORD PTR __real@4070c6f7a0b5ed8d
	sub	esp, 8
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@408f400000000000
	divsd	xmm1, xmm0
	movsd	QWORD PTR [esp], xmm1
	push	eax
	push	OFFSET ??_C@_06IMOLFEOG@?$CFd?5?$CFf?6?$AA@
	call	_printf
; Line 266
	mov	ecx, DWORD PTR __$ArrayPad$[esp+104]
	add	esp, 16					; 00000010H
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _Base42_CopyFlipC
_TEXT	SEGMENT
_ibuf$ = 8						; size = 4
_obuf$ = 12						; size = 4
_n$ = 16						; size = 4
_Base42_CopyFlipC PROC					; COMDAT
; File f:\bgb.proj.deeptails\tst_base42.c
; Line 149
	mov	eax, DWORD PTR _ibuf$[esp-4]
; Line 150
	mov	ecx, DWORD PTR _n$[esp-4]
	push	ebp
	lea	ebp, DWORD PTR [eax+ecx*4]
; Line 152
	cmp	eax, ebp
	jae	$LN1@Base42_Cop
	mov	ecx, DWORD PTR _obuf$[esp]
	push	ebx
	push	esi
	mov	ebx, eax
	push	edi
	lea	edi, DWORD PTR [ecx+8]
	sub	ebx, ecx
$LL2@Base42_Cop:
; Line 154
	mov	edx, DWORD PTR [eax]
	lea	edi, DWORD PTR [edi+16]
; Line 157
	mov	esi, edx
	movzx	ecx, dl
	sar	esi, 16					; 00000010H
	and	edx, -16711936				; ff00ff00H
	and	esi, 255				; 000000ffH
	shl	ecx, 16					; 00000010H
	or	esi, ecx
	or	esi, edx
	mov	DWORD PTR [edi-24], esi
	mov	edx, DWORD PTR [eax+4]
	mov	esi, edx
	sar	esi, 16					; 00000010H
	and	esi, 255				; 000000ffH
	movzx	ecx, dl
	shl	ecx, 16					; 00000010H
	and	edx, -16711936				; ff00ff00H
	or	esi, ecx
	or	esi, edx
	mov	DWORD PTR [edi-20], esi
	mov	edx, DWORD PTR [ebx+edi-16]
	mov	esi, edx
	sar	esi, 16					; 00000010H
	and	esi, 255				; 000000ffH
	movzx	ecx, dl
	shl	ecx, 16					; 00000010H
	and	edx, -16711936				; ff00ff00H
	or	esi, ecx
	or	esi, edx
	mov	DWORD PTR [edi-16], esi
	mov	edx, DWORD PTR [eax+12]
	mov	esi, edx
	sar	esi, 16					; 00000010H
	add	eax, 16					; 00000010H
	movzx	ecx, dl
	and	esi, 255				; 000000ffH
	shl	ecx, 16					; 00000010H
	and	edx, -16711936				; ff00ff00H
	or	esi, ecx
	or	esi, edx
	mov	DWORD PTR [edi-12], esi
	cmp	eax, ebp
	jb	$LL2@Base42_Cop
	pop	edi
	pop	esi
	pop	ebx
$LN1@Base42_Cop:
	pop	ebp
; Line 174
	ret	0
_Base42_CopyFlipC ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _Base42_CopyFlipB
_TEXT	SEGMENT
_i2$1$ = 8						; size = 4
_ibuf$ = 8						; size = 4
_i3$1$ = 12						; size = 4
_obuf$ = 12						; size = 4
_i1$1$ = 16						; size = 4
_n$ = 16						; size = 4
_Base42_CopyFlipB PROC					; COMDAT
; File f:\bgb.proj.deeptails\tst_base42.c
; Line 121
	mov	eax, DWORD PTR _n$[esp-4]
	mov	edx, DWORD PTR _ibuf$[esp-4]
	add	eax, 3
	and	eax, -4					; fffffffcH
	lea	eax, DWORD PTR [edx+eax*4]
; Line 123
	cmp	edx, eax
	jae	$LN1@Base42_Cop
; Line 120
	sub	eax, edx
	push	ebx
	push	esi
	mov	esi, DWORD PTR _obuf$[esp+4]
	dec	eax
	shr	eax, 4
	add	esi, 8
	push	edi
	lea	edi, DWORD PTR [edx+8]
	inc	eax
	npad	3
$LL2@Base42_Cop:
; Line 125
	mov	ecx, DWORD PTR [edi-4]
; Line 127
	lea	edi, DWORD PTR [edi+16]
	mov	ebx, DWORD PTR [edi-24]
; Line 140
	lea	esi, DWORD PTR [esi+16]
	mov	DWORD PTR _i1$1$[esp+8], ecx
	mov	edx, ebx
	mov	ecx, DWORD PTR [edi-16]
	sar	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	mov	DWORD PTR _i2$1$[esp+8], ecx
	mov	ecx, DWORD PTR [edi-12]
	mov	DWORD PTR _i3$1$[esp+8], ecx
	movzx	ecx, bl
	and	ebx, -16711936				; ff00ff00H
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	or	edx, ebx
	mov	ebx, DWORD PTR _i1$1$[esp+8]
	mov	DWORD PTR [esi-24], edx
	mov	edx, ebx
	sar	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	ecx, bl
	shl	ecx, 16					; 00000010H
	and	ebx, -16711936				; ff00ff00H
	or	edx, ecx
	or	edx, ebx
	mov	ebx, DWORD PTR _i2$1$[esp+8]
	mov	DWORD PTR [esi-20], edx
	mov	edx, ebx
	sar	edx, 16					; 00000010H
	and	edx, 255				; 000000ffH
	movzx	ecx, bl
	shl	ecx, 16					; 00000010H
	and	ebx, -16711936				; ff00ff00H
	or	edx, ecx
	or	edx, ebx
	mov	ebx, DWORD PTR _i3$1$[esp+8]
	mov	DWORD PTR [esi-16], edx
	mov	edx, ebx
	sar	edx, 16					; 00000010H
	movzx	ecx, bl
	and	edx, 255				; 000000ffH
	shl	ecx, 16					; 00000010H
	and	ebx, -16711936				; ff00ff00H
	or	edx, ecx
	or	edx, ebx
	mov	DWORD PTR [esi-12], edx
	dec	eax
	jne	$LL2@Base42_Cop
	pop	edi
	pop	esi
	pop	ebx
$LN1@Base42_Cop:
; Line 142
	ret	0
_Base42_CopyFlipB ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _Base42_CopyFlipA
_TEXT	SEGMENT
_ibuf$ = 8						; size = 4
_obuf$ = 12						; size = 4
_cr$1$ = 16						; size = 4
_n$ = 16						; size = 4
_Base42_CopyFlipA PROC					; COMDAT
; File f:\bgb.proj.deeptails\tst_base42.c
; Line 102
	push	edi
; Line 106
	mov	edi, DWORD PTR _n$[esp]
	test	edi, edi
	jle	SHORT $LN1@Base42_Cop
	mov	ecx, DWORD PTR _ibuf$[esp]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _obuf$[esp+8]
	push	esi
	lea	eax, DWORD PTR [ecx+3]
	lea	esi, DWORD PTR [ebp+2]
	sub	ebp, ecx
	npad	4
$LL3@Base42_Cop:
; Line 108
	movsx	ecx, BYTE PTR [eax-3]
	lea	eax, DWORD PTR [eax+4]
	movsx	edx, BYTE PTR [eax-6]
	lea	esi, DWORD PTR [esi+4]
; Line 109
	movsx	ebx, BYTE PTR [eax-4]
	mov	DWORD PTR _cr$1$[esp+12], ecx
; Line 110
	mov	cl, BYTE PTR [eax-5]
	mov	BYTE PTR [esi-6], cl
; Line 111
	mov	ecx, DWORD PTR _cr$1$[esp+12]
	mov	BYTE PTR [esi-5], dl
	mov	BYTE PTR [esi-4], cl
	mov	BYTE PTR [eax+ebp-4], bl
	dec	edi
	jne	SHORT $LL3@Base42_Cop
	pop	esi
	pop	ebp
	pop	ebx
$LN1@Base42_Cop:
	pop	edi
; Line 113
	ret	0
_Base42_CopyFlipA ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _Base42_DecUnit
_TEXT	SEGMENT
_iv$ = 8						; size = 4
_Base42_DecUnit PROC					; COMDAT
; File f:\bgb.proj.deeptails\tst_base42.c
; Line 94
	mov	edx, DWORD PTR _iv$[esp-4]
	movsx	eax, BYTE PTR [edx]
	movsx	eax, BYTE PTR _base42_dec[eax-64]
; Line 98
	imul	ecx, eax, 42
	movsx	eax, BYTE PTR [edx+1]
	movsx	eax, BYTE PTR _base42_dec[eax-64]
	add	ecx, eax
	imul	eax, ecx, 42
	movsx	ecx, BYTE PTR [edx+2]
	movsx	ecx, BYTE PTR _base42_dec[ecx-64]
	add	eax, ecx
; Line 99
	ret	0
_Base42_DecUnit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _Base42_EncUnit
_TEXT	SEGMENT
_iv$ = 8						; size = 4
_ov$ = 12						; size = 4
_Base42_EncUnit PROC					; COMDAT
; File f:\bgb.proj.deeptails\tst_base42.c
; Line 25
	push	esi
	push	edi
; Line 35
	mov	edi, DWORD PTR _iv$[esp+4]
	mov	eax, -2045222521			; 86186187H
	mul	edi
	mov	esi, edi
; Line 37
	mov	eax, -2045222521			; 86186187H
	sub	esi, edx
	shr	esi, 1
	add	esi, edx
	shr	esi, 5
	mul	esi
; Line 83
	mov	eax, DWORD PTR _base42_enc
	mov	ecx, esi
	sub	ecx, edx
	shr	ecx, 1
	add	ecx, edx
	mov	edx, DWORD PTR _ov$[esp+4]
	shr	ecx, 5
	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR [edx], al
	imul	eax, ecx, 42
; Line 84
	mov	ecx, DWORD PTR _base42_enc
	sub	ecx, eax
	movzx	eax, BYTE PTR [ecx+esi]
	mov	BYTE PTR [edx+1], al
; Line 85
	mov	ecx, DWORD PTR _base42_enc
	imul	eax, esi, 42
	sub	ecx, eax
	movzx	eax, BYTE PTR [ecx+edi]
	pop	edi
	mov	BYTE PTR [edx+2], al
; Line 86
	xor	eax, eax
	pop	esi
; Line 87
	ret	0
_Base42_EncUnit ENDP
_TEXT	ENDS
END
